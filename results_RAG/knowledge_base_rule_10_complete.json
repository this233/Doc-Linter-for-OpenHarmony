{
  "规则ID": 10,
  "规则名称": "重复词和空格",
  "规则描述": "待提取 - 重复词和空格的规则描述",
  "正面示例": [
    {
      "defect_id": 103576,
      "sentence": "从API version 11开始，该接口支持在原子化服务中使用。        |",
      "reference_sentence": "",
      "line_num": 834,
      "context": "",
      "用户拒绝的修改": "从API version 11开始，该接口支持在原子化服务中使用。|",
      "注意事项": "修复时应使用正则表达式精准识别连续空格及句末多余空格，避免仅删除单个空格导致残留；同时需区分中英文语境下空格规范，保留必要间隔避免过度修正。"
    },
    {
      "defect_id": 103575,
      "sentence": "从API version 11开始，该接口支持在原子化服务中使用。        |",
      "reference_sentence": "",
      "line_num": 814,
      "context": "",
      "用户拒绝的修改": "从API version 11开始，该接口支持在原子化服务中使用。|",
      "注意事项": "修复空格问题时需精确识别句末/标点后的多余空格，避免误判代码块或格式中的必要空格；建议在建议中明确标注空格位置（如\"|\"符号）以增强修改依据的可视性。"
    },
    {
      "defect_id": 402782,
      "sentence": "   输出结果如下所示：",
      "reference_sentence": "",
      "line_num": 183,
      "context": "{\"178\":\"     ```ts\",\"179\":\"     let options: xml.ParseOptions = {supportDoctype:true, ignoreNameSpace:true, tokenValueCallbackFunction:func};\",\"180\":\"     that.parseXml(options);\",\"181\":\"     ```\",\"182\":\"\",\"183\":\"   输出结果如下所示：\",\"184\":\"\",\"185\":\"\\t```\",\"186\":\"\\t 0 0 // 0：<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为0\",\"187\":\"\\t 2 1 // 2：<note importance=\\\"high\\\" logged=\\\"true\\\"> 对应事件类型START_TAG值为2  1：深度为1\",\"188\":\"\\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2\"}",
      "用户拒绝的修改": "输出结果如下所示：",
      "注意事项": "修复多余空格时必须先检查上下文格式规范，优先保持代码块缩进方式和段落间距的统一性，避免因局部修正破坏文档整体排版结构。"
    },
    {
      "defect_id": 402784,
      "sentence": "\t 4 2 // 4：Play对应事件类型TEXT值为4  2：深度为2",
      "reference_sentence": "",
      "line_num": 189,
      "context": "{\"184\":\"\",\"185\":\"\\t```\",\"186\":\"\\t 0 0 // 0：<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为0\",\"187\":\"\\t 2 1 // 2：<note importance=\\\"high\\\" logged=\\\"true\\\"> 对应事件类型START_TAG值为2  1：深度为1\",\"188\":\"\\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2\",\"189\":\"\\t 4 2 // 4：Play对应事件类型TEXT值为4  2：深度为2\",\"190\":\"\\t 3 2 // 3：</title>对应事件类型END_TAG值为3  2：深度为2\",\"191\":\"\\t 3 1 // 3：</note>对应事件类型END_TAG值为3  1：深度为1（与<note对应>）\",\"192\":\"\\t 1 0 // 1：对应事件类型END_DOCUMENT值为1  0：深度为0\",\"193\":\"\\t```\",\"194\":\"\"}",
      "用户拒绝的修改": "\t4 2 // 4：Play对应事件类型TEXT值为4 2：深度为2",
      "注意事项": "修复时应严格保持注释项之间的双空格分隔格式，确保与上下文注释结构一致；修改前需核对相邻行的标点间距模式，避免破坏原有对齐规范。"
    },
    {
      "defect_id": 402783,
      "sentence": "\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2",
      "reference_sentence": "",
      "line_num": 188,
      "context": "{\"183\":\"   输出结果如下所示：\",\"184\":\"\",\"185\":\"\\t```\",\"186\":\"\\t 0 0 // 0：<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为0\",\"187\":\"\\t 2 1 // 2：<note importance=\\\"high\\\" logged=\\\"true\\\"> 对应事件类型START_TAG值为2  1：深度为1\",\"188\":\"\\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2\",\"189\":\"\\t 4 2 // 4：Play对应事件类型TEXT值为4  2：深度为2\",\"190\":\"\\t 3 2 // 3：</title>对应事件类型END_TAG值为3  2：深度为2\",\"191\":\"\\t 3 1 // 3：</note>对应事件类型END_TAG值为3  1：深度为1（与<note对应>）\",\"192\":\"\\t 1 0 // 1：对应事件类型END_DOCUMENT值为1  0：深度为0\",\"193\":\"\\t```\"}",
      "用户拒绝的修改": "\t2 2 // 2：<title>对应事件类型START_TAG值为2 2：深度为2",
      "注意事项": "修复时应优先保持原有注释格式的对齐和分隔符使用习惯，删除多余空格前需确认是否属于排版结构的一部分（例如数字间分隔符），避免破坏代码注释的可读性。"
    },
    {
      "defect_id": 402781,
      "sentence": "   输出结果如下所示：",
      "reference_sentence": "",
      "line_num": 138,
      "context": "{\"133\":\"    let options: xml.ParseOptions = {supportDoctype:true, ignoreNameSpace:true, attributeValueCallbackFunction:func};\",\"134\":\"    that.parseXml(options);\",\"135\":\"    console.info(str); // 一次打印出所有的属性及其值\",\"136\":\"    ```\",\"137\":\"\",\"138\":\"   输出结果如下所示：\",\"139\":\"   ```\",\"140\":\"   importance high logged true // note节点的属性及属性值\",\"141\":\"   ```\",\"142\":\"\",\"143\":\"\"}",
      "用户拒绝的修改": "输出结果如下所示：",
      "注意事项": "修复空格时应优先检查上下文格式一致性，避免破坏原有代码缩进或文档结构；在涉及代码块等结构化内容时需保留用户原有的分层缩进规则，仅修正非功能性冗余空格。"
    },
    {
      "defect_id": 402785,
      "sentence": "\t 3 2 // 3：</title>对应事件类型END_TAG值为3  2：深度为2",
      "reference_sentence": "",
      "line_num": 190,
      "context": "{\"185\":\"\\t```\",\"186\":\"\\t 0 0 // 0：<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为0\",\"187\":\"\\t 2 1 // 2：<note importance=\\\"high\\\" logged=\\\"true\\\"> 对应事件类型START_TAG值为2  1：深度为1\",\"188\":\"\\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2\",\"189\":\"\\t 4 2 // 4：Play对应事件类型TEXT值为4  2：深度为2\",\"190\":\"\\t 3 2 // 3：</title>对应事件类型END_TAG值为3  2：深度为2\",\"191\":\"\\t 3 1 // 3：</note>对应事件类型END_TAG值为3  1：深度为1（与<note对应>）\",\"192\":\"\\t 1 0 // 1：对应事件类型END_DOCUMENT值为1  0：深度为0\",\"193\":\"\\t```\",\"194\":\"\",\"195\":\"\"}",
      "用户拒绝的修改": "\t3 2 // 3：</title>对应事件类型END_TAG值为3 2：深度为2",
      "注意事项": "修复时应优先保持注释块内原有空格格式的一致性，仅修正影响语义理解的多余空格（如连续多个空格），避免修改用于对齐或分隔的结构性空格。"
    },
    {
      "defect_id": 402786,
      "sentence": "\t 3 1 // 3：</note>对应事件类型END_TAG值为3  1：深度为1（与<note对应>）",
      "reference_sentence": "",
      "line_num": 191,
      "context": "{\"186\":\"\\t 0 0 // 0：<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为0\",\"187\":\"\\t 2 1 // 2：<note importance=\\\"high\\\" logged=\\\"true\\\"> 对应事件类型START_TAG值为2  1：深度为1\",\"188\":\"\\t 2 2 // 2：<title>对应事件类型START_TAG值为2  2：深度为2\",\"189\":\"\\t 4 2 // 4：Play对应事件类型TEXT值为4  2：深度为2\",\"190\":\"\\t 3 2 // 3：</title>对应事件类型END_TAG值为3  2：深度为2\",\"191\":\"\\t 3 1 // 3：</note>对应事件类型END_TAG值为3  1：深度为1（与<note对应>）\",\"192\":\"\\t 1 0 // 1：对应事件类型END_DOCUMENT值为1  0：深度为0\",\"193\":\"\\t```\",\"194\":\"\",\"195\":\"\",\"196\":\"\"}",
      "用户拒绝的修改": "\t3 1 // 3：</note>对应事件类型END_TAG值为3 1：深度为1（与<note对应>）",
      "注意事项": "修复时应严格区分数字间隔与注释分隔符的空格数量，确保注释部分的双斜杠\"//\"后仅保留一个空格，并检查数字间是否因对齐需求存在必要空格（如上下文中的\"\\t 2 1\"格式）。"
    },
    {
      "defect_id": 404554,
      "sentence": "current napi interface cannot run in multi-thread, thread id: <env tid>, current thread id: <current tid>  ",
      "reference_sentence": "",
      "line_num": 339,
      "context": "{\"334\":\"\",\"335\":\"若无特殊说明，本章节所描述的维测手段，在启用ArkTS运行时多线程检测开关的前提下，会在第一现场中断进程。\",\"336\":\"\",\"337\":\"> **关键日志**\",\"338\":\">\",\"339\":\"> current napi interface cannot run in multi-thread, thread id: &lt;env tid&gt;, current thread id: &lt;current tid&gt;\",\"340\":\"\",\"341\":\"该维测手段覆盖范围如下：\",\"342\":\"\",\"343\":\"1. napi_add_env_cleanup_hook*\",\"344\":\"2. napi_remove_env_cleanup_hook*\"}",
      "用户拒绝的修改": "current napi interface cannot run in multi-thread, thread id: <env tid>, current thread id: <current tid>",
      "注意事项": "修复时应同步检查特殊符号转义规范（如尖括号需转为&lt;&gt;），并优先保持文档标记语言的语法正确性，避免仅聚焦空格问题而忽略上下文格式要求。"
    },
    {
      "defect_id": 428440,
      "sentence": "生生效",
      "reference_sentence": "",
      "line_num": 117,
      "context": "{\"112\":\"```\",\"113\":\"\",\"114\":\"| 隔离宏 | root版本 | root版本开发者模式 | user版本 | user版本开发者模式 |\",\"115\":\"| -------- | -------- | -------- | -------- | -------- |\",\"116\":\"| 未隔离的策略 | 生效 | 生效 | 生效 | 生效 |\",\"117\":\"| debug_only隔离的策略 | 生效 |生效 | 不生效 | 不生效 |\",\"118\":\"| developer_only隔离的策略 | 不生效 | 生效 | 不生效 | 生效 |\"}",
      "用户拒绝的修改": "生效",
      "注意事项": "修复重复词时必须先检查上下文结构（如表格对齐、代码格式），避免破坏原有排版；优先保留用户原始格式中的功能性空格，仅在确认重复词属于冗余内容时进行合并。"
    },
    {
      "defect_id": 430122,
      "sentence": " 中断",
      "reference_sentence": "",
      "line_num": 84,
      "context": "{\"79\":\"鸿蒙内部信号使用统计如下：\",\"80\":\"\",\"81\":\"| 编号 | 名称      | 备注             | 编号 | 名称                                        | 备注                      |\",\"82\":\"|------|-----------|-----------------|------|--------------------------------------------|---------------------------|\",\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\"}",
      "用户拒绝的修改": "中断",
      "注意事项": "修复表格内容时应优先保持列对齐的视觉一致性，若空格用于对齐排版则需保留；需结合上下文判断空格是否为格式需求而非冗余字符。"
    },
    {
      "defect_id": 430126,
      "sentence": " 中止信号",
      "reference_sentence": "",
      "line_num": 88,
      "context": "{\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\",\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\"}",
      "用户拒绝的修改": "中止信号",
      "注意事项": "修复空格时应优先检查表格对齐需求，保留用于格式对齐的功能性空格；处理重复词需结合上下文语义判断是否为排版需要（如列对齐分隔符），避免破坏结构化数据的视觉一致性。"
    },
    {
      "defect_id": 430125,
      "sentence": " 调试断点",
      "reference_sentence": "",
      "line_num": 87,
      "context": "{\"82\":\"|------|-----------|-----------------|------|--------------------------------------------|---------------------------|\",\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\",\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\"}",
      "用户拒绝的修改": "调试断点",
      "注意事项": "修复空格时应优先检查上下文表格对齐需求，保留必要的前导空格维持列对齐；避免机械删除所有空格破坏结构化数据的视觉一致性。"
    },
    {
      "defect_id": 430121,
      "sentence": " 控制终端挂起",
      "reference_sentence": "",
      "line_num": 83,
      "context": "{\"78\":\"\",\"79\":\"鸿蒙内部信号使用统计如下：\",\"80\":\"\",\"81\":\"| 编号 | 名称      | 备注             | 编号 | 名称                                        | 备注                      |\",\"82\":\"|------|-----------|-----------------|------|--------------------------------------------|---------------------------|\",\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\"}",
      "用户拒绝的修改": "控制终端挂起",
      "注意事项": "修复时应优先检查表格对齐需求，保留用于格式统一的前导空格；处理结构化数据时需结合上下文判断空格是否为排版需要而非冗余字符。"
    },
    {
      "defect_id": 430135,
      "sentence": " 程序终止请求",
      "reference_sentence": "",
      "line_num": 97,
      "context": "{\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\",\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\"}",
      "用户拒绝的修改": "程序终止请求",
      "注意事项": "修复时应优先保持表格列对齐格式，结合上下文判断空格是否为排版需要，避免机械删除导致格式错位；需区分多余空格和用于对齐的格式空格，确保修改后与其他行保持视觉一致性。"
    },
    {
      "defect_id": 431733,
      "sentence": "  中止信号",
      "reference_sentence": "",
      "line_num": 88,
      "context": "{\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\",\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\"}",
      "用户拒绝的修改": "中止信号",
      "注意事项": "修复前需确认上下文是否为表格对齐格式，保留必要的排版空格；区分内容空格和格式空格，避免误判结构对齐所需的空格为冗余字符。"
    },
    {
      "defect_id": 410950,
      "sentence": "TaskPool和Worker的对比 (TaskPool和Worker)",
      "reference_sentence": "",
      "line_num": 1,
      "context": "{\"1\":\"# TaskPool和Worker的对比 (TaskPool和Worker)\",\"2\":\"\",\"3\":\"\",\"4\":\"TaskPool和Worker的作用是为应用程序提供一个多线程的运行环境，用于处理耗时的计算任务或其他密集型任务。可以避免任务阻塞宿主线程，从而提高系统性能和资源利用率。\",\"5\":\"\",\"6\":\"\"}",
      "用户拒绝的修改": "TaskPool和Worker的对比",
      "注意事项": "修复时应优先保留用户明确标注需保留的括号内容，严格区分功能性重复（如术语强调）与冗余重复，确保格式修正不破坏原有信息结构和特殊标注用途。"
    },
    {
      "defect_id": 430140,
      "sentence": " 停止在终端输入",
      "reference_sentence": "",
      "line_num": 102,
      "context": "{\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\",\"104\":\"| 22   | SIGTTOU   |  后台写终端       | 45   | MUSL_SIGNAL_FDTRACK (SIGRTMIN + 10)         | 系统自留                  |\",\"105\":\"| 23   | SIGURG    |  套接字有紧急数据  |      |                                             |                          |\"}",
      "用户拒绝的修改": "停止在终端输入",
      "注意事项": "处理表格内容时需优先检查相邻单元格的空格对齐方式，保留必要的格式空格；修复前应确认\"多余空格\"是否属于文档排版的结构性需求。"
    },
    {
      "defect_id": 430127,
      "sentence": " 总线错误",
      "reference_sentence": "",
      "line_num": 89,
      "context": "{\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\",\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\"}",
      "用户拒绝的修改": "总线错误",
      "注意事项": "修复空格时必须优先检查上下文对齐需求（如表格列宽一致），避免机械删除空格破坏原有排版结构；对于重复词问题需结合语义判断是否为必要重复（如强调或固定术语）。"
    },
    {
      "defect_id": 434170,
      "sentence": " 套接字有紧急数据",
      "reference_sentence": "",
      "line_num": 106,
      "context": "{\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\",\"104\":\"| 22   | SIGTTOU   |  后台写终端       | 45   | MUSL_SIGNAL_FDTRACK (SIGRTMIN + 10)         | 系统自留                  |\",\"105\":\"| 23   | SIGURG    |  套接字有紧急数据  |      |                                             |                          |\"}",
      "用户拒绝的修改": "套接字有紧急数据",
      "注意事项": "在修复空格时应优先检查上下文表格对齐需求，保留用于格式对齐的必要空格；区分功能性空格和冗余空格时需结合视觉排版效果判断，避免破坏现有结构一致性。"
    },
    {
      "defect_id": 412907,
      "sentence": "### Sendable类必须继承自Sendable类",
      "reference_sentence": "",
      "line_num": 5,
      "context": "{\"1\":\"# Sendable使用规则与约束\",\"2\":\"\",\"3\":\"## 继承规则\",\"4\":\"\",\"5\":\"### Sendable类必须继承自Sendable类\",\"6\":\"\",\"7\":\"Sendable对象的布局和原型链不可变，而非Sendable对象可以通过特殊方式修改布局。因此，不允许互相继承。这里的类不包括变量，Sendable类不能继承自变量。\",\"8\":\"\",\"9\":\"**正例：**\",\"10\":\"\"}",
      "用户拒绝的修改": "### Sendable类必须继承自Sendable",
      "注意事项": "修复时应优先识别并保留技术文档中的固定术语和标签结构，避免因机械性去重破坏专有名词完整性；修改前需结合上下文确认重复词是否为刻意强调或术语组成部分。"
    },
    {
      "defect_id": 430134,
      "sentence": " 定时器信号",
      "reference_sentence": "",
      "line_num": 96,
      "context": "{\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\",\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\"}",
      "用户拒绝的修改": "定时器信号",
      "注意事项": "修复时必须结合上下文结构判断空格用途，特别注意表格对齐等格式需求，避免误删用于排版的对齐空格；优先保留文档格式完整性，仅移除真正冗余的空格而非用于视觉对齐的结构性空格。"
    },
    {
      "defect_id": 430138,
      "sentence": " 继续执行",
      "reference_sentence": "",
      "line_num": 100,
      "context": "{\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\",\"104\":\"| 22   | SIGTTOU   |  后台写终端       | 45   | MUSL_SIGNAL_FDTRACK (SIGRTMIN + 10)         | 系统自留                  |\",\"105\":\"| 23   | SIGURG    |  套接字有紧急数据  |      |                                             |                          |\"}",
      "用户拒绝的修改": "继续执行",
      "注意事项": "处理表格内容时应优先保持列对齐格式，检查相邻行是否存在使用前导空格进行视觉对齐的情况，避免单纯依据句首空格规则破坏表格整体结构。"
    },
    {
      "defect_id": 430142,
      "sentence": " 后台写终端",
      "reference_sentence": "",
      "line_num": 104,
      "context": "{\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\",\"104\":\"| 22   | SIGTTOU   |  后台写终端       | 45   | MUSL_SIGNAL_FDTRACK (SIGRTMIN + 10)         | 系统自留                  |\",\"105\":\"| 23   | SIGURG    |  套接字有紧急数据  |      |                                             |                          |\"}",
      "用户拒绝的修改": "后台写终端",
      "注意事项": "修复时必须优先检查上下文表格对齐需求，保留用于列宽对齐的结构性空格；区分文本内容错误与排版格式，避免将表格列对齐空格误判为多余字符。"
    },
    {
      "defect_id": 430143,
      "sentence": " 套接字有紧急数据",
      "reference_sentence": "",
      "line_num": 105,
      "context": "{\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\",\"104\":\"| 22   | SIGTTOU   |  后台写终端       | 45   | MUSL_SIGNAL_FDTRACK (SIGRTMIN + 10)         | 系统自留                  |\",\"105\":\"| 23   | SIGURG    |  套接字有紧急数据  |      |                                             |                          |\"}",
      "用户拒绝的修改": "套接字有紧急数据",
      "注意事项": "修复时应优先检查上下文对齐需求（如表格列宽），保留用于格式对齐的结构性空格；区分内容错误与排版空格，避免破坏原有数据布局的统一性。"
    },
    {
      "defect_id": 431741,
      "sentence": "  定时器信号",
      "reference_sentence": "",
      "line_num": 96,
      "context": "{\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\",\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\"}",
      "用户拒绝的修改": "定时器信号",
      "注意事项": "处理表格内容时需优先保持格式对齐，区分结构性空格与冗余空格；修复前应结合上下文确认是否为排版需要的合理空格，避免破坏表格结构完整性。"
    },
    {
      "defect_id": 430136,
      "sentence": " 协处理器栈错误",
      "reference_sentence": "",
      "line_num": 98,
      "context": "{\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\",\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\",\"100\":\"| 18   | SIGCONT   |  继续执行         | 41   | MUSL_SIGNAL_SAMPLE_STACK (SIGRTMIN + 6)    | 系统自留                  |\",\"101\":\"| 19   | SIGSTOP   |  强制停止         | 42   | MUSL_SIGNAL_LEAK_STACK (SIGRTMIN + 7)      | 系统自留                  |\",\"102\":\"| 20   | SIGTSTP   |  停止在终端输入   | 43   | MUSL_SIGNAL_RECYCLE_JEMALLOC (SIGRTMIN + 8) | 系统自留                  |\",\"103\":\"| 21   | SIGTTIN   |  后台读终端       | 44   | MUSL_SIGNAL_MEMCHECK (SIGRTMIN + 9)         | 系统自留                  |\"}",
      "用户拒绝的修改": "协处理器栈错误",
      "注意事项": "修复时应优先检查表格对齐需求，保留用于列宽匹配的格式空格；区分文本冗余空格和排版空格，确保修改不影响上下文视觉一致性。"
    },
    {
      "defect_id": 430132,
      "sentence": " 用户自定义信号 2",
      "reference_sentence": "",
      "line_num": 94,
      "context": "{\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\",\"91\":\"| 9    | SIGKILL   |  强制终止        | 32   | SIGTIMER                                   | 定时器定时信号             |\",\"92\":\"| 10   | SIGUSR1   |  用户自定义信号 1 | 33   | SIGCANCEL                                  | 线程取消信号               |\",\"93\":\"| 11   | SIGSEGV   |  无效内存访问     | 34   | SIGSYNCCALL                                | 同步调用信号               |\",\"94\":\"| 12   | SIGUSR2   |  用户自定义信号 2 | 35   | MUSL_SIGNAL_NATIVE_REMOTE (SIGRTMIN + 0)   | 系统自留                   |\",\"95\":\"| 13   | SIGPIPE   |  管道损坏         | 36   | MUSL_SIGNAL_HOOK (SIGRTMIN + 1)            | 系统自留                  |\",\"96\":\"| 14   | SIGALRM   |  定时器信号       | 37   | MUSL_SIGNAL_UNHOOK (SIGRTMIN + 2)          | 系统自留                  |\",\"97\":\"| 15   | SIGTERM   |  程序终止请求     | 38   | MUSL_SIGNAL_NATIVE_LOCAL (SIGRTMIN + 3)    | 系统自留                  |\",\"98\":\"| 16   | SIGSTKFLT |  协处理器栈错误    | 39  | MUSL_SIGNAL_JSHEAP (SIGRTMIN + 4)          | 系统自留                  |\",\"99\":\"| 17   | SIGCHLD   |  子进程退出/停止   | 40  | MUSL_SIGNAL_JSHEAP_PRIV (SIGRTMIN + 5)     | 系统自留                  |\"}",
      "用户拒绝的修改": "用户自定义信号 2",
      "注意事项": "修复空格时应优先检查上下文表格对齐需求，保留用于列对齐的必要前导空格；处理结构化文档时需识别排版意图，避免仅根据局部语法规则删除功能性空格。"
    },
    {
      "defect_id": 430123,
      "sentence": " 键盘退出",
      "reference_sentence": "",
      "line_num": 85,
      "context": "{\"80\":\"\",\"81\":\"| 编号 | 名称      | 备注             | 编号 | 名称                                        | 备注                      |\",\"82\":\"|------|-----------|-----------------|------|--------------------------------------------|---------------------------|\",\"83\":\"| 1    | SIGHUP    |  控制终端挂起    | 24   | SIGXCPU                                    | 超出 CPU 时间限制          | \",\"84\":\"| 2    | SIGINT    |  中断           | 25   | SIGXFSZ                                    | 文件超出大小限制            |\",\"85\":\"| 3    | SIGQUIT   |  键盘退出        | 26   | SIGVTALRM                                  | 虚拟定时器                 |\",\"86\":\"| 4    | SIGILL    |  非法指令        | 27   | SIGPROF                                    | profiling 计时器到期       |\",\"87\":\"| 5    | SIGTRAP   |  调试断点        | 28   | SIGWINCH                                   | 终端窗口大小变化           |\",\"88\":\"| 6    | SIGABRT   |  中止信号        | 29   | SIGIO                                      | I/O 可用通知               |\",\"89\":\"| 7    | SIGBUS    |  总线错误        | 30   | SIGPWR                                     | 电源故障                   |\",\"90\":\"| 8    | SIGFPE    |  算术异常        | 31   | SIGSYS                                     | 非法系统调用               |\"}",
      "用户拒绝的修改": "键盘退出",
      "注意事项": "修复空格时应优先检查表格对齐需求，保留必要的格式空格；在结构化文档中需区分多余空格和用于对齐的功能性空格，避免破坏视觉一致性。"
    },
    {
      "defect_id": 436467,
      "sentence": "onFinish(event:&nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 251,
      "context": "{\"246\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"247\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频暂停的回调函数。        |\",\"248\":\"\",\"249\":\"### onFinish\",\"250\":\"\",\"251\":\"onFinish(event:&nbsp;VoidCallback)\",\"252\":\"\",\"253\":\"播放结束时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"254\":\"\",\"255\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"256\":\"\"}",
      "用户拒绝的修改": "onFinish(event:VoidCallback)",
      "注意事项": "修复空格时需识别并保留特殊空格字符（如`&nbsp;`），优先检查代码块/表格中的格式约定，避免将语义化空格误判为冗余空格。"
    },
    {
      "defect_id": 436466,
      "sentence": "onPause(event:&nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 235,
      "context": "{\"230\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"231\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频播放的回调函数。        |\",\"232\":\"\",\"233\":\"### onPause\",\"234\":\"\",\"235\":\"onPause(event:&nbsp;VoidCallback)\",\"236\":\"\",\"237\":\"暂停时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"238\":\"\",\"239\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"240\":\"\"}",
      "用户拒绝的修改": "onPause(event:VoidCallback)",
      "注意事项": "修复时必须识别并保留HTML实体字符（如&nbsp;）的语义作用，在技术文档场景中需结合上下文判断特殊空格是否为格式排版需求，避免将合法排版符号误判为多余空格。"
    },
    {
      "defect_id": 441670,
      "sentence": "        .toolbarConfiguration([this.TooTmp, this.TooTmp, this.TooTmp])",
      "reference_sentence": "",
      "line_num": 134,
      "context": "{\"129\":\"          {\",\"130\":\"            value: \\\"\\\", icon: \\\"./image/ic_public_add.svg\\\", action: () => {\",\"131\":\"            }\",\"132\":\"          }\",\"133\":\"        ])\",\"134\":\"        .toolbarConfiguration([this.TooTmp, this.TooTmp, this.TooTmp])\",\"135\":\"      }\",\"136\":\"      .height('100%')\",\"137\":\"      .width('100%')\",\"138\":\"      .backgroundColor('#F1F3F5')\",\"139\":\"    }\"}",
      "用户拒绝的修改": "        .toolbarConfiguration([this.TooTmp])",
      "注意事项": "在修复重复词时需确认是否为冗余代码而非有意重复使用的变量，优先结合上下文判断数组或列表中的重复元素是否为功能需要，避免误删必要项。"
    },
    {
      "defect_id": 449082,
      "sentence": "## 亮点/特征 \r",
      "reference_sentence": "",
      "line_num": 4,
      "context": "{\"1\":\"# ArkTS卡片概述\",\"2\":\"以下内容介绍基于声明式范式ArkTS UI卡片开发。\",\"3\":\"\",\"4\":\"## 亮点/特征\",\"5\":\"1. 统一开发范式\",\"6\":\"\",\"7\":\"    - ArkTS卡片统一了卡片和应用页面的开发范式，应用页面的布局可以直接复用到卡片布局中，提升开发体验和开发效率。具体请参考图1 卡片工程结构对比。\",\"8\":\"\",\"9\":\"    **图1** 卡片工程结构对比   \"}",
      "用户拒绝的修改": "## 亮点/特征\r",
      "注意事项": "修复前需确认问题是否由当前修改引入，避免修改历史遗留问题；结合上下文和历史版本验证问题归属，确保修复针对正确来源。"
    },
    {
      "defect_id": 449084,
      "sentence": "    **图1** 卡片工程结构对比   \r",
      "reference_sentence": "",
      "line_num": 9,
      "context": "{\"4\":\"## 亮点/特征\",\"5\":\"1. 统一开发范式\",\"6\":\"\",\"7\":\"    - ArkTS卡片统一了卡片和应用页面的开发范式，应用页面的布局可以直接复用到卡片布局中，提升开发体验和开发效率。具体请参考图1 卡片工程结构对比。\",\"8\":\"\",\"9\":\"    **图1** 卡片工程结构对比   \",\"10\":\"    ![WidgetProject](figures/WidgetProject.png)\",\"11\":\"\",\"12\":\"2. 卡片能力增强\",\"13\":\"\",\"14\":\"    - 新增了动效的能力：ArkTS卡片开放了[属性动画](../reference/apis-arkui/arkui-ts/ts-animatorproperty.md)和[显式动画](../reference/apis-arkui/arkui-ts/ts-explicit-animation.md)的能力，使卡片的交互更加友好。\"}",
      "用户拒绝的修改": "    **图1** 卡片工程结构对比\r",
      "注意事项": "修复前需确认问题是否属于当前修改范围，并检查上下文格式一致性，避免对历史遗留问题或已有格式进行不必要调整。"
    },
    {
      "defect_id": 449086,
      "sentence": "## 实现原理 \r",
      "reference_sentence": "",
      "line_num": 18,
      "context": "{\"13\":\"\",\"14\":\"    - 新增了动效的能力：ArkTS卡片开放了[属性动画](../reference/apis-arkui/arkui-ts/ts-animatorproperty.md)和[显式动画](../reference/apis-arkui/arkui-ts/ts-explicit-animation.md)的能力，使卡片的交互更加友好。\",\"15\":\"    - 新增了自定义绘制的能力：ArkTS卡片开放了[Canvas](../reference/apis-arkui/arkui-ts/ts-components-canvas-canvas.md)画布组件的能力，卡片可以使用自定义绘制的能力构建更多样的显示和交互效果。\",\"16\":\"    - 允许卡片中运行逻辑代码：开放逻辑代码运行后很多业务逻辑可以在卡片内部自闭环，拓宽了卡片的业务适用场景。\",\"17\":\"\",\"18\":\"## 实现原理\",\"19\":\"\",\"20\":\"- 卡片使用方：显示卡片内容的宿主应用，控制卡片在宿主中展示的位置，当前仅系统应用可以作为卡片使用方。\",\"21\":\"\",\"22\":\"- 卡片提供方：提供卡片显示内容的应用，控制卡片的显示内容、控件布局以及控件点击事件。\",\"23\":\"\"}",
      "用户拒绝的修改": "## 实现原理\r",
      "注意事项": "修复前需确认问题是否由当前修改引入，结合上下文判断是否为历史遗留问题；避免对未变更的上下文区域进行无关空格或重复词修复，防止干扰用户原有内容。"
    },
    {
      "defect_id": 449088,
      "sentence": "    **图3** ArkTS卡片渲染服务运行原理  \r",
      "reference_sentence": "",
      "line_num": 31,
      "context": "{\"26\":\"- 卡片渲染服务：用于管理卡片渲染实例，渲染实例与卡片使用方的<!--Del-->[<!--DelEnd-->卡片组件<!--Del-->](../reference/apis-arkui/arkui-ts/ts-basic-components-formcomponent-sys.md)<!--DelEnd-->一一绑定。卡片渲染服务根据form_config.json配置的卡片信息运行widgets.abc文件的卡片页面代码进行渲染，并将渲染后的数据发送至卡片使用方对应的<!--Del-->[<!--DelEnd-->卡片组件<!--Del-->](../reference/apis-arkui/arkui-ts/ts-basic-components-formcomponent-sys.md)<!--DelEnd-->。\",\"27\":\"\",\"28\":\"**图2** ArkTS卡片实现原理  \",\"29\":\"![WidgetPrinciple](figures/WidgetPrinciple.png)\",\"30\":\"\",\"31\":\"**图3** ArkTS卡片渲染服务运行原理  \",\"32\":\"![WidgetRender](figures/WidgetRender.png)\",\"33\":\"\",\"34\":\"与JS卡片相比，ArkTS卡片支持在卡片中运行逻辑代码，为确保ArkTS卡片发生问题后不影响卡片使用方应用的使用，ArkTS卡片新增了卡片渲染服务用于运行卡片页面代码widgets.abc，卡片渲染服务由卡片管理服务管理。卡片使用方的每个卡片组件都对应了卡片渲染服务里的一个渲染实例，同一应用提供方的渲染实例运行在同一个ArkTS虚拟机运行环境中，不同应用提供方的渲染实例运行在不同的ArkTS虚拟机运行环境中，通过ArkTS虚拟机运行环境隔离不同应用提供方卡片之间的资源与状态。开发过程中需要注意的是globalThis对象的使用，相同应用提供方的卡片globalThis对象是同一个，不同应用提供方的卡片globalThis对象是不同的。\",\"35\":\"\",\"36\":\"## ArkTS卡片类型\"}",
      "用户拒绝的修改": "    **图3** ArkTS卡片渲染服务运行原理\r",
      "注意事项": "修复前需确认问题是否由当前修改引入，避免修改历史遗留格式问题；优先处理用户明确指出的问题范围，非必要不调整无关空格或重复词。"
    },
    {
      "defect_id": 450330,
      "sentence": "   | autoDesignWidth | 标识页面设计基准宽度是否自动计算。当配置为true时，designWidth将会被忽略，设计基准宽度由设备宽度与屏幕密度计算得出。 | 布尔值 | 可缺省，缺省值为false。 |",
      "reference_sentence": "",
      "line_num": 91,
      "context": "{\"86\":\"此标签标识window对象的内部结构说明。\",\"87\":\"\",\"88\":\"   | 属性名称 | 含义 | 数据类型 | 是否可缺省 |\",\"89\":\"   | -------- | -------- | -------- | -------- |\",\"90\":\"   | designWidth | 标识页面设计基准宽度。以此为基准，根据实际设备宽度来缩放元素大小。 | 数值 | 可缺省，缺省值为720px。 |\",\"91\":\"   | autoDesignWidth | 标识页面设计基准宽度是否自动计算。当配置为true时，designWidth将会被忽略，设计基准宽度由设备宽度与屏幕密度计算得出。 | 布尔值 | 可缺省，缺省值为false。 |\",\"92\":\"\",\"93\":\"### funInteractionParams标签\",\"94\":\"\",\"95\":\"此标签标识趣味交互类型互动卡片配置。funInteractionParams 和 sceneAnimationParams 同时配置时识别为趣味交互类型互动卡片。\",\"96\":\"\"}",
      "用户拒绝的修改": "| autoDesignWidth | 标识页面设计基准宽度是否自动计算。当配置为true时，designWidth将会被忽略，设计基准宽度由设备宽度与屏幕密度计算得出。 | 布尔值 | 可缺省，缺省值为false。 |",
      "注意事项": "修复时应严格限定修改范围，仅处理用户明确指出的问题点（如当前行的重复词/空格），避免修改上下文无关区域；需通过上下文对比确认问题是否由本次修改引入，防止误判历史遗留问题。"
    },
    {
      "defect_id": 449083,
      "sentence": "1. 统一开发范式 \r",
      "reference_sentence": "",
      "line_num": 5,
      "context": "{\"1\":\"# ArkTS卡片概述\",\"2\":\"以下内容介绍基于声明式范式ArkTS UI卡片开发。\",\"3\":\"\",\"4\":\"## 亮点/特征\",\"5\":\"1. 统一开发范式\",\"6\":\"\",\"7\":\"    - ArkTS卡片统一了卡片和应用页面的开发范式，应用页面的布局可以直接复用到卡片布局中，提升开发体验和开发效率。具体请参考图1 卡片工程结构对比。\",\"8\":\"\",\"9\":\"    **图1** 卡片工程结构对比   \",\"10\":\"    ![WidgetProject](figures/WidgetProject.png)\"}",
      "用户拒绝的修改": "1. 统一开发范式\r",
      "注意事项": "修复前必须确认修改内容是否属于用户当前提交的改动范围，避免修改文档原有格式；需检查上下文格式一致性，优先保持与相邻条目相同的缩进/空格风格。"
    },
    {
      "defect_id": 449085,
      "sentence": "2. 卡片能力增强 \r",
      "reference_sentence": "",
      "line_num": 12,
      "context": "{\"7\":\"    - ArkTS卡片统一了卡片和应用页面的开发范式，应用页面的布局可以直接复用到卡片布局中，提升开发体验和开发效率。具体请参考图1 卡片工程结构对比。\",\"8\":\"\",\"9\":\"    **图1** 卡片工程结构对比   \",\"10\":\"    ![WidgetProject](figures/WidgetProject.png)\",\"11\":\"\",\"12\":\"2. 卡片能力增强\",\"13\":\"\",\"14\":\"    - 新增了动效的能力：ArkTS卡片开放了[属性动画](../reference/apis-arkui/arkui-ts/ts-animatorproperty.md)和[显式动画](../reference/apis-arkui/arkui-ts/ts-explicit-animation.md)的能力，使卡片的交互更加友好。\",\"15\":\"    - 新增了自定义绘制的能力：ArkTS卡片开放了[Canvas](../reference/apis-arkui/arkui-ts/ts-components-canvas-canvas.md)画布组件的能力，卡片可以使用自定义绘制的能力构建更多样的显示和交互效果。\",\"16\":\"    - 允许卡片中运行逻辑代码：开放逻辑代码运行后很多业务逻辑可以在卡片内部自闭环，拓宽了卡片的业务适用场景。\",\"17\":\"\"}",
      "用户拒绝的修改": "2. 卡片能力增强\r",
      "注意事项": "修复前需确认问题是否由当前修改引入，优先核对上下文中的历史版本或用户指定范围，避免修正文档原有格式而非本次新增内容。"
    },
    {
      "defect_id": 450329,
      "sentence": "   | designWidth | 标识页面设计基准宽度。以此为基准，根据实际设备宽度来缩放元素大小。 | 数值 | 可缺省，缺省值为720px。 |",
      "reference_sentence": "",
      "line_num": 90,
      "context": "{\"85\":\"\",\"86\":\"此标签标识window对象的内部结构说明。\",\"87\":\"\",\"88\":\"   | 属性名称 | 含义 | 数据类型 | 是否可缺省 |\",\"89\":\"   | -------- | -------- | -------- | -------- |\",\"90\":\"   | designWidth | 标识页面设计基准宽度。以此为基准，根据实际设备宽度来缩放元素大小。 | 数值 | 可缺省，缺省值为720px。 |\",\"91\":\"   | autoDesignWidth | 标识页面设计基准宽度是否自动计算。当配置为true时，designWidth将会被忽略，设计基准宽度由设备宽度与屏幕密度计算得出。 | 布尔值 | 可缺省，缺省值为false。 |\",\"92\":\"\",\"93\":\"### funInteractionParams标签\",\"94\":\"\",\"95\":\"此标签标识趣味交互类型互动卡片配置。funInteractionParams 和 sceneAnimationParams 同时配置时识别为趣味交互类型互动卡片。\"}",
      "用户拒绝的修改": "| designWidth | 标识页面设计基准宽度。以此为基准，根据实际设备宽度来缩放元素大小。 | 数值 | 可缺省，缺省值为720px。 |",
      "注意事项": "修复前需确认空格是否为表格对齐的结构性格式而非错误冗余，并严格区分历史遗留问题与当前修改范围，避免修改未被用户明确指出的上下文内容。"
    },
    {
      "defect_id": 449089,
      "sentence": "## ArkTS卡片类型 \r",
      "reference_sentence": "",
      "line_num": 36,
      "context": "{\"31\":\"**图3** ArkTS卡片渲染服务运行原理  \",\"32\":\"![WidgetRender](figures/WidgetRender.png)\",\"33\":\"\",\"34\":\"与JS卡片相比，ArkTS卡片支持在卡片中运行逻辑代码，为确保ArkTS卡片发生问题后不影响卡片使用方应用的使用，ArkTS卡片新增了卡片渲染服务用于运行卡片页面代码widgets.abc，卡片渲染服务由卡片管理服务管理。卡片使用方的每个卡片组件都对应了卡片渲染服务里的一个渲染实例，同一应用提供方的渲染实例运行在同一个ArkTS虚拟机运行环境中，不同应用提供方的渲染实例运行在不同的ArkTS虚拟机运行环境中，通过ArkTS虚拟机运行环境隔离不同应用提供方卡片之间的资源与状态。开发过程中需要注意的是globalThis对象的使用，相同应用提供方的卡片globalThis对象是同一个，不同应用提供方的卡片globalThis对象是不同的。\",\"35\":\"\",\"36\":\"## ArkTS卡片类型\",\"37\":\"ArkTS卡片分为动态卡片、静态卡片、互动卡片三种类型。\",\"38\":\"\",\"39\":\"与动态卡片相比，静态卡片整体的运行框架和渲染流程和动态卡片是一致的。主要区别在于，卡片渲染服务将卡片内容渲染完毕后，卡片使用方会使用最后一帧渲染的数据作为静态图片显示，其次卡片渲染服务中的卡片实例会释放该卡片的所有运行资源以节省内存。因此频繁的刷新会导致静态卡片运行时资源不断的创建和销毁，增加卡片功耗。<br/>\",\"40\":\"\",\"41\":\"| 卡片类型 | 支持的能力 | 适用场景 | 优缺点 |\"}",
      "用户拒绝的修改": "## ArkTS卡片类型\r",
      "注意事项": "修复前需确认问题是否属于当前修改范围，避免处理用户未提及或非本次上下文引入的冗余空格/重复词；优先聚焦用户明确反馈的上下文区域，确保修改与当前任务强相关。"
    },
    {
      "defect_id": 450328,
      "sentence": "除了支持UI组件和布局能力，还支持通用事件能力和自定义动效能力。| 用于有复杂业务逻辑和交互的场景。例如：卡片页面图片的刷新、卡片内容的刷新等。|",
      "reference_sentence": "",
      "line_num": 82,
      "context": "{\"77\":\"此标签标识卡片是否为动态卡片（仅针对ArkTS卡片生效）。\",\"78\":\"\",\"79\":\"| 卡片类型 | 支持的能力 | 适用场景 | 优缺点 |\",\"80\":\"| ------- | ------ | ------- | ------- | \",\"81\":\"| 静态卡片 | 仅支持UI组件和布局能力。| 主要用于展示静态信息（UI相对固定），仅可以通过FormLink组件跳转到指定的UIAbility。| 功能简单但可以有效控制内存开销。|\",\"82\":\"| 动态卡片 | 除了支持UI组件和布局能力，还支持通用事件能力和自定义动效能力。 | 用于有复杂业务逻辑和交互的场景。例如：卡片页面图片的刷新、卡片内容的刷新等。| 功能丰富但内存开销较大。|\",\"83\":\"\",\"84\":\"### window标签\",\"85\":\"\",\"86\":\"此标签标识window对象的内部结构说明。\",\"87\":\"\"}",
      "用户拒绝的修改": "除了支持UI组件和布局能力，还支持通用事件能力和自定义动效能力。|用于有复杂业务逻辑和交互的场景。例如：卡片页面图片的刷新、卡片内容的刷新等。|",
      "注意事项": "修复时应严格限定在用户明确标注的问题范围内，避免修改未被提及的上下文内容；需先确认格式问题是否属于当前编辑会话的产物，对历史遗留问题应保持原有格式除非用户特别要求。"
    },
    {
      "defect_id": 450327,
      "sentence": "仅支持UI组件和布局能力。| 主要用于展示静态信息（UI相对固定），仅可以通过FormLink组件跳转到指定的UIAbility。|",
      "reference_sentence": "",
      "line_num": 81,
      "context": "{\"76\":\"\",\"77\":\"此标签标识卡片是否为动态卡片（仅针对ArkTS卡片生效）。\",\"78\":\"\",\"79\":\"| 卡片类型 | 支持的能力 | 适用场景 | 优缺点 |\",\"80\":\"| ------- | ------ | ------- | ------- | \",\"81\":\"| 静态卡片 | 仅支持UI组件和布局能力。| 主要用于展示静态信息（UI相对固定），仅可以通过FormLink组件跳转到指定的UIAbility。| 功能简单但可以有效控制内存开销。|\",\"82\":\"| 动态卡片 | 除了支持UI组件和布局能力，还支持通用事件能力和自定义动效能力。 | 用于有复杂业务逻辑和交互的场景。例如：卡片页面图片的刷新、卡片内容的刷新等。| 功能丰富但内存开销较大。|\",\"83\":\"\",\"84\":\"### window标签\",\"85\":\"\",\"86\":\"此标签标识window对象的内部结构说明。\"}",
      "用户拒绝的修改": "仅支持UI组件和布局能力。|主要用于展示静态信息（UI相对固定），仅可以通过FormLink组件跳转到指定的UIAbility。|",
      "注意事项": "修复空格时必须检查表格对齐规则和上下文格式一致性，优先保持Markdown表格管道符后的统一间隔；确认修改范围仅限当前问题上下文，避免改动其他已对齐内容。"
    },
    {
      "defect_id": 449087,
      "sentence": "    **图2** ArkTS卡片实现原理  \r",
      "reference_sentence": "",
      "line_num": 28,
      "context": "{\"23\":\"\",\"24\":\"- 卡片管理服务：用于管理系统中所添加卡片的常驻代理服务，提供[formProvider](../reference/apis-form-kit/js-apis-app-form-formProvider.md)<!--Del-->和[formHost](../reference/apis-form-kit/js-apis-app-form-formHost-sys.md)<!--DelEnd-->的接口能力，同时提供卡片对象的管理与使用以及卡片周期性刷新等能力。\",\"25\":\"\",\"26\":\"- 卡片渲染服务：用于管理卡片渲染实例，渲染实例与卡片使用方的<!--Del-->[<!--DelEnd-->卡片组件<!--Del-->](../reference/apis-arkui/arkui-ts/ts-basic-components-formcomponent-sys.md)<!--DelEnd-->一一绑定。卡片渲染服务根据form_config.json配置的卡片信息运行widgets.abc文件的卡片页面代码进行渲染，并将渲染后的数据发送至卡片使用方对应的<!--Del-->[<!--DelEnd-->卡片组件<!--Del-->](../reference/apis-arkui/arkui-ts/ts-basic-components-formcomponent-sys.md)<!--DelEnd-->。\",\"27\":\"\",\"28\":\"**图2** ArkTS卡片实现原理  \",\"29\":\"![WidgetPrinciple](figures/WidgetPrinciple.png)\",\"30\":\"\",\"31\":\"**图3** ArkTS卡片渲染服务运行原理  \",\"32\":\"![WidgetRender](figures/WidgetRender.png)\",\"33\":\"\"}",
      "用户拒绝的修改": "    **图2** ArkTS卡片实现原理\r",
      "注意事项": "修复前必须确认问题是否属于当前修改范围，检查上下文是否存在多个同类问题避免单点修复破坏格式一致性，特别注意文档中已存在的注释标记可能影响空格判断。"
    },
    {
      "defect_id": 480755,
      "sentence": "  | -------- | -------- |",
      "reference_sentence": "",
      "line_num": 26,
      "context": "{\"21\":\"**系统能力：** SystemCapability.Account.OsAccount\",\"22\":\"\",\"23\":\"**返回值：**\",\"24\":\"\",\"25\":\"  | 类型 | 说明 |\",\"26\":\"  | -------- | -------- |\",\"27\":\"  | [DistributedAccountAbility](#distributedaccountability) | 返回一个实例，实例提供查询和更新分布式账号登录状态方法。 |\",\"28\":\"\",\"29\":\"**示例：**\",\"30\":\"  ```ts\",\"31\":\"  const accountAbility: distributedAccount.DistributedAccountAbility = distributedAccount.getDistributedAccountAbility();\"}",
      "用户拒绝的修改": "| -------- | -------- |",
      "注意事项": "修复表格分隔线时应保留必要的连字符对齐格式，避免误删结构化文档中的有效空格；优先保持原始表格结构完整性，仅在确认多余空格影响内容呈现时进行修正。"
    },
    {
      "defect_id": 480759,
      "sentence": "  | -------- | -------- |",
      "reference_sentence": "",
      "line_num": 94,
      "context": "{\"89\":\"**需要权限：** ohos.permission.MANAGE_DISTRIBUTED_ACCOUNTS（仅系统应用可申请）或ohos.permission.GET_DISTRIBUTED_ACCOUNTS（仅系统应用可申请）或ohos.permission.DISTRIBUTED_DATASYNC\",\"90\":\"\",\"91\":\"**返回值：**\",\"92\":\"\",\"93\":\"  | 类型 | 说明 |\",\"94\":\"  | -------- | -------- |\",\"95\":\"  | Promise&lt;[DistributedInfo](#distributedinfo)&gt; | Promise对象，返回分布式账号信息对象。 |\",\"96\":\"\",\"97\":\"**错误码：**\",\"98\":\"\",\"99\":\"| 错误码ID | 错误信息|\"}",
      "用户拒绝的修改": "| -------- | -------- |",
      "注意事项": "修复空格前需确认是否为表格对齐的结构性空格，避免破坏文档排版格式；优先保持用户原有格式规范，仅在明确冗余时进行修正。"
    },
    {
      "defect_id": 480757,
      "sentence": "  | -------- | -------- | -------- | -------- |",
      "reference_sentence": "",
      "line_num": 51,
      "context": "{\"46\":\"**需要权限：** ohos.permission.MANAGE_DISTRIBUTED_ACCOUNTS（仅系统应用可申请）或ohos.permission.GET_DISTRIBUTED_ACCOUNTS（仅系统应用可申请）或ohos.permission.DISTRIBUTED_DATASYNC\",\"47\":\"\",\"48\":\"**参数：**\",\"49\":\"\",\"50\":\"  | 参数名 | 类型 | 必填 | 说明 |\",\"51\":\"  | -------- | -------- | -------- | -------- |\",\"52\":\"  | callback | AsyncCallback&lt;[DistributedInfo](#distributedinfo)&gt; | 是 | 回调参数。当获取分布式账号信息成功，err为undefined，data为获取到的分布式账号信息对象；否则为错误对象。 |\",\"53\":\"\",\"54\":\"**错误码：**\",\"55\":\"\",\"56\":\"| 错误码ID | 错误信息|\"}",
      "用户拒绝的修改": "| -------- | -------- | -------- | -------- |",
      "注意事项": "修复前必须确认文档格式规范（如Markdown表格竖线分隔符两侧空格为语法要求），避免将结构性空格误判为冗余；优先保留用户原始排版意图，仅在非语法必要位置处理重复词与空格。"
    },
    {
      "defect_id": 464725,
      "sentence": "系统能力： SystemCapability.ArkUI.ArkUI.Full",
      "reference_sentence": "",
      "line_num": 254,
      "context": "{\"249\":\"\",\"250\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"251\":\"\",\"252\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"253\":\"\",\"254\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"255\":\"\",\"256\":\"**参数：** \",\"257\":\"\",\"258\":\"| 参数名 | 类型                         | 必填 | 说明                     |\",\"259\":\"| ------ | ---------------------------- | ---- | ------------------------ |\"}",
      "用户拒绝的修改": "系统能力：SystemCapability.ArkUI.ArkUI.Full",
      "注意事项": "修复空格时需优先检查上下文格式一致性，确认冒号后空格是否为文档规范要求（如其他同类条目均保留单空格时不应删除），避免机械应用规则破坏整体格式统一性。"
    },
    {
      "defect_id": 478546,
      "sentence": "  - [划词服务](../reference/apis-basic-services-kit/js-apis-selectionInput-selectionManager.md)：提供划词信息监听、划词窗口管理能力。",
      "reference_sentence": "",
      "line_num": 31,
      "context": "{\"26\":\"- 数据文件处理：\",\"27\":\"  - [剪贴板](../reference/apis-basic-services-kit/js-apis-pasteboard.md)：提供内容复制粘贴能力，支持多种数据类型包括文本、HTML数据、URI、PixelMap等。\",\"28\":\"  - [压缩](../reference/apis-basic-services-kit/js-apis-zlib.md)：提供文件压缩解压缩的能力。\",\"29\":\"  - [打印](../reference/apis-basic-services-kit/js-apis-print.md)：提供基础文件打印的能力，比如传入文件进行打印、设置打印参数等。\",\"30\":\"  - [上传下载](../reference/apis-basic-services-kit/js-apis-request.md)：提供文件上传下载、后台传输代理的基础能力。\",\"31\":\"  - [划词服务](../reference/apis-basic-services-kit/js-apis-selectionInput-selectionManager.md)：提供划词信息监听、划词窗口管理能力。\",\"32\":\"\",\"33\":\"- 进程间/线程间通信：\",\"34\":\"  - [公共事件](../reference/apis-basic-services-kit/js-apis-commonEventManager.md)：提供进程间通信的能力，包括订阅、发布、退订公共事件等，相关开发指南请参考[公共事件简介](common-event/common-event-overview.md)。\",\"35\":\"  - [Emitter](../reference/apis-basic-services-kit/js-apis-emitter.md)：提供线程内通信的能力，包括订阅、发布、退订自定义事件等，相关开发指南请参考[使用Emitter进行线程间通信](common-event/itc-with-emitter.md)。\",\"36\":\"\"}",
      "用户拒绝的修改": "- [划词服务](../reference/apis-basic-services-kit/js-apis-selectionInput-selectionManager.md)：提供划词信息监听、划词窗口管理能力。",
      "注意事项": "修复时应严格检查上下文格式规范，确保列表项层级缩进统一（如子项前需保留两个空格），避免将正确嵌套格式误判为多余空格。"
    },
    {
      "defect_id": 463152,
      "sentence": "从API version 9开始，该接口支持在ArkTS卡片中使用。",
      "reference_sentence": "",
      "line_num": 21,
      "context": "{\"16\":\"\",\"17\":\"## 接口\",\"18\":\"\",\"19\":\"Polyline(options?: PolylineOptions)\",\"20\":\"\",\"21\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"22\":\"\",\"23\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"24\":\"\",\"25\":\"**参数：**\",\"26\":\"\"}",
      "用户拒绝的修改": "从APIversion9开始，该接口支持在ArkTS卡片中使用。",
      "注意事项": "修复空格时需优先识别并保留特定术语（如\"API version X\"）的固定格式，同时检查上下文是否存在同类用例确保格式一致性。"
    },
    {
      "defect_id": 464724,
      "sentence": "系统能力： SystemCapability.ArkUI.ArkUI.Full",
      "reference_sentence": "",
      "line_num": 236,
      "context": "{\"231\":\"\",\"232\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"233\":\"\",\"234\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"235\":\"\",\"236\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"237\":\"\",\"238\":\"**参数：** \",\"239\":\"\",\"240\":\"| 参数名 | 类型                                                         | 必填 | 说明                       |\",\"241\":\"| ------ | ------------------------------------------------------------ | ---- | -------------------------- |\"}",
      "用户拒绝的修改": "系统能力：SystemCapability.ArkUI.ArkUI.Full",
      "注意事项": "修复时应先检查上下文格式惯例，确保标点后的空格处理与相邻条目保持一致；避免机械删除所有空格，需区分文档排版所需的格式空格与冗余空格。"
    },
    {
      "defect_id": 470654,
      "sentence": "数据代理操作配置的数据结构。结构。",
      "reference_sentence": "",
      "line_num": 142,
      "context": "{\"137\":\"| ---------- | ---------------------------------------------------------| -------------- |\",\"138\":\"| SHARED_CONFIG  | 0                                                   | 表示应用之间的共享配置。 |\",\"139\":\"\",\"140\":\"## DataProxyConfig<sup>20+</sup>\",\"141\":\"\",\"142\":\"数据代理操作配置的数据结构。\",\"143\":\"\",\"144\":\"**系统能力：** SystemCapability.DistributedDataManager.DataShare.Consumer\",\"145\":\"\",\"146\":\"| 名称       | 类型                                                         | 必填 | 说明           |\",\"147\":\"| ---------- | ----------------------------------------------------------- | ---- | -------------- |\"}",
      "用户拒绝的修改": "数据代理操作配置的数据结构。",
      "注意事项": "修复重复词和空格时需结合上下文检查标点规范，若问题句位于表格/代码块等结构化内容中，应优先保留原始格式符号（如末尾句号/空格），避免破坏文档排版完整性。"
    },
    {
      "defect_id": 480323,
      "sentence": "是    | 是否可访问。true表示允许访问，false表示禁止访问。 |",
      "reference_sentence": "",
      "line_num": 432,
      "context": "{\"427\":\"\",\"428\":\"| 参数名        | 类型                      | 必填   | 说明                                |\",\"429\":\"| ------------ | ------------------------- | ---- | --------------------------------- |\",\"430\":\"| name         | string                    | 是    | 应用账号的名称。                           |\",\"431\":\"| bundleName   | string                    | 是    | 第三方应用的包名。                         |\",\"432\":\"| isAccessible | boolean                   | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"433\":\"| callback     | AsyncCallback&lt;void&gt; | 是    | 回调函数，如果设置成功，err为null，否则为错误对象。 |\",\"434\":\"\",\"435\":\"**错误码：**\",\"436\":\"\",\"437\":\"| 错误码ID | 错误信息|\"}",
      "用户拒绝的修改": "是 | 是否可访问。true表示允许访问，false表示禁止访问。 |",
      "注意事项": "修复表格内容时应优先保持原有列宽和对齐格式，避免破坏表格结构；处理Markdown表格时需特别留意管道符两侧的空格数量可能属于格式控制符而非冗余空格。"
    },
    {
      "defect_id": 463154,
      "sentence": "从API version 18开始，该接口支持在ArkTS卡片中使用。",
      "reference_sentence": "",
      "line_num": 38,
      "context": "{\"33\":\"\",\"34\":\"> **说明：**\",\"35\":\">\",\"36\":\"> 为规范匿名对象的定义，API 18版本修改了此处的元素定义。其中，保留了历史匿名对象的起始版本信息，会出现外层元素@since版本号高于内层元素版本号的情况，但这不影响接口的使用。\",\"37\":\"\",\"38\":\"**卡片能力：** 从API version 18开始，该接口支持在ArkTS卡片中使用。\",\"39\":\"\",\"40\":\"**原子化服务API：** 从API version 18开始，该接口支持在原子化服务中使用。\",\"41\":\"\",\"42\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"43\":\"\"}",
      "用户拒绝的修改": "从APIversion18开始，该接口支持在ArkTS卡片中使用。",
      "注意事项": "修复空格时需识别并保留技术术语中的固定空格（如\"API version\"），避免误删合法格式；修改前应核对上下文中的同类表述（如\"API version\"在文档中多次出现）确保一致性。"
    },
    {
      "defect_id": 463151,
      "sentence": "Polyline(options?: PolylineOptions)",
      "reference_sentence": "",
      "line_num": 19,
      "context": "{\"14\":\"无\",\"15\":\"\",\"16\":\"\",\"17\":\"## 接口\",\"18\":\"\",\"19\":\"Polyline(options?: PolylineOptions)\",\"20\":\"\",\"21\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"22\":\"\",\"23\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"24\":\"\"}",
      "用户拒绝的修改": "Polyline(options?:PolylineOptions)",
      "注意事项": "修复代码片段空格时需优先确认目标编程语言的格式规范（如TypeScript中类型注解冒号后应保留空格），避免机械删除符合语法惯例的空格；同时结合上下文区分文档中代码示例和普通文本的排版规则。"
    },
    {
      "defect_id": 464010,
      "sentence": "onPause(event: &nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 233,
      "context": "{\"228\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"229\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频播放的回调函数。        |\",\"230\":\"\",\"231\":\"### onPause\",\"232\":\"\",\"233\":\"onPause(event:&nbsp;VoidCallback)\",\"234\":\"\",\"235\":\"暂停时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"236\":\"\",\"237\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"238\":\"\"}",
      "用户拒绝的修改": "onPause(event: VoidCallback)",
      "注意事项": "修复时应区分普通空格与HTML特殊字符（如`&nbsp;`），优先保留代码块或格式敏感场景中的特殊空格；结合上下文判断空格是否属于排版需求（如参数对齐），避免机械删除所有非标准空格。"
    },
    {
      "defect_id": 480322,
      "sentence": "是    | 第三方应用的包名。                         |",
      "reference_sentence": "",
      "line_num": 431,
      "context": "{\"426\":\"**参数：**\",\"427\":\"\",\"428\":\"| 参数名        | 类型                      | 必填   | 说明                                |\",\"429\":\"| ------------ | ------------------------- | ---- | --------------------------------- |\",\"430\":\"| name         | string                    | 是    | 应用账号的名称。                           |\",\"431\":\"| bundleName   | string                    | 是    | 第三方应用的包名。                         |\",\"432\":\"| isAccessible | boolean                   | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"433\":\"| callback     | AsyncCallback&lt;void&gt; | 是    | 回调函数，如果设置成功，err为null，否则为错误对象。 |\",\"434\":\"\",\"435\":\"**错误码：**\",\"436\":\"\"}",
      "用户拒绝的修改": "是 | 第三方应用的包名。                         |",
      "注意事项": "修复表格内容时应优先检查列宽对齐规则，保留必要的格式空格（如|符号后的固定缩进），避免破坏表格视觉结构；仅针对单元格内部多余连续空格进行合并处理。"
    },
    {
      "defect_id": 480769,
      "sentence": "  | -------- | -------- |",
      "reference_sentence": "",
      "line_num": 342,
      "context": "{\"337\":\"  | accountInfo | [DistributedInfo](#distributedinfo) | 是 | 分布式账户信息。 |\",\"338\":\"\",\"339\":\"**返回值：**\",\"340\":\"\",\"341\":\"  | 类型 | 说明 |\",\"342\":\"  | -------- | -------- |\",\"343\":\"  | Promise&lt;void&gt; | Promise对象，无返回结果的Promise对象。 |\",\"344\":\"\",\"345\":\"**示例：**\",\"346\":\"  ```ts\",\"347\":\"  import { BusinessError } from '@kit.BasicServicesKit';\"}",
      "用户拒绝的修改": "| -------- | -------- |",
      "注意事项": "修复空格前需识别文档格式规范（如Markdown表格语法中分隔符两侧空格为必要结构），避免破坏原有排版；对表格、代码块等结构化内容应优先保留原始格式完整性。"
    },
    {
      "defect_id": 480771,
      "sentence": "  | -------- | -------- | -------- | -------- |",
      "reference_sentence": "",
      "line_num": 366,
      "context": "{\"361\":\"提供操作系统账号的分布式信息。\",\"362\":\"\",\"363\":\"**系统能力：** SystemCapability.Account.OsAccount\",\"364\":\"\",\"365\":\"| 名称 | 类型 | 必填 | 说明 |\",\"366\":\"| -------- | -------- | -------- | -------- |\",\"367\":\"| name | string |是 | 分布式账号名称，非空字符串。 |\",\"368\":\"| id | string |是 | 分布式账号UID，非空字符串。 |\",\"369\":\"| event | string |是 | 分布式账号登录状态，包括登录、登出、Token失效和注销，分别对应以下字符串：<br/>-&nbsp;Ohos.account.event.LOGIN<br/>-&nbsp;Ohos.account.event.LOGOUT<br/>-&nbsp;Ohos.account.event.TOKEN_INVALID<br/>-&nbsp;Ohos.account.event.LOGOFF |\",\"370\":\"| nickname<sup>9+</sup> | string |否 | 分布式账号的昵称，默认为空。 |\",\"371\":\"| avatar<sup>9+</sup> | string |否 | 分布式账号的头像，默认为空。 |\"}",
      "用户拒绝的修改": "| -------- | -------- | -------- | -------- |",
      "注意事项": "修复空格时需区分语法错误与格式对齐需求，保留表格中用于视觉对齐的空格；修改前应确认用户文档的格式规范，避免破坏原有排版结构。"
    },
    {
      "defect_id": 463153,
      "sentence": "从API version 11开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 23,
      "context": "{\"18\":\"\",\"19\":\"Polyline(options?: PolylineOptions)\",\"20\":\"\",\"21\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"22\":\"\",\"23\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"24\":\"\",\"25\":\"**参数：**\",\"26\":\"\",\"27\":\"| 参数名 | 类型 | 必填 | 说明 |\",\"28\":\"| -------- | -------- | -------- | -------- |\"}",
      "用户拒绝的修改": "从APIversion11开始，该接口支持在原子化服务中使用。",
      "注意事项": "在删除空格前需确认是否为术语或固定格式（如\"API version X\"为版本号标准写法），并参考上下文同类表述（如上下文\"API version 9\"保留空格）保持一致性。"
    },
    {
      "defect_id": 464723,
      "sentence": "系统能力： SystemCapability.ArkUI.ArkUI.Full",
      "reference_sentence": "",
      "line_num": 218,
      "context": "{\"213\":\"\",\"214\":\"**卡片能力：** 从API version 9开始，该接口支持在ArkTS卡片中使用。\",\"215\":\"\",\"216\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"217\":\"\",\"218\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"219\":\"\",\"220\":\"**参数：** \",\"221\":\"\",\"222\":\"| 参数名 | 类型                       | 必填 | 说明                                           |\",\"223\":\"| ------ | -------------------------- | ---- | ---------------------------------------------- |\"}",
      "用户拒绝的修改": "系统能力：SystemCapability.ArkUI.ArkUI.Full",
      "注意事项": "修复前需检查上下文格式一致性，确保冒号后空格处理符合文档现有惯例；优先保持同类条目格式统一，避免因机械应用规则破坏整体结构。"
    },
    {
      "defect_id": 465138,
      "sentence": " 划词事件信息。",
      "reference_sentence": "",
      "line_num": 200,
      "context": "{\"195\":\"  });\",\"196\":\"```\",\"197\":\"\",\"198\":\"## SelectionInfo\",\"199\":\"\",\"200\":\"划词事件信息。\",\"201\":\"\",\"202\":\"**系统能力：** SystemCapability.SelectionInput.Selection\",\"203\":\"\",\"204\":\"| 名称      | 类型 | 只读 | 可选 | 说明         |\",\"205\":\"| --------- | -------- | ---- | ---- | ------------ |\"}",
      "用户拒绝的修改": "划词事件信息。",
      "注意事项": "修复中文空格问题时需严格区分中英文排版规范，避免将中文语境下无空格习惯的词汇间正常分隔误判为多余空格；必须结合上下文确认实际存在多余空格后再进行修复，防止误报。"
    },
    {
      "defect_id": 480321,
      "sentence": "是    | 应用账号的名称。                           |",
      "reference_sentence": "",
      "line_num": 430,
      "context": "{\"425\":\"\",\"426\":\"**参数：**\",\"427\":\"\",\"428\":\"| 参数名        | 类型                      | 必填   | 说明                                |\",\"429\":\"| ------------ | ------------------------- | ---- | --------------------------------- |\",\"430\":\"| name         | string                    | 是    | 应用账号的名称。                           |\",\"431\":\"| bundleName   | string                    | 是    | 第三方应用的包名。                         |\",\"432\":\"| isAccessible | boolean                   | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"433\":\"| callback     | AsyncCallback&lt;void&gt; | 是    | 回调函数，如果设置成功，err为null，否则为错误对象。 |\",\"434\":\"\",\"435\":\"**错误码：**\"}",
      "用户拒绝的修改": "是 | 应用账号的名称。                           |",
      "注意事项": "在修复表格中的空格问题时，必须优先保持原有列宽对齐格式，即使存在连续空格也应视为固定排版元素保留，不可机械删除。修改前需确认上下文是否为需要维持视觉对齐的表格或代码块结构。"
    },
    {
      "defect_id": 452827,
      "sentence": "updateForm(formId: string, formBindingData: formBindingData.FormBindingData,callback: AsyncCallback&lt;void&gt;): void",
      "reference_sentence": "",
      "line_num": 126,
      "context": "{\"121\":\"}\",\"122\":\"```\",\"123\":\"\",\"124\":\"## formProvider.updateForm\",\"125\":\"\",\"126\":\"updateForm(formId: string, formBindingData: formBindingData.FormBindingData,callback: AsyncCallback&lt;void&gt;): void\",\"127\":\"\",\"128\":\"更新指定的卡片，使用callback异步回调。\",\"129\":\"\",\"130\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"131\":\"\"}",
      "用户拒绝的修改": "updateForm(formId: string, formBindingData: FormBindingData, callback: AsyncCallback&lt;void&gt;): void",
      "注意事项": "在修复重复词或空格时，需优先确认修改范围是否属于当前问题上下文，避免引入无关的历史遗留问题；同时应结合代码规范检查命名空间或模块引用格式（如 `formBindingData.FormBindingData` 可能是合法类型引用），避免误删必要前缀。"
    },
    {
      "defect_id": 464011,
      "sentence": "onFinish(event: &nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 249,
      "context": "{\"244\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"245\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频暂停的回调函数。        |\",\"246\":\"\",\"247\":\"### onFinish\",\"248\":\"\",\"249\":\"onFinish(event:&nbsp;VoidCallback)\",\"250\":\"\",\"251\":\"播放结束时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"252\":\"\",\"253\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"254\":\"\"}",
      "用户拒绝的修改": "onFinish(event: VoidCallback)",
      "注意事项": "在修复空格问题时需区分普通空格与特殊字符（如`&nbsp;`），优先检查上下文格式规范（如HTML/Markdown中非断空格的必要性），避免破坏代码对齐或文档渲染逻辑。"
    },
    {
      "defect_id": 465141,
      "sentence": "  具体页面的路径。",
      "reference_sentence": "",
      "line_num": 236,
      "context": "{\"231\":\"\",\"232\":\"**参数：**\",\"233\":\"\",\"234\":\"| 参数名   | 类型                   | 必填 | 说明     |\",\"235\":\"| -------- | ---------------------- | ---- | -------- |\",\"236\":\"| path | string | 是   |  具体页面的路径。 |\",\"237\":\"\",\"238\":\"**返回值：**\",\"239\":\"\",\"240\":\"| 类型   | 说明                             |\",\"241\":\"| ------- | ------------------------------ |\"}",
      "用户拒绝的修改": "具体页面的路径。",
      "注意事项": "修复前需检查上下文格式规范（如表格对齐需求），避免误删用于排版的前导/后置空格；优先保留结构性空格并区分内容文本与格式占位符。"
    },
    {
      "defect_id": 480754,
      "sentence": "getDistributedAccountAbility(): DistributedAccountAbility",
      "reference_sentence": "",
      "line_num": 17,
      "context": "{\"12\":\"import { distributedAccount } from '@kit.BasicServicesKit';\",\"13\":\"```\",\"14\":\"\",\"15\":\"## distributedAccount.getDistributedAccountAbility\",\"16\":\"\",\"17\":\"getDistributedAccountAbility(): DistributedAccountAbility\",\"18\":\"\",\"19\":\"获取分布式账号单实例对象。\",\"20\":\"\",\"21\":\"**系统能力：** SystemCapability.Account.OsAccount\",\"22\":\"\"}",
      "用户拒绝的修改": "getDistributedAccountAbility():DistributedAccountAbility",
      "注意事项": "修复空格问题时需优先检查上下文代码风格，若项目或文档中存在明确的冒号后空格惯例（如其他示例均保留空格），应遵循现有格式而非通用规则。"
    },
    {
      "defect_id": 464074,
      "sentence": "onPrepared(callback: Callback\\<PreparedInfo>)",
      "reference_sentence": "",
      "line_num": 298,
      "context": "{\"293\":\"\",\"294\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"295\":\"\",\"296\":\"### onPrepared\",\"297\":\"\",\"298\":\"onPrepared(callback: Callback\\\\<PreparedInfo>)\",\"299\":\"\",\"300\":\"视频准备完成时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"301\":\"\",\"302\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"303\":\"\"}",
      "用户拒绝的修改": "onPrepared(callback: Callback<PreparedInfo>)",
      "注意事项": "修复转义字符时需优先确认文档语法规范，区分代码示例中的尖括号是否需要转义；处理空格时应结合上下文判断是否为排版需求（如Markdown中反斜杠转义场景），避免误删功能性符号间的必要间距。"
    },
    {
      "defect_id": 480325,
      "sentence": "是    | 应用账号的名称。   |",
      "reference_sentence": "",
      "line_num": 475,
      "context": "{\"470\":\"\",\"471\":\"**参数：**\",\"472\":\"\",\"473\":\"| 参数名        | 类型     | 必填   | 说明        |\",\"474\":\"| ---------- | ------ | ---- | --------- |\",\"475\":\"| name       | string | 是    | 应用账号的名称。   |\",\"476\":\"| bundleName | string | 是    | 第三方应用的包名。 |\",\"477\":\"| isAccessible | boolean | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"478\":\"\",\"479\":\"**返回值：**\",\"480\":\"\"}",
      "用户拒绝的修改": "是 | 应用账号的名称。   |",
      "注意事项": "修复表格内容时需优先保持列宽对齐格式，避免破坏原有排版结构；处理多余空格前应确认上下文是否为固定格式表格，保留必要的对齐空格而非机械删除。"
    },
    {
      "defect_id": 480324,
      "sentence": "是    | 回调函数，如果设置成功，err为null，否则为错误对象。 |",
      "reference_sentence": "",
      "line_num": 433,
      "context": "{\"428\":\"| 参数名        | 类型                      | 必填   | 说明                                |\",\"429\":\"| ------------ | ------------------------- | ---- | --------------------------------- |\",\"430\":\"| name         | string                    | 是    | 应用账号的名称。                           |\",\"431\":\"| bundleName   | string                    | 是    | 第三方应用的包名。                         |\",\"432\":\"| isAccessible | boolean                   | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"433\":\"| callback     | AsyncCallback&lt;void&gt; | 是    | 回调函数，如果设置成功，err为null，否则为错误对象。 |\",\"434\":\"\",\"435\":\"**错误码：**\",\"436\":\"\",\"437\":\"| 错误码ID | 错误信息|\",\"438\":\"| ------- | -------|\"}",
      "用户拒绝的修改": "是 | 回调函数，如果设置成功，err为null，否则为错误对象。 |",
      "注意事项": "修复表格内容时需优先保持列宽对齐格式，使用等宽空格处理；区分文档排版空格与冗余空格，避免破坏原有表格结构。"
    },
    {
      "defect_id": 480326,
      "sentence": "是    | 第三方应用的包名。 |",
      "reference_sentence": "",
      "line_num": 476,
      "context": "{\"471\":\"**参数：**\",\"472\":\"\",\"473\":\"| 参数名        | 类型     | 必填   | 说明        |\",\"474\":\"| ---------- | ------ | ---- | --------- |\",\"475\":\"| name       | string | 是    | 应用账号的名称。   |\",\"476\":\"| bundleName | string | 是    | 第三方应用的包名。 |\",\"477\":\"| isAccessible | boolean | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"478\":\"\",\"479\":\"**返回值：**\",\"480\":\"\",\"481\":\"| 类型                  | 说明                    |\"}",
      "用户拒绝的修改": "是 | 第三方应用的包名。 |",
      "注意事项": "修复表格内容时应优先保持原有列宽和对齐格式，确认多余空格是否属于表格排版结构的一部分，避免破坏文档的视觉一致性。"
    },
    {
      "defect_id": 480355,
      "sentence": "### deleteOAuthToken<sup>(deprecated)</sup>",
      "reference_sentence": "",
      "line_num": 4326,
      "context": "{\"4321\":\"        console.log('deleteOAuthToken successful.');\",\"4322\":\"      }\",\"4323\":\"    });\",\"4324\":\"  ```\",\"4325\":\"\",\"4326\":\"### deleteOAuthToken<sup>(deprecated)</sup>\",\"4327\":\"\",\"4328\":\"deleteOAuthToken(name: string, owner: string, authType: string, token: string): Promise&lt;void&gt;\",\"4329\":\"\",\"4330\":\"删除指定应用账号的特定鉴权类型的授权令牌。使用Promise异步回调。\",\"4331\":\"\"}",
      "用户拒绝的修改": "### deleteOAuthToken<sup>(deprecated) - 使用Promise异步回调</sup>",
      "注意事项": "修复标题时应严格检查上下文是否存在重复描述，避免在标题中新增与下方内容重复的补充信息（如异步方式说明），保持标题简洁性仅保留必要标记（如deprecated）。"
    },
    {
      "defect_id": 480327,
      "sentence": "是    | 是否可访问。true表示允许访问，false表示禁止访问。 |",
      "reference_sentence": "",
      "line_num": 477,
      "context": "{\"472\":\"\",\"473\":\"| 参数名        | 类型     | 必填   | 说明        |\",\"474\":\"| ---------- | ------ | ---- | --------- |\",\"475\":\"| name       | string | 是    | 应用账号的名称。   |\",\"476\":\"| bundleName | string | 是    | 第三方应用的包名。 |\",\"477\":\"| isAccessible | boolean | 是    | 是否可访问。true表示允许访问，false表示禁止访问。 |\",\"478\":\"\",\"479\":\"**返回值：**\",\"480\":\"\",\"481\":\"| 类型                  | 说明                    |\",\"482\":\"| :------------------ | :-------------------- |\"}",
      "用户拒绝的修改": "是 | 是否可访问。true表示允许访问，false表示禁止访问。 |",
      "注意事项": "修复表格内容时应优先保持原有列宽和对齐格式，使用等宽空格替代多余空格而非直接删除，避免破坏表格可视化结构。"
    },
    {
      "defect_id": 483360,
      "sentence": "> **说明：** >",
      "reference_sentence": "",
      "line_num": 2114,
      "context": "{\"2109\":\"getOsAccountLocalIdFromProcess(callback: AsyncCallback&lt;number&gt;): void\",\"2110\":\"\",\"2111\":\"获取当前进程所属的系统账号ID，使用callback异步回调。\",\"2112\":\"\",\"2113\":\"> **说明：**\",\"2114\":\">\",\"2115\":\"> 从API version 7开始支持，从API version 9开始废弃。建议使用[getOsAccountLocalId](#getosaccountlocalid9)。\",\"2116\":\"\",\"2117\":\"**系统能力：** SystemCapability.Account.OsAccount\",\"2118\":\"\",\"2119\":\"**参数：**\"}",
      "用户拒绝的修改": "> **说明：**",
      "注意事项": "修复前必须结合上下文确认重复词是否属于不同函数或独立章节的合法内容，避免仅依据局部格式误删；优先检查空格是否实际影响格式一致性，再判断是否保留结构分隔作用的多余空格。"
    },
    {
      "defect_id": 483361,
      "sentence": "> **说明：** >",
      "reference_sentence": "",
      "line_num": 2146,
      "context": "{\"2141\":\"getOsAccountLocalIdFromProcess(): Promise&lt;number&gt;\",\"2142\":\"\",\"2143\":\"获取当前进程所属的系统账号ID，使用Promise异步回调。\",\"2144\":\"\",\"2145\":\"> **说明：**\",\"2146\":\">\",\"2147\":\"> 从API version 7开始支持，从API version 9开始废弃。建议使用[getOsAccountLocalId](#getosaccountlocalid9-1)。\",\"2148\":\"\",\"2149\":\"**系统能力：** SystemCapability.Account.OsAccount\",\"2150\":\"\",\"2151\":\"**返回值：**\"}",
      "用户拒绝的修改": "> **说明：**",
      "注意事项": "修复前需确认重复内容是否属于同一上下文，避免跨函数或跨章节误删；处理空格时应优先检查是否为结构性分隔符（如Markdown语法符号），避免破坏文档格式逻辑。"
    },
    {
      "defect_id": 489004,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1360,
      "context": "{\"1355\":\"          .height(\\\"100%\\\")\",\"1356\":\"      }\",\"1357\":\"    }\",\"1358\":\"    let wrap = wrapBuilder<Data[]>(WebBuilder);\",\"1359\":\"    // 用于控制和反馈对应的NodeContianer上的节点的行为，需要与NodeContainer一起使用。\",\"1360\":\"    export class myNodeController extends NodeController {\",\"1361\":\"      private rootnode: BuilderNode<Data[]> | null = null;\",\"1362\":\"      // 必须要重写的方法，用于构建节点数、返回节点挂载在对应NodeContianer中。\",\"1363\":\"      // 在对应NodeContianer创建的时候调用、或者通过rebuild方法调用刷新。\",\"1364\":\"      makeNode(uiContext: UIContext): FrameNode | null {\",\"1365\":\"        console.info(\\\" uicontext is undifined : \\\"+ (uiContext === undefined));\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "修复前必须全面检查上下文确认所有相同错误实例是否已被处理，避免重复修正已解决的问题；对于拼写错误类修改需核对用户历史操作记录，确保不重复提示已确认过的更正。"
    },
    {
      "defect_id": 483359,
      "sentence": "> **说明：** >",
      "reference_sentence": "",
      "line_num": 2082,
      "context": "{\"2077\":\"getCreatedOsAccountsCount(): Promise&lt;number&gt;\",\"2078\":\"\",\"2079\":\"获取已创建的系统账号数量，使用Promise异步回调。\",\"2080\":\"\",\"2081\":\"> **说明：**\",\"2082\":\">\",\"2083\":\"> 从API version 7开始支持，从API version 9开始废弃。建议使用[getOsAccountCount](#getosaccountcount9-1)。\",\"2084\":\"\",\"2085\":\"**需要权限：** ohos.permission.MANAGE_LOCAL_ACCOUNTS，该权限仅系统应用可申请。\",\"2086\":\"\",\"2087\":\"**系统能力：** SystemCapability.Account.OsAccount\"}",
      "用户拒绝的修改": "> **说明：**",
      "注意事项": "修复前需严格校验重复内容是否属于同一上下文，避免跨函数或跨章节误判；处理空格时应结合文档排版逻辑，优先保留结构性符号（如Markdown的层级缩进或换行符）。"
    },
    {
      "defect_id": 489005,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1362,
      "context": "{\"1357\":\"    }\",\"1358\":\"    let wrap = wrapBuilder<Data[]>(WebBuilder);\",\"1359\":\"    // 用于控制和反馈对应的NodeContianer上的节点的行为，需要与NodeContainer一起使用。\",\"1360\":\"    export class myNodeController extends NodeController {\",\"1361\":\"      private rootnode: BuilderNode<Data[]> | null = null;\",\"1362\":\"      // 必须要重写的方法，用于构建节点数、返回节点挂载在对应NodeContianer中。\",\"1363\":\"      // 在对应NodeContianer创建的时候调用、或者通过rebuild方法调用刷新。\",\"1364\":\"      makeNode(uiContext: UIContext): FrameNode | null {\",\"1365\":\"        console.info(\\\" uicontext is undifined : \\\"+ (uiContext === undefined));\",\"1366\":\"        if (this.rootnode != null) {\",\"1367\":\"          // 返回FrameNode节点。\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "修复重复词或拼写错误时，需全局搜索上下文确认所有相同错误实例是否已被用户手动修复，避免重复修正；优先检查用户反馈的具体行号及相邻语句，确保修复范围精准覆盖未更正内容。"
    },
    {
      "defect_id": 489008,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1374,
      "context": "{\"1369\":\"        }\",\"1370\":\"        // 返回null控制动态组件脱离绑定节点。\",\"1371\":\"        return null;\",\"1372\":\"      }\",\"1373\":\"      // 当布局大小发生变化时进行回调。\",\"1374\":\"      aboutToResize(size: Size) {\",\"1375\":\"        console.info(\\\"aboutToResize width : \\\" + size.width  +  \\\" height : \\\" + size.height );\",\"1376\":\"      }\",\"1377\":\"      // 当controller对应的NodeContainer在Appear的时候进行回调。\",\"1378\":\"      aboutToAppear() {\",\"1379\":\"        console.info(\\\"aboutToAppear\\\");\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "修复前需结合上下文确认拼写错误是否真实存在，优先校验代码专有名词和项目术语表，避免将正确但非常规拼写的专有词汇误判为错误。"
    },
    {
      "defect_id": 489003,
      "sentence": "创建NodeContianer",
      "reference_sentence": "",
      "line_num": 1359,
      "context": "{\"1354\":\"          .width(\\\"100%\\\")\",\"1355\":\"          .height(\\\"100%\\\")\",\"1356\":\"      }\",\"1357\":\"    }\",\"1358\":\"    let wrap = wrapBuilder<Data[]>(WebBuilder);\",\"1359\":\"    // 用于控制和反馈对应的NodeContianer上的节点的行为，需要与NodeContainer一起使用。\",\"1360\":\"    export class myNodeController extends NodeController {\",\"1361\":\"      private rootnode: BuilderNode<Data[]> | null = null;\",\"1362\":\"      // 必须要重写的方法，用于构建节点数、返回节点挂载在对应NodeContianer中。\",\"1363\":\"      // 在对应NodeContianer创建的时候调用、或者通过rebuild方法调用刷新。\",\"1364\":\"      makeNode(uiContext: UIContext): FrameNode | null {\"}",
      "用户拒绝的修改": "创建NodeContainer",
      "注意事项": "修复拼写错误时必须全面检查上下文中的重复实例，优先确认用户是否已标记过相同问题；对于代码类文本，需特别关注术语在多个位置的统一性。"
    },
    {
      "defect_id": 489006,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1363,
      "context": "{\"1358\":\"    let wrap = wrapBuilder<Data[]>(WebBuilder);\",\"1359\":\"    // 用于控制和反馈对应的NodeContianer上的节点的行为，需要与NodeContainer一起使用。\",\"1360\":\"    export class myNodeController extends NodeController {\",\"1361\":\"      private rootnode: BuilderNode<Data[]> | null = null;\",\"1362\":\"      // 必须要重写的方法，用于构建节点数、返回节点挂载在对应NodeContianer中。\",\"1363\":\"      // 在对应NodeContianer创建的时候调用、或者通过rebuild方法调用刷新。\",\"1364\":\"      makeNode(uiContext: UIContext): FrameNode | null {\",\"1365\":\"        console.info(\\\" uicontext is undifined : \\\"+ (uiContext === undefined));\",\"1366\":\"        if (this.rootnode != null) {\",\"1367\":\"          // 返回FrameNode节点。\",\"1368\":\"          return this.rootnode.getFrameNode();\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "修复前应全局检查上下文中的重复错误实例，确保一次性修正所有相同拼写问题；优先确认用户是否已手动处理过该问题，避免冗余提示。"
    },
    {
      "defect_id": 483349,
      "sentence": "### getOsAccountType<sup>9+</sup>",
      "reference_sentence": "",
      "line_num": 1360,
      "context": "{\"1355\":\"  } catch (e) {\",\"1356\":\"    console.error('getOsAccountType exception: ' + JSON.stringify(e));\",\"1357\":\"  }\",\"1358\":\"  ```\",\"1359\":\"\",\"1360\":\"### getOsAccountType<sup>9+</sup>\",\"1361\":\"\",\"1362\":\"getOsAccountType(): Promise&lt;OsAccountType&gt;\",\"1363\":\"\",\"1364\":\"查询当前进程所属的系统账号的账号类型。使用Promise异步回调。\",\"1365\":\"\"}",
      "用户拒绝的修改": "### getOsAccountType<sup>9+</sup>（重复）",
      "注意事项": "修复前需结合上下文确认重复内容是否为函数重载或版本差异等合法场景，避免将技术文档中的多版本支持或重载函数误判为冗余重复。"
    },
    {
      "defect_id": 480357,
      "sentence": "### setOAuthTokenVisibility<sup>(deprecated)</sup>",
      "reference_sentence": "",
      "line_num": 4365,
      "context": "{\"4360\":\"  }).catch((err: BusinessError) => {\",\"4361\":\"      console.error('deleteOAuthToken err: ' + JSON.stringify(err));\",\"4362\":\"  });\",\"4363\":\"  ```\",\"4364\":\"\",\"4365\":\"### setOAuthTokenVisibility<sup>(deprecated)</sup>\",\"4366\":\"\",\"4367\":\"setOAuthTokenVisibility(name: string, authType: string, bundleName: string, isVisible: boolean, callback: AsyncCallback&lt;void&gt;): void\",\"4368\":\"\",\"4369\":\"设置指定账号的特定鉴权类型的授权令牌对指定应用的可见性。使用callback异步回调。\",\"4370\":\"\"}",
      "用户拒绝的修改": "### setOAuthTokenVisibility<sup>(deprecated) - 设置授权令牌的可见性</sup>",
      "注意事项": "修复标题时仅修正重复词和空格，禁止在标题括号内补充功能描述（应保留在下方正文）；严格区分标题结构层级，保持API文档标题的简洁性和格式规范性。"
    },
    {
      "defect_id": 489009,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1377,
      "context": "{\"1372\":\"      }\",\"1373\":\"      // 当布局大小发生变化时进行回调。\",\"1374\":\"      aboutToResize(size: Size) {\",\"1375\":\"        console.info(\\\"aboutToResize width : \\\" + size.width  +  \\\" height : \\\" + size.height );\",\"1376\":\"      }\",\"1377\":\"      // 当controller对应的NodeContainer在Appear的时候进行回调。\",\"1378\":\"      aboutToAppear() {\",\"1379\":\"        console.info(\\\"aboutToAppear\\\");\",\"1380\":\"        // 切换到前台后，不需要停止渲染。\",\"1381\":\"        shouldInactive = false;\",\"1382\":\"      }\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "修复前需严格区分拼写错误与重复词/空格问题，优先通过上下文验证是否为代码专有名词（如变量名）后再进行修改，避免混淆错误类型导致误检。"
    },
    {
      "defect_id": 489007,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1364,
      "context": "{\"1359\":\"    // 用于控制和反馈对应的NodeContianer上的节点的行为，需要与NodeContainer一起使用。\",\"1360\":\"    export class myNodeController extends NodeController {\",\"1361\":\"      private rootnode: BuilderNode<Data[]> | null = null;\",\"1362\":\"      // 必须要重写的方法，用于构建节点数、返回节点挂载在对应NodeContianer中。\",\"1363\":\"      // 在对应NodeContianer创建的时候调用、或者通过rebuild方法调用刷新。\",\"1364\":\"      makeNode(uiContext: UIContext): FrameNode | null {\",\"1365\":\"        console.info(\\\" uicontext is undifined : \\\"+ (uiContext === undefined));\",\"1366\":\"        if (this.rootnode != null) {\",\"1367\":\"          // 返回FrameNode节点。\",\"1368\":\"          return this.rootnode.getFrameNode();\",\"1369\":\"        }\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "在修复拼写错误前需结合上下文确认是否为项目专用术语，优先通过代码变量关联性验证拼写一致性（如检查\"NodeContianer\"是否在代码中被明确定义为类名），避免将项目内部约定拼写误判为错误。"
    },
    {
      "defect_id": 491550,
      "sentence": "需要注册的事件类型。  |",
      "reference_sentence": "",
      "line_num": 952,
      "context": "{\"947\":\"**参数:**\",\"948\":\"\",\"949\":\"| 名称 | 描述 | \",\"950\":\"| -------- | -------- |\",\"951\":\"| node | 需要注册事件的节点对象。  | \",\"952\":\"| eventType | 需要注册的事件类型。  | \",\"953\":\"| targetId | 自定义事件ID，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  | \",\"954\":\"| userData | 自定义事件参数，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  |\",\"955\":\"\",\"956\":\"**返回：**\",\"957\":\"\"}",
      "用户拒绝的修改": "需要注册的事件类型。|",
      "注意事项": "修复时应优先识别Markdown表格对齐格式，保留单元格内结尾处用于控制换行的双空格；若空格属于文档排版元素（如表格/代码格式），即使存在视觉冗余也应维持原结构。"
    },
    {
      "defect_id": 491563,
      "sentence": "子节点对象。  |",
      "reference_sentence": "",
      "line_num": 1107,
      "context": "{\"1102\":\"**参数:**\",\"1103\":\"\",\"1104\":\"| 名称 | 描述 | \",\"1105\":\"| -------- | -------- |\",\"1106\":\"| parent | 父节点对象。  | \",\"1107\":\"| child | 子节点对象。  | \",\"1108\":\"\",\"1109\":\"**返回：**\",\"1110\":\"\",\"1111\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。\",\"1112\":\"\"}",
      "用户拒绝的修改": "子节点对象。|",
      "注意事项": "在修复表格内容时需优先确认空格是否为排版对齐所需，避免破坏原有格式一致性；对于Markdown表格中的尾部空格，应结合上下文判断是冗余字符还是视觉对齐设计。"
    },
    {
      "defect_id": 491533,
      "sentence": "在非UI线程调用函数操作已挂载到UI树上的节点时，函数返回空指针。在非UI线程调用函数操作已挂载到UI树上的节点时，函数返回空指针。",
      "reference_sentence": "",
      "line_num": 517,
      "context": "{\"512\":\"\",\"513\":\"**返回：**\",\"514\":\"\",\"515\":\"返回父节点的指针，如果没有父节点则返回空指针。\",\"516\":\"\",\"517\":\"在非UI线程调用函数操作已挂载到UI树上的节点时，函数返回空指针。\",\"518\":\"\",\"519\":\"**示例：**\",\"520\":\"```\",\"521\":\"ArkUI_NativeNodeAPI_1 *multiThreadNodeApi = nullptr;\",\"522\":\"OH_ArkUI_GetModuleInterface(ARKUI_MULTI_THREAD_NATIVE_NODE, ArkUI_NativeNodeAPI_1, multiThreadNodeApi);\"}",
      "用户拒绝的修改": "在非UI线程调用函数操作已挂载到UI树上的节点时，函数返回空指针。",
      "注意事项": "修复重复内容前需结合上下文判断是否为文档结构需要的有意重复，避免误删技术文档中通过重复强调关键信息的合理用法，必要时应与用户确认重复内容的实际用途。"
    },
    {
      "defect_id": 491551,
      "sentence": "自定义事件ID，当事件触发时在回调参数[ArkUI_NodeCustomEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodecustomevent) 中携带回来。  |",
      "reference_sentence": "",
      "line_num": 953,
      "context": "{\"948\":\"\",\"949\":\"| 名称 | 描述 | \",\"950\":\"| -------- | -------- |\",\"951\":\"| node | 需要注册事件的节点对象。  | \",\"952\":\"| eventType | 需要注册的事件类型。  | \",\"953\":\"| targetId | 自定义事件ID，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  | \",\"954\":\"| userData | 自定义事件参数，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  |\",\"955\":\"\",\"956\":\"**返回：**\",\"957\":\"\",\"958\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。\"}",
      "用户拒绝的修改": "自定义事件ID，当事件触发时在回调参数[ArkUI_NodeCustomEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodecustomevent) 中携带回来。|",
      "注意事项": "修复前需检查上下文是否存在统一格式规范（如链接后保留空格作为排版惯例），避免因机械删除空格破坏文档格式一致性。"
    },
    {
      "defect_id": 491560,
      "sentence": "事件回调统一入口函数。  |",
      "reference_sentence": "",
      "line_num": 1001,
      "context": "{\"996\":\"\",\"997\":\"**参数:**\",\"998\":\"\",\"999\":\"| 名称 | 描述 | \",\"1000\":\"| -------- | -------- |\",\"1001\":\"| eventReceiver | 事件回调统一入口函数。  | \",\"1002\":\"\",\"1003\":\"**示例：**\",\"1004\":\"```\",\"1005\":\"ArkUI_NativeNodeAPI_1 *multiThreadNodeApi = nullptr;\",\"1006\":\"OH_ArkUI_GetModuleInterface(ARKUI_MULTI_THREAD_NATIVE_NODE, ArkUI_NativeNodeAPI_1, multiThreadNodeApi);\"}",
      "用户拒绝的修改": "事件回调统一入口函数。|",
      "注意事项": "修复空格前需确认上下文格式需求，在表格或代码块中保留必要的对齐空格，避免破坏文档结构可读性。"
    },
    {
      "defect_id": 491487,
      "sentence": "| node | 用于添加组件自定义事件回调函数的对象。  | ",
      "reference_sentence": "",
      "line_num": 138,
      "context": "{\"133\":\"\",\"134\":\"**参数：**\",\"135\":\"\",\"136\":\"| 名称 | 描述 | \",\"137\":\"| -------- | -------- |\",\"138\":\"| node | 用于添加组件自定义事件回调函数的对象。  | \",\"139\":\"| eventReceiver | 组件自定义事件回调函数。  | \",\"140\":\"\",\"141\":\"**返回：**\",\"142\":\"\",\"143\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。 \"}",
      "用户拒绝的修改": "| node | 用于添加组件自定义事件回调函数的对象。 |",
      "注意事项": "修复时应先检查上下文格式一致性，避免破坏表格对齐；确认多余空格是否属于用户有意保留的Markdown表格对齐符号（如行尾双空格），勿机械删除。"
    },
    {
      "defect_id": 491452,
      "sentence": "## 组件事件注册解注册",
      "reference_sentence": "",
      "line_num": 21,
      "context": "{\"16\":\"| int32_t(\\\\* [setAttribute](#setattribute) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_NodeAttributeType](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype) attribute, const [ArkUI_AttributeItem](_ark_u_i___attribute_item.md) \\\\*item) | 设置node节点的属性。 | 支持 | 在非UI线程中操作不符合要求的节点时，接口返回错误码。 |\",\"17\":\"| const [ArkUI_AttributeItem](_ark_u_i___attribute_item.md) \\\\*(\\\\* [getAttribute](#getattribute) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_NodeAttributeType](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype) attribute) | 获取node节点的属性。 | 支持 | 在非UI线程中操作不符合要求的节点时，接口返回空指针。 |\",\"18\":\"| int32_t(\\\\* [resetAttribute](#resetattribute) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_NodeAttributeType](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype) attribute) | 重置node节点的属性为默认值。  | 支持 | 在非UI线程中操作不符合要求的节点时，接口返回错误码。 |\",\"19\":\"| int32_t(\\\\* [setLengthMetricUnit](#setlengthmetricunit) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_LengthMetricUnit](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_lengthmetricunit) unit) | 指定node节点的单位。 | 支持 | 在非UI线程中操作不符合要求的节点时，接口返回错误码。 | \",\"20\":\"\",\"21\":\"## 组件事件注册解注册\",\"22\":\"\",\"23\":\"| 接口名 | 描述 | 非UI线程调用 | 多线程规格 |\",\"24\":\"| -------- | ------- | ------- | ------- |  \",\"25\":\"| int32_t(\\\\* [registerNodeEvent](#registernodeevent) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_NodeEventType](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeeventtype) eventType, int32_t targetId, void \\\\*userData) | 向node节点注册事件。 | 支持 | 在非UI线程中操作不符合要求的节点时，接口返回错误码。 |\",\"26\":\"| void(\\\\* [unregisterNodeEvent](#unregisternodeevent) )([ArkUI_NodeHandle](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodehandle) node, [ArkUI_NodeEventType](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeeventtype) eventType) | node节点解注册事件。 | 支持 | 在非UI线程中操作不符合要求的节点时，接口调用无效。 |\"}",
      "用户拒绝的修改": "## 组件事件注册与解注册",
      "注意事项": "修复时应优先识别技术术语的固定搭配（如\"解注册\"是常见技术动作），避免强行拆分专业词汇；同时需结合上下文确认修改必要性，若术语使用规范且上下文统一则无需调整。"
    },
    {
      "defect_id": 491549,
      "sentence": "需要注册事件的节点对象。  |",
      "reference_sentence": "",
      "line_num": 951,
      "context": "{\"946\":\"\",\"947\":\"**参数:**\",\"948\":\"\",\"949\":\"| 名称 | 描述 | \",\"950\":\"| -------- | -------- |\",\"951\":\"| node | 需要注册事件的节点对象。  | \",\"952\":\"| eventType | 需要注册的事件类型。  | \",\"953\":\"| targetId | 自定义事件ID，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  | \",\"954\":\"| userData | 自定义事件参数，当事件触发时在回调参数[ArkUI_NodeEvent](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeevent-12) 中携带回来。  |\",\"955\":\"\",\"956\":\"**返回：**\"}",
      "用户拒绝的修改": "需要注册事件的节点对象。|",
      "注意事项": "修复前需检查上下文格式惯例，在Markdown表格等结构化内容中保留必要的对齐空格，避免破坏原有排版设计；严格区分文档格式需求与冗余字符，优先维护视觉一致性。"
    },
    {
      "defect_id": 491491,
      "sentence": "| eventReceiver | 组件事件回调函数。  | ",
      "reference_sentence": "",
      "line_num": 181,
      "context": "{\"176\":\"**参数:**\",\"177\":\"\",\"178\":\"| 名称 | 描述 | \",\"179\":\"| -------- | -------- |\",\"180\":\"| node | 用于添加组件事件回调函数的对象。  | \",\"181\":\"| eventReceiver | 组件事件回调函数。  | \",\"182\":\"\",\"183\":\"**返回：**\",\"184\":\"\",\"185\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。 \",\"186\":\"\"}",
      "用户拒绝的修改": "| eventReceiver | 组件事件回调函数。 |",
      "注意事项": "修复空格问题前需确认上下文格式要求（如Markdown表格对齐），避免过度修正不影响可读性的空格；优先保留用户原始排版意图，仅在明确影响文档结构时调整。"
    },
    {
      "defect_id": 506832,
      "sentence": "onStart(event:&nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 219,
      "context": "{\"214\":\"\",\"215\":\"除支持[通用事件](ts-component-general-events.md)外，还支持以下事件：\",\"216\":\"\",\"217\":\"### onStart\",\"218\":\"\",\"219\":\"onStart(event:&nbsp;VoidCallback)\",\"220\":\"\",\"221\":\"播放时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"222\":\"\",\"223\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"224\":\"\"}",
      "用户拒绝的修改": "onStart(event:VoidCallback)",
      "注意事项": "在修复空格问题时需优先识别并保留HTML实体字符（如&nbsp;），尤其针对代码块或技术文档场景应结合上下文判断空格是否属于语法结构或格式保留需求。"
    },
    {
      "defect_id": 491547,
      "sentence": "目标节点对象。  |",
      "reference_sentence": "",
      "line_num": 840,
      "context": "{\"835\":\"\",\"836\":\"**参数:**\",\"837\":\"\",\"838\":\"| 名称 | 描述 | \",\"839\":\"| -------- | -------- |\",\"840\":\"| node | 目标节点对象。  | \",\"841\":\"| Constraint | 约束尺寸。  | \",\"842\":\"\",\"843\":\"**返回：**\",\"844\":\"\",\"845\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。\"}",
      "用户拒绝的修改": "目标节点对象。|",
      "注意事项": "修复空格问题前需确认上下文格式要求（如Markdown表格对齐规则），避免删除用于排版的结构性空格；当用户明确拒绝修改时，优先保留原始格式并补充说明修复建议。"
    },
    {
      "defect_id": 506833,
      "sentence": "onPause(event:&nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 235,
      "context": "{\"230\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"231\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频播放的回调函数。        |\",\"232\":\"\",\"233\":\"### onPause\",\"234\":\"\",\"235\":\"onPause(event:&nbsp;VoidCallback)\",\"236\":\"\",\"237\":\"暂停时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"238\":\"\",\"239\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"240\":\"\"}",
      "用户拒绝的修改": "onPause(event:VoidCallback)",
      "注意事项": "在处理特殊空格字符（如`&nbsp;`）时需结合上下文判断用途，优先保留代码示例、表格等格式敏感场景中的非标准空格，避免将排版用空格误判为冗余字符。"
    },
    {
      "defect_id": 508519,
      "sentence": "### onError",
      "reference_sentence": "",
      "line_num": 128,
      "context": "{\"123\":\"\",\"124\":\"| 参数名                       | 类型   | 说明                                                         |\",\"125\":\"| ---------------------------- | ------ | ------------------------------------------------------------ |\",\"126\":\"| releaseCode                        | number | 对端Ability销毁时的code，0为正常销毁，1为异常销毁。                          |\",\"127\":\"\",\"128\":\"### onError\",\"129\":\"\",\"130\":\"onError(callback:[ErrorCallback](../../apis-basic-services-kit/js-apis-base.md#errorcallback))\",\"131\":\"\",\"132\":\"被拉起的Ability扩展在运行过程中发生异常时触发本回调。可通过回调参数中的code、name和message获取错误信息并做处理，业务错误码详细介绍请参见[UIExtension错误码](../errorcode-uiextension.md)。\",\"133\":\"\"}",
      "用户拒绝的修改": "###onError",
      "注意事项": "修复前需验证上下文中的Markdown标题语法规则（###后必须保留空格），并区分代码注释、普通文本等不同场景的空格使用规范，避免机械应用通用规则导致误判。"
    },
    {
      "defect_id": 489012,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1399,
      "context": "{\"1394\":\"        this.rootnode = new BuilderNode(uiContext);\",\"1395\":\"        // 创建动态Web组件。\",\"1396\":\"        this.rootnode.build(wrap, { url:url, controller:control });\",\"1397\":\"      }\",\"1398\":\"    }\",\"1399\":\"    // 创建Map保存所需要的NodeController。\",\"1400\":\"    let NodeMap:Map<string, myNodeController | undefined> = new Map();\",\"1401\":\"    // 创建Map保存所需要的WebViewController。\",\"1402\":\"    let controllerMap:Map<string, WebviewController | undefined> = new Map();\",\"1403\":\"    // 初始化需要UIContext 需在Ability获取。\",\"1404\":\"    export const createNWeb = (url: string, uiContext: UIContext) => {\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "在修复前需结合上下文确认是否为拼写错误而非格式问题，优先检查代码中相邻行的变量命名规范和语法特征，避免将正确格式的专有名词误判为重复词错误。"
    },
    {
      "defect_id": 508547,
      "sentence": "areaChangePlaceholder<sup>14+<sup>",
      "reference_sentence": "",
      "line_num": 226,
      "context": "{\"221\":\"| 名称               | 类型                                 | 必填 | 说明                                                                                                      |\",\"222\":\"| ----                 | ---------------------------------------- | ---- | ---------------                                                                                               |\",\"223\":\"| isTransferringCaller | boolean                                  | 否   | 在使用UIExtensionComponent嵌套时，设置当前UIExtensionComponent是否转发上一级的Caller信息。</br> 默认值：false |\",\"224\":\"| placeholder<sup>12+<sup> | [ComponentContent](../js-apis-arkui-ComponentContent.md)       | 否   | 设置占位符，在UIExtensionComponent与UIExtensionAbility建立连接前显示。 |\",\"225\":\"| dpiFollowStrategy<sup>12+<sup> | [DpiFollowStrategy](ts-container-ui-extension-component-sys.md#dpifollowstrategy12)                  | 否   | 提供接口支持设置DPI跟随宿主或跟随UIExtensionAbility。</br> 默认值：FOLLOW_UI_EXTENSION_ABILITY_DPI |\",\"226\":\"| areaChangePlaceholder<sup>14+<sup> | Record<string, [ComponentContent](../js-apis-arkui-ComponentContent.md)>       | 否   | 设置尺寸变化占位符，在UIExtensionComponent尺寸发生变化并且UIExtension内部渲染未完成时显示, key值支持\\\"FOLD_TO_EXPAND\\\"(折叠展开尺寸变化)、\\\"UNDEFINED\\\"(默认尺寸变化)。 |\",\"227\":\"| windowModeFollowStrategy<sup>18+<sup> | [WindowModeFollowStrategy](ts-container-ui-extension-component-sys.md#windowmodefollowstrategy18)    | 否   | 提供接口以支持设置窗口Mode，使其能够跟随宿主或UIExtensionAbility。</br> 默认值：FOLLOW_UI_EXTENSION_ABILITY_WINDOW_MODE |\",\"228\":\"\",\"229\":\"## DpiFollowStrategy<sup>12+</sup>\",\"230\":\"\",\"231\":\"**系统接口：** 此接口为系统接口。\"}",
      "用户拒绝的修改": "areaChangePlaceholder<sup>14+</sup>",
      "注意事项": "修复时应优先处理标签闭合等结构性错误而非次要空格问题，并检查上下文同类标记（如<sup>）的闭合模式确保一致性。"
    },
    {
      "defect_id": 491488,
      "sentence": "| eventReceiver | 组件自定义事件回调函数。  | ",
      "reference_sentence": "",
      "line_num": 139,
      "context": "{\"134\":\"**参数：**\",\"135\":\"\",\"136\":\"| 名称 | 描述 | \",\"137\":\"| -------- | -------- |\",\"138\":\"| node | 用于添加组件自定义事件回调函数的对象。  | \",\"139\":\"| eventReceiver | 组件自定义事件回调函数。  | \",\"140\":\"\",\"141\":\"**返回：**\",\"142\":\"\",\"143\":\"[ARKUI_ERROR_CODE_NO_ERROR](../reference/apis-arkui/_ark_u_i___native_module.md#arkui_errorcode)成功。 \",\"144\":\"\"}",
      "用户拒绝的修改": "| eventReceiver | 组件自定义事件回调函数。 |",
      "注意事项": "修复前需检查上下文格式一致性，避免在表格或代码等结构化内容中误删用于对齐的空格；优先遵循用户文档的现有格式规范而非通用排版规则。"
    },
    {
      "defect_id": 506834,
      "sentence": "onFinish(event:&nbsp;VoidCallback)",
      "reference_sentence": "",
      "line_num": 251,
      "context": "{\"246\":\"| ------ | --------------------------------------------- | ---- | ----------------------------------- |\",\"247\":\"| event  | [VoidCallback](ts-types.md#voidcallback12)    | 是   | 视频暂停的回调函数。        |\",\"248\":\"\",\"249\":\"### onFinish\",\"250\":\"\",\"251\":\"onFinish(event:&nbsp;VoidCallback)\",\"252\":\"\",\"253\":\"播放结束时触发该事件，支持[attributeModifier](ts-universal-attributes-attribute-modifier.md#attributemodifier)动态设置属性方法。\",\"254\":\"\",\"255\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"256\":\"\"}",
      "用户拒绝的修改": "onFinish(event:VoidCallback)",
      "注意事项": "修复时应识别并保留代码或文档中用于格式对齐的特殊空格（如`&nbsp;`），结合上下文判断参数列表中的空格是否属于语法必要格式，避免在API文档等场景误删关键排版字符。"
    },
    {
      "defect_id": 521636,
      "sentence": "此方法返回typedArray[index]被修改之前的值。  ",
      "reference_sentence": "",
      "line_num": 883,
      "context": "{\"878\":\"## xor\",\"879\":\"\",\"880\":\"static xor(typedArray: smalltypeArray, index: number, value: number): number  \",\"881\":\"\",\"882\":\"将typedArray[index]与value进行按位异或运算，结果写回typedArray[index]。  \",\"883\":\"此方法返回typedArray[index]被修改之前的值。  \",\"884\":\"此方法确保在typedArray[index]被修改之前，typedArray[index]不会发生其他线程的读写操作。  \",\"885\":\"\",\"886\":\"**参数：**\",\"887\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"888\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\"}",
      "用户拒绝的修改": "此方法返回typedArray[index]被修改之前的值。",
      "注意事项": "修复时应精确识别多余空格位置（如参数列表、标点前后或行末），避免误判中文句尾全角标点后的正常空格为错误；处理重复词需结合上下文语义判断是否为术语重复或排版错误。"
    },
    {
      "defect_id": 489010,
      "sentence": "NodeContianer",
      "reference_sentence": "",
      "line_num": 1383,
      "context": "{\"1378\":\"      aboutToAppear() {\",\"1379\":\"        console.info(\\\"aboutToAppear\\\");\",\"1380\":\"        // 切换到前台后，不需要停止渲染。\",\"1381\":\"        shouldInactive = false;\",\"1382\":\"      }\",\"1383\":\"      // 当controller对应的NodeContainer在Disappear的时候进行回调。\",\"1384\":\"      aboutToDisappear() {\",\"1385\":\"        console.info(\\\"aboutToDisappear\\\");\",\"1386\":\"      }\",\"1387\":\"      // 此函数为自定义函数，可作为初始化函数使用。\",\"1388\":\"      // 通过UIContext初始化BuilderNode，再通过BuilderNode中的build接口初始化@Builder中的内容。\"}",
      "用户拒绝的修改": "NodeContainer",
      "注意事项": "在修复拼写错误前需优先验证是否为项目专有名词或特定术语，同时结合上下文确认是否确实存在拼写错误（如通过代码库全局检索确认\"NodeContianer\"是否被其他文件引用），避免将特殊命名约定误判为错误。"
    },
    {
      "defect_id": 507423,
      "sentence": "- [ 媒体库视频（ArkTS）（API9）](https://gitee.com/openharmony/applications_app_samples/tree/master/code/BasicFeature/Media/VideoShow)",
      "reference_sentence": "",
      "line_num": 290,
      "context": "{\"285\":\"\",\"286\":\"## 相关实例\",\"287\":\"\",\"288\":\"针对Video组件开发，有以下相关实例可供参考：\",\"289\":\"\",\"290\":\"- [ 媒体库视频（ArkTS）（API9）](https://gitee.com/openharmony/applications_app_samples/tree/master/code/BasicFeature/Media/VideoShow)\",\"291\":\"\",\"292\":\"- [简易视频播放器（ArkTS）（API9）](https://gitee.com/openharmony/codelabs/tree/master/Media/SimpleVideo)\",\"293\":\"<!--RP1--><!--RP1End-->\"}",
      "用户拒绝的修改": "- [媒体库视频（ArkTS）（API9）](https://gitee.com/openharmony/applications_app_samples/tree/master/code/BasicFeature/Media/VideoShow)",
      "注意事项": "修复时应优先检查Markdown链接格式中括号内外的必要空格规则，避免误删用于对齐或视觉分隔的合理空格；同时需对比上下文条目格式一致性，确认是否为有意设计的排版样式后再进行修改。"
    },
    {
      "defect_id": 508521,
      "sentence": "### onDrawReady<sup>18+<sup>",
      "reference_sentence": "",
      "line_num": 165,
      "context": "{\"160\":\"> **说明：**\",\"161\":\">\",\"162\":\"> - 若UIExtensionAbility通过调用`terminateSelfWithResult`退出，其携带的信息会传给回调函数的入参。\",\"163\":\"> - 若UIExtensionAbility通过调用`terminateSelf`退出，上述回调函数的入参中，\\\"code\\\"取默认值\\\"0\\\"，\\\"want\\\"为\\\"undefined\\\"。\",\"164\":\"\",\"165\":\"### onDrawReady<sup>18+<sup>\",\"166\":\"\",\"167\":\"onDrawReady(callback: Callback\\\\<void>)\",\"168\":\"\",\"169\":\"被拉起的UIExtensionAbility绘制第一帧时触发本回调。\",\"170\":\"\"}",
      "用户拒绝的修改": "###onDrawReady<sup>18+<sup>",
      "注意事项": "修复前需确认文档格式规范（如Markdown标题语法要求`###`后必须加空格），优先检查上下文中的同类结构是否统一，避免将符合规范的格式误判为错误。"
    },
    {
      "defect_id": 508520,
      "sentence": "### onTerminated<sup>12+<sup>",
      "reference_sentence": "",
      "line_num": 144,
      "context": "{\"139\":\"\",\"140\":\"| 参数名                       | 类型   | 必填 | 说明                                                         |\",\"141\":\"| ---------------------------- | ------ | ------ | ------------------------------------------------------------ |\",\"142\":\"| err                        | [BusinessError](../../apis-basic-services-kit/js-apis-base.md#businesserror) | 否 | 报错信息。    |\",\"143\":\"\",\"144\":\"### onTerminated<sup>12+<sup>\",\"145\":\"\",\"146\":\"onTerminated(callback: Callback&lt;TerminationInfo&gt;)\",\"147\":\"\",\"148\":\"被拉起的UIExtensionAbility通过调用`terminateSelfWithResult`或者`terminateSelf`正常退出时，触发本回调函数。\",\"149\":\"\"}",
      "用户拒绝的修改": "###onTerminated<sup>12+<sup>",
      "注意事项": "修复时应优先识别并保留符合文档格式规范的必要空格（如Markdown标题语法中`###`后的空格），仅在确认空格确实违反上下文规则或导致格式异常时进行删除，避免误判语法结构中的合法空格为冗余。"
    },
    {
      "defect_id": 521582,
      "sentence": "| value     | bigint         | 是   | 执行运算的操作数。         |\r",
      "reference_sentence": "",
      "line_num": 613,
      "context": "{\"608\":\"**参数：**\",\"609\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"610\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\",\"611\":\"| typedArray | bigtypeArray                         | 是   | 要操作的数组。     |\",\"612\":\"| index     | number                               | 是   | typedArray中的索引。 |\",\"613\":\"| value     | bigint         | 是   | 执行运算的操作数。         |\",\"614\":\"\",\"615\":\"**返回值：** \",\"616\":\"| 类型        | 说明                         |\",\"617\":\"| ----------- | --------------------------- |\",\"618\":\"| bigint       | 返回要存储的新值value，对应smalltypeArray中的元素类型，可为负数，不可为浮点数。       |\"}",
      "用户拒绝的修改": "| value     | bigint         | 是   | 执行运算的操作数。 |",
      "注意事项": "修复时应先检查上下文格式要求，确保表格对齐所需的空格或符号不被误删；优先保留必要的结构字符（如Markdown表格中的对齐空格），避免仅依据重复字符规则机械删除。"
    },
    {
      "defect_id": 521583,
      "sentence": "## sub\r",
      "reference_sentence": "",
      "line_num": 634,
      "context": "{\"629\":\"\",\"630\":\"let re = Atomics.store(ta, 0, 12n)\",\"631\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"res is:\\\" + re) //12\",\"632\":\"```\",\"633\":\"\",\"634\":\"## sub\",\"635\":\"\",\"636\":\"static sub(typedArray: smalltypeArray, index: number, value: number): number  \",\"637\":\"\",\"638\":\"将typedArray[index]与value做减法，结果写回typedArray[index]。  \",\"639\":\"此方法返回typedArray[index]被修改之前的值。  \"}",
      "用户拒绝的修改": "## sub",
      "注意事项": "修复前需严格验证问题真实性，特别注意区分文档类型（如Markdown空行分隔语法）与真实格式错误，避免将合法的结构性换行误判为多余空格。"
    },
    {
      "defect_id": 521588,
      "sentence": "## sub\r",
      "reference_sentence": "",
      "line_num": 670,
      "context": "{\"665\":\"let old = Atomics.sub(ta, 0, 12)\",\"666\":\"let re = Atomics.load(ta, 0)\",\"667\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"old is:\\\" + old) //48\",\"668\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"res is:\\\" + re) //36\",\"669\":\"```\",\"670\":\"## sub\",\"671\":\"\",\"672\":\"static sub(typedArray: bigtypeArray, index: number, value: bigint): bigint  \",\"673\":\"\",\"674\":\"将typedArray[index]与value做减法，结果写回typedArray[index]。  \",\"675\":\"此方法返回typedArray[index]被修改之前的值。  \"}",
      "用户拒绝的修改": "## sub",
      "注意事项": "处理格式修复时必须严格区分文档结构需求与多余字符，优先确认目标格式规范要求；修复前需完整分析上下文中的Markdown语法合理性，避免将正常标题换行误判为多余回车符。"
    },
    {
      "defect_id": 521581,
      "sentence": "| typedArray | bigtypeArray                         | 是   | 要操作的数组。     |\r",
      "reference_sentence": "",
      "line_num": 611,
      "context": "{\"606\":\"将typedArray[index]赋值为value，并返回该值。  \",\"607\":\"\",\"608\":\"**参数：**\",\"609\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"610\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\",\"611\":\"| typedArray | bigtypeArray                         | 是   | 要操作的数组。     |\",\"612\":\"| index     | number                               | 是   | typedArray中的索引。 |\",\"613\":\"| value     | bigint         | 是   | 执行运算的操作数。         |\",\"614\":\"\",\"615\":\"**返回值：** \",\"616\":\"| 类型        | 说明                         |\"}",
      "用户拒绝的修改": "| typedArray | bigtypeArray                         | 是   | 要操作的数组。 |",
      "注意事项": "修复时应优先识别并保留表格对齐所需的格式空格，避免将结构性空格误判为冗余字符；需结合上下文判断问题是否真实存在，避免对符合排版规范的内容进行无效修改。"
    },
    {
      "defect_id": 521558,
      "sentence": "static or(typedArray: bigtypeArray, index: number, value: number): number  ",
      "reference_sentence": "",
      "line_num": 536,
      "context": "{\"531\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"old is:\\\" + old) //2\",\"532\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"res is:\\\" + re) //3\",\"533\":\"```\",\"534\":\"## or\",\"535\":\"\",\"536\":\"static or(typedArray: bigtypeArray, index: number, value: number): number  \",\"537\":\"\",\"538\":\"将typedArray[index]与value进行按位或运算，结果写回typedArray[index]。  \",\"539\":\"此方法返回typedArray[index]被修改前的值。  \",\"540\":\"此方法确保在typedArray[index]被修改之前，typedArray[index]不会发生其他线程的读写操作。  \",\"541\":\"\"}",
      "用户拒绝的修改": "static or(typedArray: bigtypeArray, index: number, value: number): number",
      "注意事项": "修复行尾多余空格时需确保可视化修改痕迹（如添加注释或显式标记），并优先检查代码规范中是否允许行尾空格以避免无效修复。"
    },
    {
      "defect_id": 521584,
      "sentence": "static sub(typedArray: smalltypeArray, index: number, value: number): number  \r",
      "reference_sentence": "",
      "line_num": 636,
      "context": "{\"631\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"res is:\\\" + re) //12\",\"632\":\"```\",\"633\":\"\",\"634\":\"## sub\",\"635\":\"\",\"636\":\"static sub(typedArray: smalltypeArray, index: number, value: number): number  \",\"637\":\"\",\"638\":\"将typedArray[index]与value做减法，结果写回typedArray[index]。  \",\"639\":\"此方法返回typedArray[index]被修改之前的值。  \",\"640\":\"此方法确保在typedArray[index]被修改之前，typedArray[index]不会发生其他线程的读写操作。  \",\"641\":\"\"}",
      "用户拒绝的修改": "static sub(typedArray: smalltypeArray, index: number, value: number): number",
      "注意事项": "修复时需显式标注不可见字符修改（如用␣/↵符号示意空格/回车），并优先处理行尾连续空格而非单空格，同时通过上下文确认是否属于文档排版需求。"
    },
    {
      "defect_id": 538119,
      "sentence": "### makeObserved和collections.Array/Set/Map配合使用\r",
      "reference_sentence": "",
      "line_num": 242,
      "context": "{\"237\":\"  }\",\"238\":\"}\",\"239\":\"```\",\"240\":\"需要注意：数据的构建和处理可以在子线程中完成，但有观察能力的数据不能传给子线程，只有在主线程里才可以操作可观察的数据。所以上述例子中只是将`this.send`的属性`name`传给子线程操作。\",\"241\":\"\",\"242\":\"### makeObserved和collections.Array/Set/Map配合使用\",\"243\":\"\",\"244\":\"**该场景仅适用于ArkTS1.1。**\",\"245\":\"\",\"246\":\"collections提供ArkTS容器集，可用于并发场景下的高性能数据传递。详情见[@arkts.collections文档](../reference/apis-arkts/js-apis-arkts-collections.md)。\",\"247\":\"makeObserved可以在ArkUI中导入可观察的colletions容器，但makeObserved不能和状态管理V1的状态变量装饰器如@State和@Prop等配合使用，否则会抛出运行时异常。\"}",
      "用户拒绝的修改": "### makeObserved和collections.Array/Set/Map配合使用",
      "注意事项": "修复时应严格检查中英文标点混用导致的隐形空格问题（如中文冒号后误加英文空格），同时需确认用户反馈的\"多余空格\"具体指代位置，避免仅依赖规则匹配而忽略上下文排版逻辑。"
    },
    {
      "defect_id": 521518,
      "sentence": "static isLockFree(byteSize: int): boolean\r",
      "reference_sentence": "",
      "line_num": 322,
      "context": "{\"317\":\"hilog.info(0x0000, \\\"testTag\\\", \\\"res is:\\\" + re) //12\",\"318\":\"```\",\"319\":\"\",\"320\":\"## isLockFree\",\"321\":\"\",\"322\":\"static isLockFree(byteSize: int): boolean\",\"323\":\"\",\"324\":\"Atomics的方法对数据字节大小有要求，只有符合字节大小要求的才能使用Atomics的方法。  \",\"325\":\"此方法判断byteSize字节的大小是否适用于Atomics的方法。\",\"326\":\"\",\"327\":\"**参数：**\"}",
      "用户拒绝的修改": "static isLockFree(byteSize: int): boolean",
      "注意事项": "修复前需精确识别重复词或多余空格的具体位置，避免误判代码语法结构中的合法空格；优先结合上下文判断是否为功能性格式要求（如代码缩进、参数间隔），避免机械删除导致语法错误。"
    },
    {
      "defect_id": 521537,
      "sentence": "typedArray | BigUint64Array                         | 是   | 要操作的数组。     |",
      "reference_sentence": "",
      "line_num": 423,
      "context": "{\"418\":\"此方法确保在typedArray[index]被加载之前，typedArray[index]不会发生其他线程的读写操作。  \",\"419\":\"\",\"420\":\"**参数：**\",\"421\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"422\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\",\"423\":\"| typedArray | BigUint64Array                         | 是   | 要操作的数组。     |\",\"424\":\"| index     | number                               | 是   | typedArray中的索引。   |\",\"425\":\"\",\"426\":\"**返回值：** \",\"427\":\"| 类型        | 说明                         |\",\"428\":\"| ----------- | --------------------------- |\"}",
      "用户拒绝的修改": "typedArray | BigUint64Array | 是 | 要操作的数组。",
      "注意事项": "修复表格中的空格时需优先保持列宽对齐，仅在确认多余空格不影响排版时进行删除；注意区分普通文本与表格环境，表格内空格可能用于视觉对齐，需结合上下文判断是否冗余。"
    },
    {
      "defect_id": 521535,
      "sentence": "typedArray | smalltypeArray                        | 是   | 要操作的数组。     |",
      "reference_sentence": "",
      "line_num": 359,
      "context": "{\"354\":\"此方法确保在typedArray[index]被加载之前，typedArray[index]不会发生其他线程的读写操作。  \",\"355\":\"\",\"356\":\"**参数：**\",\"357\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"358\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\",\"359\":\"| typedArray | smalltypeArray                        | 是   | 要操作的数组。     |\",\"360\":\"| index     | number                               | 是   | typedArray中的索引。   |\",\"361\":\"\",\"362\":\"**返回值：** \",\"363\":\"| 类型        | 说明                         |\",\"364\":\"| ----------- | --------------------------- |\"}",
      "用户拒绝的修改": "typedArray | smalltypeArray | 是 | 要操作的数组。",
      "注意事项": "修复表格内空格时需优先保持列宽对齐一致性，确认多余空格是否属于Markdown表格格式调整（如列宽控制），避免破坏表格可视化结构；同时检查相邻行空格模式，确保全局格式统一。"
    },
    {
      "defect_id": 522223,
      "sentence": "方舟字节码文件内部使用的保留字段。 ",
      "reference_sentence": "",
      "line_num": 138,
      "context": "{\"133\":\"- 格式：\",\"134\":\"\",\"135\":\"| **名称** | **格式** | **说明**                                               |\",\"136\":\"| -------------- | -------------- | ------------------------------------------------------------ |\",\"137\":\"| `name`           | `String`         | Class的名称，命名遵循[TypeDescriptor](#typedescriptor)语法。 |\",\"138\":\"| `reserved`       | `uint32_t`       | 方舟字节码文件内部使用的保留字段。                           |\",\"139\":\"| `access_flags`   | `uleb128`        | Class的访问标志，是[ClassAccessFlag](#classaccessflag)的组合。 |\",\"140\":\"| `num_fields`     | `uleb128`        | Class的字段的数量。                                          |\",\"141\":\"| `num_methods`    | `uleb128`        | Class的方法的数量。                                          |\",\"142\":\"| `class_data`     | `TaggedValue[]`  | 不定长度的数组，数组中每个元素都是[TaggedValue](#taggedvalue)类型，元素的标记是[ClassTag](#classtag)类型，数组中的元素按照标记递增排序（`0x00`标记除外）。 |\",\"143\":\"| `fields`         | `Field[]`        | Class的字段的数组，数组中每一个元素都是[Field](#field)类型。数组长度由`num_fields`指定。 |\"}",
      "用户拒绝的修改": "方舟字节码文件内部使用的保留字段。",
      "注意事项": "修复句尾空格时需区分内容空格与排版空格，在表格/代码块中优先保持格式对齐，避免破坏文档结构；处理删除操作前应二次确认上下文格式需求。"
    },
    {
      "defect_id": 522214,
      "sentence": "方舟字节码文件内部使用的保留字段。                           | 方舟字节码文件内部使用的保留字段。                           |",
      "reference_sentence": "",
      "line_num": 73,
      "context": "{\"68\":\"| `num_classes`       | `uint32_t`       | [ClassIndex](#classindex)结构中元素的数量，即文件中定义的[Class](#class)的数量。 |\",\"69\":\"| `class_idx_off`     | `uint32_t`       | 偏移量，指向[ClassIndex](#classindex)。 |\",\"70\":\"| `num_lnps`          | `uint32_t`       | [LineNumberProgramIndex](#linenumberprogramindex)结构中元素的数量，即文件中定义的Line number program的数量。 |\",\"71\":\"| `lnp_idx_off`       | `uint32_t`       | 偏移量，指向[LineNumberProgramIndex](#linenumberprogramindex)。 |\",\"72\":\"| `reserved`          | `uint32_t`       | 方舟字节码文件内部使用的保留字段。                           |\",\"73\":\"| `reserved`          | `uint32_t`       | 方舟字节码文件内部使用的保留字段。                           |\",\"74\":\"| `num_index_regions` | `uint32_t`       | [IndexSection](#indexsection)结构中元素的数量，即文件中[IndexHeader](#indexheader)的数量。 |\",\"75\":\"| `index_section_off` | `uint32_t`       | 偏移量，指向[IndexSection](#indexsection)。 |\",\"76\":\"\",\"77\":\"\",\"78\":\"### Version\"}",
      "用户拒绝的修改": "方舟字节码文件内部使用的保留字段。",
      "注意事项": "修复重复内容时应优先检查表格数据结构，确保字段名称的唯一性，避免仅删除表面重复而忽略字段定义冲突；处理文档格式问题时需结合上下文判断重复是否属于排版错误，特别是在技术文档表格中要严格校验字段命名规范。"
    },
    {
      "defect_id": 541522,
      "sentence": "关闭先前创建的回调作用域（不支持与async_hook相关能力）。|",
      "reference_sentence": "",
      "line_num": 476,
      "context": "{\"471\":\"| -------- | -------- |\",\"472\":\"| napi_async_init | 创建一个异步资源上下文环境（不支持与async_hook相关能力）。 |\",\"473\":\"| napi_make_callback | 在异步资源上下文环境中回调JS函数（不支持与async_hook相关能力）。|\",\"474\":\"| napi_async_destroy | 销毁先前创建的异步资源上下文环境（不支持与async_hook相关能力）。|\",\"475\":\"| napi_open_callback_scope | 创建一个回调作用域（不支持与async_hook相关能力）。 |\",\"476\":\"| napi_close_callback_scope | 关闭先前创建的回调作用域（不支持与async_hook相关能力）。|\",\"477\":\"\",\"478\":\"### uv相关\",\"479\":\"\",\"480\":\"| 接口 | 功能说明 |\",\"481\":\"| -------- | -------- |\"}",
      "用户拒绝的修改": "关闭先前创建的回调作用域（不支持与async_hook相关能力）。",
      "注意事项": "修复表格内空格问题时需优先保持列宽对齐一致性，使用Markdown表格格式化工具校验管道符间距；同时检查相邻行格式差异，避免局部修改破坏整体排版。"
    },
    {
      "defect_id": 528599,
      "sentence": "FullScreenLaunchComponent({ content: Callback\\<void>, appId: string, options?: AtomicServiceOptions, onError?: ErrorCallback, onTerminated?: Callback\\<TerminationInfo> })",
      "reference_sentence": "",
      "line_num": 35,
      "context": "{\"30\":\"## 事件\",\"31\":\"不支持[通用事件](ts-component-general-events.md)。\",\"32\":\"\",\"33\":\"## FullScreenLaunchComponent\",\"34\":\"\",\"35\":\"FullScreenLaunchComponent({ content: Callback\\\\<void>, appId: string, options?: AtomicServiceOptions, onError?: ErrorCallback, onTerminated?: Callback\\\\<TerminationInfo> })\",\"36\":\"\",\"37\":\"**装饰器类型：**\\\\@Component\",\"38\":\"\",\"39\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"40\":\"\"}",
      "用户拒绝的修改": "FullScreenLaunchComponent({ content: Callback<void>, appId: string, options?: AtomicServiceOptions, onError?: ErrorCallback, onTerminated?: Callback<TerminationInfo> })",
      "注意事项": "修复代码示例时需优先识别转义符号的完整结构（如`\\\\<`组合），避免将转义符与内容符号间的必要间距误判为多余空格，同时结合上下文判断是否为代码块语法要求。"
    },
    {
      "defect_id": 522228,
      "sentence": "拥有此标记的[TaggedValue](#taggedvalue)的`data`是一个偏移量，指向[字符串](#字符串)，表示源文件的名称。 ",
      "reference_sentence": "",
      "line_num": 164,
      "context": "{\"159\":\"\",\"160\":\"| **名称** | **值** | **数量** | **格式** | **说明**                                               |\",\"161\":\"| -------------- | ------------ | -------------- | -------------- | ------------------------------------------------------------ |\",\"162\":\"| `NOTHING`        | `0x00`  | `1`  | `none`    | 拥有此标记的[TaggedValue](#taggedvalue)，是其所在`class_data`的最后一项。 |\",\"163\":\"| `SOURCE_LANG`    | `0x02`  | `0-1 ` | `uint8_t` | 拥有此标记的[TaggedValue](#taggedvalue)的`data`是0，表示源码语言是ArkTS/TS/JS。 |\",\"164\":\"| `SOURCE_FILE`    | `0x07`  | `0-1`  | `uint32_t`| 拥有此标记的[TaggedValue](#taggedvalue)的`data`是一个偏移量，指向[字符串](#字符串)，表示源文件的名称。 |\",\"165\":\"\",\"166\":\"> **注意：**\",\"167\":\"> \",\"168\":\"> ClassTag是`class_data`中元素（[TaggedValue](#taggedvalue)）所具备的标记，表头中的“数量”指的是在某一个[Class](#class)的`class_data`中拥有此标记的元素出现的次数。\",\"169\":\"\"}",
      "用户拒绝的修改": "拥有此标记的[TaggedValue](#taggedvalue)的`data`是一个偏移量，指向[字符串](#字符串)，表示源文件的名称。",
      "注意事项": "修复时应仔细核对Markdown语法中链接与代码块的空格规范，避免误删必要空格（如`[TaggedValue](#taggedvalue)`与`data`间的正常间隔），同时使用可视化空格检测工具精准定位句尾/行末的多余空格。"
    },
    {
      "defect_id": 538094,
      "sentence": "在ArkTS1.2上支持这种写法，但Info类型的实例无法观察",
      "reference_sentence": "",
      "line_num": 74,
      "context": "{\"69\":\"  \",\"70\":\"- 在ArkTS1.1上makeObserved可以用在@Component装饰的自定义组件中，但不能和状态管理V1的状态变量装饰器配合使用，如果一起使用，则会抛出运行时异常。在ArkTS1.2上makeObserved可以用在@Component装饰的自定义组件中，且能和状态管理V1的状态变量装饰器配合使用。\",\"71\":\"  \",\"72\":\"  ```ts\",\"73\":\"  // ArkTS1.1上错误写法，运行时异常\",\"74\":\"  // ArkTS1.2上支持这种写法，但Info类型的实例无法观察\",\"75\":\"  @State message: Info = UIUtils.makeObserved(new Info(20));\",\"76\":\"  ```\",\"77\":\"  下面的例子仅适用于ArkTS1.1：\",\"78\":\"  \",\"79\":\"  `message2`的写法不会抛异常，原因是this.message是@State装饰的，其实现等同于@Observed，而UIUtils.makeObserved的入参是@Observed装饰的class，会直接返回自身。因此对于`message2`来说，他的初始值不是makeObserved的返回值，而是@State装饰的变量。\"}",
      "用户拒绝的修改": "在ArkTS1.2上支持这种写法，但Info类型的实例无法观察。",
      "注意事项": "修复时应严格对照上下文中的版本号格式（如\"ArkTS1.2上\"无空格），避免机械添加空格破坏术语一致性；优先保持原文数字与文字连写的特殊格式规范。"
    },
    {
      "defect_id": 543062,
      "sentence": "cpp部分代码",
      "reference_sentence": "",
      "line_num": 1168,
      "context": "{\"1163\":\"\",\"1164\":\"#### napi_wrap_sendable_with_size\",\"1165\":\"\",\"1166\":\"包裹一个native实例到ArkTS对象中并指定大小。\",\"1167\":\"\",\"1168\":\"cpp部分代码\",\"1169\":\"\",\"1170\":\"```cpp\",\"1171\":\"#include \\\"napi/native_api.h\\\"\",\"1172\":\"\",\"1173\":\"static napi_value WrapSendableWithSize(napi_env env, napi_callback_info info) {\"}",
      "用户拒绝的修改": "cpp代码示例",
      "注意事项": "修改前必须检查文档全局术语一致性，优先保留用户指定的统一表述（如\"cpp部分代码\"），避免将重复视为错误而擅自替换近义词。"
    },
    {
      "defect_id": 521517,
      "sentence": "| value     | bigint         | 是   | typedArray[index]要被修改为的值。         |\r",
      "reference_sentence": "",
      "line_num": 297,
      "context": "{\"292\":\"**参数：**\",\"293\":\"| 名称     | 类型                                    | 必填 | 说明                   |\",\"294\":\"| -------- | --------------------------------------- | ---- | ---------------------- |\",\"295\":\"| typedArray | bigtypeArray                         | 是   | 要操作的数组。     |\",\"296\":\"| index     | number                               | 是   | typedArray中的索引。     |\",\"297\":\"| value     | bigint         | 是   | typedArray[index]要被修改为的值。         |\",\"298\":\"\",\"299\":\"**返回值：** \",\"300\":\"| 类型        | 说明                         |\",\"301\":\"| ----------- | --------------------------- |\",\"302\":\"| bigint       | 返回typedArray[index]被修改前的值。   |\"}",
      "用户拒绝的修改": "| value     | bigint         | 是   | typedArray[index]要被修改为的值。 |",
      "注意事项": "修复表格内容时应优先保持列宽对齐格式，仅移除内容内部的冗余空格；需区分表格格式化空格与文本多余空格，避免破坏表格结构一致性。"
    },
    {
      "defect_id": 543061,
      "sentence": "cpp部分代码",
      "reference_sentence": "",
      "line_num": 1124,
      "context": "{\"1119\":\"\",\"1120\":\"#### napi_wrap_sendable\",\"1121\":\"\",\"1122\":\"包裹一个native实例到ArkTS对象中。\",\"1123\":\"\",\"1124\":\"cpp部分代码\",\"1125\":\"\",\"1126\":\"```cpp\",\"1127\":\"#include \\\"napi/native_api.h\\\"\",\"1128\":\"\",\"1129\":\"static napi_value WrapSendable(napi_env env, napi_callback_info info) {\"}",
      "用户拒绝的修改": "cpp 代码部分",
      "注意事项": "修改前必须检查全文相同术语的使用格式，优先遵循用户指定的统一格式；当上下文存在明确格式范例时，即使存在表面重复也应保持原样而非机械调整空格。"
    },
    {
      "defect_id": 545722,
      "sentence": "Failed to start multiple floating Ball windows.",
      "reference_sentence": "",
      "line_num": 136,
      "context": "{\"131\":\"以下错误码的详细介绍请参见[通用错误码](../errorcode-universal.md)和[窗口错误码](errorcode-window.md)。\",\"132\":\"\",\"133\":\"| 错误码ID | 错误信息 |\",\"134\":\"|------------|------------|\",\"135\":\"| 201 | Permission verification failed, usually returned by VerifyAccessToken. |\",\"136\":\"| 1300019 | Wrong parameters for operating the floating ball. |\",\"137\":\"| 1300020 | Failed to create the floating Ball window. |\",\"138\":\"| 1300021 | Failed to start multiple floating Ball windows. |\",\"139\":\"| 1300022 | Repeated floating Ball operation. |\",\"140\":\"| 1300023 | Floating ball internal error. |\",\"141\":\"| 1300024 | The floating ball window state is abnormal. |\"}",
      "用户拒绝的修改": "Failed to start multiple floating ball windows.",
      "注意事项": "修复空格时必须保持专有名词/术语的原始大小写格式，优先核对上下文术语一致性后再执行修改，避免将正确的大写误判为格式错误。"
    },
    {
      "defect_id": 522225,
      "sentence": "数组长度由`num_methods`指定。 ",
      "reference_sentence": "",
      "line_num": 144,
      "context": "{\"139\":\"| `access_flags`   | `uleb128`        | Class的访问标志，是[ClassAccessFlag](#classaccessflag)的组合。 |\",\"140\":\"| `num_fields`     | `uleb128`        | Class的字段的数量。                                          |\",\"141\":\"| `num_methods`    | `uleb128`        | Class的方法的数量。                                          |\",\"142\":\"| `class_data`     | `TaggedValue[]`  | 不定长度的数组，数组中每个元素都是[TaggedValue](#taggedvalue)类型，元素的标记是[ClassTag](#classtag)类型，数组中的元素按照标记递增排序（`0x00`标记除外）。 |\",\"143\":\"| `fields`         | `Field[]`        | Class的字段的数组，数组中每一个元素都是[Field](#field)类型。数组长度由`num_fields`指定。 |\",\"144\":\"| `methods`        | `Method[]`       | Class的方法的数组，数组中每一个元素都是[Method](#method)类型。数组长度由`num_methods`指定。 |\",\"145\":\"\",\"146\":\"\",\"147\":\"### ClassAccessFlag\",\"148\":\"\",\"149\":\"| **名称** | **值** | **说明**                                               |\"}",
      "用户拒绝的修改": "数组长度由`num_methods`指定。",
      "注意事项": "修复时应严格检查代码块(`...`)内外及句尾的多余空格，确保反引号与内容紧密贴合（如`num_methods`），并保持与上下文格式一致（如143行无句尾空格）。"
    },
    {
      "defect_id": 543063,
      "sentence": "cpp部分代码",
      "reference_sentence": "",
      "line_num": 1212,
      "context": "{\"1207\":\"\",\"1208\":\"#### napi_unwrap_sendable\",\"1209\":\"\",\"1210\":\"获取ArkTS对象包裹的native实例。\",\"1211\":\"\",\"1212\":\"cpp部分代码\",\"1213\":\"\",\"1214\":\"```cpp\",\"1215\":\"#include \\\"napi/native_api.h\\\"\",\"1216\":\"\",\"1217\":\"static napi_value UnwrapSendable(napi_env env, napi_callback_info info) {\"}",
      "用户拒绝的修改": "cpp代码示例",
      "注意事项": "修改前需全局检查文档中相同术语的使用频率和上下文，若存在统一表述应优先保留原有表述；修复重复词时应区分必要重复和冗余重复，避免破坏技术文档的术语一致性。"
    },
    {
      "defect_id": 522224,
      "sentence": "数组长度由`num_fields`指定。 ",
      "reference_sentence": "",
      "line_num": 143,
      "context": "{\"138\":\"| `reserved`       | `uint32_t`       | 方舟字节码文件内部使用的保留字段。                           |\",\"139\":\"| `access_flags`   | `uleb128`        | Class的访问标志，是[ClassAccessFlag](#classaccessflag)的组合。 |\",\"140\":\"| `num_fields`     | `uleb128`        | Class的字段的数量。                                          |\",\"141\":\"| `num_methods`    | `uleb128`        | Class的方法的数量。                                          |\",\"142\":\"| `class_data`     | `TaggedValue[]`  | 不定长度的数组，数组中每个元素都是[TaggedValue](#taggedvalue)类型，元素的标记是[ClassTag](#classtag)类型，数组中的元素按照标记递增排序（`0x00`标记除外）。 |\",\"143\":\"| `fields`         | `Field[]`        | Class的字段的数组，数组中每一个元素都是[Field](#field)类型。数组长度由`num_fields`指定。 |\",\"144\":\"| `methods`        | `Method[]`       | Class的方法的数组，数组中每一个元素都是[Method](#method)类型。数组长度由`num_methods`指定。 |\",\"145\":\"\",\"146\":\"\",\"147\":\"### ClassAccessFlag\",\"148\":\"\"}",
      "用户拒绝的修改": "数组长度由`num_fields`指定。",
      "注意事项": "修复时应精确识别多余空格的位置，避免误删代码块与标点之间的必要间隔；优先检查句尾、代码块两侧及表格单元格内的空格规范性，确保符合上下文格式要求。"
    },
    {
      "defect_id": 556241,
      "sentence": "AAC  |",
      "reference_sentence": "",
      "line_num": 323,
      "context": "{\"318\":\"| 封装格式  | 视频编码类型   | 音频编码类型   |\",\"319\":\"| -------- | :----------------------------| :----------------------------|\",\"320\":\"| mp4      | AVC(H.264)<!--RP2--><!--RP2End-->、MPEG4| AAC、MPEG(MP3) |\",\"321\":\"| mkv      | AVC(H.264)<!--RP3--><!--RP3End--> | AAC、MPEG(MP3)、OPUS |\",\"322\":\"| mpeg-ts  | AVC(H.264)<!--RP4--><!--RP4End-->、MPEG2、MPEG4 | AAC、MPEG(MP3)<!--RP5--><!--RP5End-->|\",\"323\":\"| flv      | AVC(H.264)<!--RP6--><!--RP6End--> |  AAC  |\",\"324\":\"| mpeg-ps  | AVC(H.264)、MPEG2 |    MPEG(MP2、MP3)|\",\"325\":\"| avi      | H.263、AVC(H.264)、MPEG2、MPEG4  | AAC、MPEG(MP2、MP3)、PCM|\",\"326\":\"\",\"327\":\"当前转码支持的源视频格式详细情况请参考[AVCodec支持的格式](../avcodec/avcodec-support-formats.md#媒体数据解析)。\",\"328\":\"\"}",
      "用户拒绝的修改": "AAC |",
      "注意事项": "修复表格内容时应优先检查排版对齐需求，保留用于格式美化的必要空格；区分正文与结构化内容（如表格、代码块），避免在非正文区域过度修正影响视觉呈现的格式细节。"
    }
  ],
  "反面示例": [
    {
      "defect_id": 371357,
      "sentence": "The asyncRunner task is discarded.  ",
      "reference_sentence": "",
      "line_num": 2376,
      "context": "{\"2371\":\"| 错误码ID | 错误信息                                    |\",\"2372\":\"| -------- | ------------------------------------------- |\",\"2373\":\"| 10200006 | An exception occurred during serialization. |\",\"2374\":\"| 10200025 | dependent task not allowed.  |\",\"2375\":\"| 10200051 | The periodic task cannot be executed again.  |\",\"2376\":\"| 10200054 | The asyncRunner task is discarded.  |\",\"2377\":\"| 10200057 | The task cannot be executed by two APIs.  |\",\"2378\":\"\",\"2379\":\"**示例：**\",\"2380\":\"\",\"2381\":\"```ts\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "The asyncRunner task is discarded.",
      "触发条件": "当检测到句子末尾的标点符号（如句号）前存在多余空格，或单词间出现连续重复空格时触发。\n\n识别模式：通过正则表达式匹配标点符号前的空格（如 `\\s+\\.`）或连续空格（如 ` {2,}`），结合上下文判断是否属于非功能性排版错误（如表格对齐场景需排除）。"
    },
    {
      "defect_id": 42850,
      "sentence": "TaskPool和Worker的对比 (TaskPool和Worker)",
      "reference_sentence": "",
      "line_num": 1,
      "context": "",
      "修改建议": "存在重复的'TaskPool和Worker'",
      "更改后示例": "TaskPool和Worker的对比",
      "触发条件": "当同一词语或短语在相邻位置（如括号内外）重复出现，并伴随多余空格时触发。具体表现为文本中连续出现两次及以上相同词段，且中间仅由非必要符号（如括号、空格）分隔。"
    },
    {
      "defect_id": 123734,
      "sentence": "[HIDEBUG_TRACE_TAG_FFRT](_hi_debug.md#hidebug_trace_tag_ffrt)&nbsp;&nbsp;&nbsp;(1ULL &lt;&lt; 13)",
      "reference_sentence": "",
      "line_num": 34,
      "context": "",
      "修改建议": "存在多余空格",
      "更改后示例": "[HIDEBUG_TRACE_TAG_FFRT](_hi_debug.md#hidebug_trace_tag_ffrt) (1ULL &lt;&lt; 13)",
      "触发条件": "当文本中存在连续多个非必要的空格符（包括HTML实体&nbsp;或普通空格）间隔内容元素，且这些空格符在语义表达或格式规范中不产生实际分隔作用时触发。具体识别模式为：在链接标记、括号等闭合元素后出现≥2个连续空格符，且后续无换行需求的情况。"
    },
    {
      "defect_id": 209446,
      "sentence": "> - 当前使用场景： 仅限客户端是三方应用，服务端是系统应用。",
      "reference_sentence": "",
      "line_num": 17,
      "context": "{\"12\":\">\",\"13\":\"> - 此文档中的示例代码描述的是系统应用跨进程通信。\",\"14\":\">\",\"15\":\"> - 当前不支持三方应用实现ServiceExtensionAbility，三方应用的UIAbility组件可以通过Context连接系统提供的ServiceExtensionAbility。\",\"16\":\">\",\"17\":\"> - 当前使用场景： 仅限客户端是三方应用，服务端是系统应用。\",\"18\":\"\",\"19\":\"| 接口名                                                       | 返回值类型 | 功能描述                                                     |\",\"20\":\"| ------------------------------------------------------------ | ---------- | ------------------------------------------------------------ |\",\"21\":\"| [registerDeathRecipient](../reference/apis-ipc-kit/js-apis-rpc.md#registerdeathrecipient9-1) | void       | 注册用于接收远程对象消亡通知的回调，增加 proxy 对象上的消亡通知。 |\",\"22\":\"| [unregisterDeathRecipient](../reference/apis-ipc-kit/js-apis-rpc.md#unregisterdeathrecipient9-1) | void       | 注销用于接收远程对象消亡通知的回调。                         |\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "> - 当前使用场景：仅限客户端是三方应用，服务端是系统应用。",
      "触发条件": "当标点符号(如冒号、句号等)后出现连续多个空格，且在列表项(以> - 开头)或段落中出现时触发。\n\n识别模式：检测标点符号后紧跟2个及以上空格的情况，需排除代码块等特殊格式区域。典型表现为中文标点与后续文字间存在异常间距，如案例中冒号\": \"后出现双空格。"
    },
    {
      "defect_id": 283909,
      "sentence": "从API version 12开始，该接口支持在原子化服务中使用。 从API version 12开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 17,
      "context": "{\"12\":\"\",\"13\":\"onChildTouchTest(event: (value: Array&lt;TouchTestInfo&gt;) => TouchResult): T\",\"14\":\"\",\"15\":\"当前组件可通过设置回调来自定义触摸测试，可以控制触摸测试中的子节点行为。\",\"16\":\"\",\"17\":\"**原子化服务API：** 从API version 12开始，该接口支持在原子化服务中使用。\",\"18\":\"\",\"19\":\"**系统能力：** SystemCapability.ArkUI.ArkUI.Full\",\"20\":\"\",\"21\":\"**参数：** \",\"22\":\"\"}",
      "修改建议": "重复句子",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "当相邻或同一段落中出现完全相同的句子/短语重复，且重复内容之间无有效分隔符（如分号、编号）时触发该规则。识别模式为连续两行或同一行内存在100%字符匹配的文本片段（排除版本号、参数值等允许重复的特殊字段）。"
    },
    {
      "defect_id": 268519,
      "sentence": "selectedTextStyle(value: PickerTextStyle)\r",
      "reference_sentence": "",
      "line_num": 188,
      "context": "{\"183\":\"| ------ | --------------------------------------------- | ---- | ------------------------------------------------------------ |\",\"184\":\"| style | [Optional](ts-universal-attributes-custom-property.md#optional12)\\\\<[PickerTextStyle](#pickertextstyle10类型说明)> | 是   | 所有选项中除了最上、最下及选中项以外的文本颜色、字号、字体粗细。<br/>当style的值为undefined时，默认值：<br/>{<br/>color: '#ff182431',<br/>font: {<br/>size: '16fp', <br/>weight: FontWeight.Regular<br/>}<br/>} |\",\"185\":\"\",\"186\":\"### selectedTextStyle<sup>10+</sup>\",\"187\":\"\",\"188\":\"selectedTextStyle(value: PickerTextStyle)\",\"189\":\"\",\"190\":\"设置选中项的文本样式。\",\"191\":\"\",\"192\":\"**原子化服务API：** 从API version 11开始，该接口支持在原子化服务中使用。\",\"193\":\"\"}",
      "修改建议": "行尾存在多余空格",
      "更改后示例": "selectedTextStyle(value: PickerTextStyle)",
      "触发条件": "当行尾存在一个或多个空格字符，且该空格后无其他非空字符时触发。"
    },
    {
      "defect_id": 22446,
      "sentence": "采用GCM模式加密时，需要获取[doFinal()](#dofinal-2)或[doFinalSync()](#dofinalsync12)输出的[DataBlob](#datablob)，取出其末尾16字节作为解密时[init()](#init-2)或[initSync()](#initsync12)方法的入参GcmParamsSpec中的的authTag。",
      "reference_sentence": "",
      "line_num": 101,
      "context": "",
      "修改建议": "存在重复字'的'",
      "更改后示例": "采用GCM模式加密时，需要获取[doFinal()](#dofinal-2)或[doFinalSync()](#dofinalsync12)输出的[DataBlob](#datablob)，取出其末尾16字节作为解密时[init()](#init-2)或[initSync()](#initsync12)方法的入参GcmParamsSpec中的authTag。",
      "触发条件": "检测到相邻重复汉字或词语（如\"的的\"、\"和和\"）或存在冗余空格分隔的重复词（如\"的 的\"），且不符合语言规范时触发。"
    },
    {
      "defect_id": 371344,
      "sentence": "参数名       | 类型          | 必填 | 说明                 |",
      "reference_sentence": "",
      "line_num": 388,
      "context": "{\"383\":\"\",\"384\":\"**原子化服务API**：从API version 13 开始，该接口支持在原子化服务中使用。\",\"385\":\"\",\"386\":\"**参数：**\",\"387\":\"\",\"388\":\"| 参数名       | 类型          | 必填 | 说明                 |\",\"389\":\"| ----------- | ------------- | ---- | -------------------- |\",\"390\":\"| delayTime   | number        | 是   | 延时时间。单位为ms。  |\",\"391\":\"| task        | [GenericsTask\\\\<A, R>](#genericstask13) | 是   | 需要延时执行的泛型任务。 |\",\"392\":\"| priority    | [Priority](#priority)       | 否   | 延时执行的任务的优先级，默认值为taskpool.Priority.MEDIUM。 |\",\"393\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "参数名|类型|必填|说明",
      "触发条件": "在表格行中检测到列分隔符“|”前后存在连续多个空格（≥2个）或对齐性冗余空格，且上下文为Markdown表格语法结构。"
    },
    {
      "defect_id": 123735,
      "sentence": "[HIDEBUG_TRACE_TAG_COMMON_LIBRARY](_hi_debug.md#hidebug_trace_tag_common_library)&nbsp;&nbsp;&nbsp;(1ULL &lt;&lt; 16)",
      "reference_sentence": "",
      "line_num": 35,
      "context": "",
      "修改建议": "存在多余空格",
      "更改后示例": "[HIDEBUG_TRACE_TAG_COMMON_LIBRARY](_hi_debug.md#hidebug_trace_tag_common_library) (1ULL &lt;&lt; 16)",
      "触发条件": "检测到文本中存在连续多个空格（包括HTML实体空格`&nbsp;`）或非必要空格分隔符，且位于链接标记与后续注释内容之间。  \n\n识别模式：当`[...](链接路径)`结构后跟随超过一个空格（含`&nbsp;`）和以括号包裹的数值/表达式时（例如`(1ULL << 16)`），判定为需合并/删除多余空格。"
    },
    {
      "defect_id": 123736,
      "sentence": "[HIDEBUG_TRACE_TAG_HDF](_hi_debug.md#hidebug_trace_tag_hdf)&nbsp;&nbsp;&nbsp;(1ULL &lt;&lt; 18)",
      "reference_sentence": "",
      "line_num": 36,
      "context": "",
      "修改建议": "存在多余空格",
      "更改后示例": "[HIDEBUG_TRACE_TAG_HDF](_hi_debug.md#hidebug_trace_tag_hdf) (1ULL &lt;&lt; 18)",
      "触发条件": "当检测到Markdown链接元素后存在连续多个空格（包括普通空格或HTML实体空格&nbsp;）且其后紧跟括号/数字内容时触发。  \n识别模式：匹配形如`[...](...)  +(`或`[...](...)&nbsp;+`的连续空格结构（+表示2个及以上重复），且后方存在非空字符的上下文场景。"
    },
    {
      "defect_id": 174654,
      "sentence": "用户文件访问框架示意图  ",
      "reference_sentence": "",
      "line_num": 69,
      "context": "{\"64\":\"\",\"65\":\"### 用户文件访问框架\",\"66\":\"\",\"67\":\"用户文件访问框架（File Access Framework）是一套提供给开发者访问和管理用户文件的基础框架。该框架依托于OpenHarmony的ExtensionAbility组件机制，提供了一套统一访问用户文件的方法和接口。\",\"68\":\"\",\"69\":\"**图2** 用户文件访问框架示意图  \",\"70\":\"![User file access framework](figures/user-file-access-framework.png)\",\"71\":\"\",\"72\":\"- 各类系统应用或三方应用（即图中的文件访问客户端）若需访问用户文件，如选择一张照片或保存多个文档等，可以通过拉起“文件选择器应用”来实现。\",\"73\":\"\",\"74\":\"- FilePicker：系统预置应用，提供文件访问客户端选择和保存文件的能力，且不需要配置任何权限。FilePicker的使用指导请参见[选择用户文件](select-user-file.md)。\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "用户文件访问框架示意图",
      "触发条件": "检测到文本中存在连续两个或以上半角/全角空格，或句末出现多余空格符（包括中文与英文空格混用场景）。"
    },
    {
      "defect_id": 265116,
      "sentence": "##  接口",
      "reference_sentence": "",
      "line_num": 13,
      "context": "{\"8\":\"\",\"9\":\"## 子组件\",\"10\":\"\",\"11\":\"无\",\"12\":\"\",\"13\":\"##  接口\",\"14\":\"\",\"15\":\"PatternLock(controller?: PatternLockController)\",\"16\":\"\",\"17\":\"**原子化服务API：** 从API version 12开始，该接口支持在原子化服务中使用。\",\"18\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "## 接口",
      "触发条件": "检测到Markdown标题语法（##）与标题文本之间存在多个连续空格时触发，且该行上下文符合标题结构特征（位于章节区隔位置、无其他特殊符号干扰）。\n\n识别模式：通过正则表达式匹配\"^#{1,6}\\s{2,}\\S+\"格式的字符串，并结合上下文位置特征（如前后存在空行分隔、位于文档结构节点位置）确认标题有效性，排除代码块等特殊场景。"
    },
    {
      "defect_id": 363576,
      "sentence": "**建议改法1** ",
      "reference_sentence": "",
      "line_num": 1973,
      "context": "{\"1968\":\"    return a;\",\"1969\":\"  }\",\"1970\":\"}\",\"1971\":\"```\",\"1972\":\"\",\"1973\":\"**建议改法1** \",\"1974\":\"\",\"1975\":\"根据业务逻辑，在else分支中返回合适的数值\",\"1976\":\"\",\"1977\":\"**建议改法2**\",\"1978\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "**建议改法1**",
      "触发条件": "当检测到Markdown粗体语法(**...**)后存在多余空格，或相同格式的连续文本块中存在重复词语时触发。\n\n识别模式：\n1. 使用正则表达式匹配`\\*\\*.*?\\*\\s+`模式，识别粗体标记后跟空格的情况\n2. 通过AST分析文档结构，检测重复的格式块(如连续**建议改法**标题)之间的异常空格\n3. 在特定文档位置(如代码块后的建议段落)检测格式规范一致性"
    },
    {
      "defect_id": 48981,
      "sentence": "常见的转移模式NativeBinding对象包括PixelMap，[PixelMap对象](../reference/apis-image-kit/js-apis-image.md#imagecreatepixelmap8)可以读取或写入图像数据以及获取图像信息",
      "reference_sentence": "",
      "line_num": 26,
      "context": "",
      "修改建议": "句子中'PixelMap'重复",
      "更改后示例": "常见的转移模式NativeBinding对象包括[PixelMap对象](../reference/apis-image-kit/js-apis-image.md#imagecreatepixelmap8)，它可以读取或写入图像数据以及获取图像信息，常用于在应用或系统中显示图片。",
      "触发条件": "当同一词汇在相邻语句中以纯文本和带链接格式重复出现时（如\"PixelMap\"与\"[PixelMap对象...]\"），或同一词汇间隔标点符号但未形成有效同位语关系时触发。\n\n识别模式：\n1. 词汇重复：检测到相邻语句中存在完全相同的核心名词（需排除代词/功能词）\n2. 格式差异：前项为纯文本形式，后项为带链接/括号说明的格式（或相反）\n3. 语义冗余：重复词汇未形成有效解释关系，且后项未引入新信息维度"
    },
    {
      "defect_id": 136281,
      "sentence": "应用程序进程本机内存信息结构类型定义。  |",
      "reference_sentence": "",
      "line_num": 32,
      "context": "{\"27\":\"\",\"28\":\"| 名称 | 描述 | \",\"29\":\"| -------- | -------- |\",\"30\":\"| struct&nbsp;&nbsp;[HiDebug_ThreadCpuUsage](_hi_debug___thread_cpu_usage.md) | 应用程序所有线程的CPU使用率结构体定义。  | \",\"31\":\"| struct&nbsp;&nbsp;[HiDebug_SystemMemInfo](_hi_debug___system_mem_info.md) | 系统内存信息结构类型定义。  | \",\"32\":\"| struct&nbsp;&nbsp;[HiDebug_NativeMemInfo](_hi_debug___native_mem_info.md) | 应用程序进程本机内存信息结构类型定义。  | \",\"33\":\"| struct&nbsp;&nbsp;[HiDebug_MemoryLimit](_hi_debug___memory_limit.md) | 应用程序进程内存限制结构类型定义。  | \",\"34\":\"\",\"35\":\"\",\"36\":\"### 宏定义\",\"37\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "应用程序进程本机内存信息结构类型定义。|",
      "触发条件": "在Markdown表格单元格末尾的标点符号（如句号/逗号）与列分隔符竖线之间出现连续空格，且该空格未用于对齐或特殊排版时触发。  \n识别模式：通过正则表达式匹配形如`[\\u4e00-\\u9fa5。]  +\\|`的中文标点+连续空格+竖线结构，排除含`&nbsp;`等特殊空格的合法场景。"
    },
    {
      "defect_id": 397805,
      "sentence": "逻辑或 |",
      "reference_sentence": "",
      "line_num": 316,
      "context": "{\"311\":\"#### 逻辑运算符\",\"312\":\"\",\"313\":\"| 运算符  | 说明|\",\"314\":\"| ---------- | ----------- |\",\"315\":\"| `a && b`   | 逻辑与 |\",\"316\":\"| `a \\\\|\\\\| b` | 逻辑或 |\",\"317\":\"| `! a`      | 逻辑非 |\",\"318\":\"\",\"319\":\"### 语句\",\"320\":\"\",\"321\":\"#### `If`语句\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "逻辑或|",
      "触发条件": "在Markdown表格单元格内容中，存在运算符/词与表格分隔符\"|\"之间存在多余空格时触发\n\n识别模式需同时满足：\n1. 位于Markdown表格单元格内（通过上下文行包含\"|\"分隔符判断）\n2. 单元格内容符合\"词语 + 空格 + |\"模式（正则表达式：`\\S\\s+\\|`）\n3. 该空格不属于必要语法间隔（如运算符本身需要空格的情况除外）"
    },
    {
      "defect_id": 404552,
      "sentence": "   > 1. 除线程安全函数相关方法外，关键日志如下：  ",
      "reference_sentence": "",
      "line_num": 25,
      "context": "{\"20\":\"\",\"21\":\"   > **关键日志**\",\"22\":\"   >\",\"23\":\"   > 1. 除线程安全函数相关方法外，关键日志如下：\",\"24\":\"   >\",\"25\":\"   >    owner env has been destroyed, owner id: &lt;owner id&gt; , current    env id: &lt;current id&gt;.\",\"26\":\"   >\",\"27\":\"   > 2. 线程安全函数相关方法，关键日志如下：\",\"28\":\"   >\",\"29\":\"   >    current tsfn was created by dead env, owner id: &lt;owner id&gt;, current env id: &lt;current id&gt;\",\"30\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "   > 1. 除线程安全函数相关方法外，关键日志如下：",
      "触发条件": "中文标点符号（如冒号、句号）后存在多余空格，或行末存在多个连续空格时触发；当同一词语连续重复出现（如\"需要需要\"）时触发。"
    },
    {
      "defect_id": 405105,
      "sentence": "    开启混淆开关  ",
      "reference_sentence": "",
      "line_num": 8,
      "context": "{\"3\":\"## 开启源码混淆\",\"4\":\"\",\"5\":\"### 开启混淆步骤\",\"6\":\"源码混淆能力已在系统中集成，可通过以下方式在DevEco Studio开启使用。\",\"7\":\"\",\"8\":\"* 开启混淆开关  \",\"9\":\"    在本模块`build-profile.json5`配置文件中的`arkOptions.obfuscation.ruleOptions`字段中，通过`enable`字段配置是否开启混淆。\",\"10\":\"    ```\",\"11\":\"    \\\"arkOptions\\\": {\",\"12\":\"      \\\"obfuscation\\\": {\",\"13\":\"        \\\"ruleOptions\\\": {\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    开启混淆开关",
      "触发条件": "检测到行末存在两个或更多连续空格，或行内出现非必要的重复空格符时触发。"
    },
    {
      "defect_id": 405108,
      "sentence": "    `consumer-rules.txt`  ",
      "reference_sentence": "",
      "line_num": 60,
      "context": "{\"55\":\"\",\"56\":\"### 三种混淆配置文件\",\"57\":\"* `obfuscation-rules.txt`  \",\"58\":\"    在HAP、HAR和HSP模块的`build-profile.json5`配置文件中，均包含`arkOptions.obfuscation.ruleOptions.files`字段，该字段用于指定当前模块在编译过程中所应用的混淆规则，新建工程时，系统默认会生成混淆规则文件`obfuscation-rules.txt`作为初始配置。\",\"59\":\"\",\"60\":\"* `consumer-rules.txt`  \",\"61\":\"    对于HAR和HSP模块，在`build-profile.json5`中额外有一个`arkOptions.obfuscation.consumerFiles`字段，用于指定当本包被依赖时，期望在当前编译流程生效的混淆规则，新建HAR或HSP模块时会创建默认文件`consumer-rules.txt`。它与`obfuscation-rules.txt`的区别是：**`obfuscation-rules.txt`在编译本模块时生效，`consumer-rules.txt`在编译依赖本模块的其他模块时生效**。\",\"62\":\"\",\"63\":\"\\tbuild-profile.json5配置示例：\",\"64\":\"    ```\",\"65\":\"    \\\"arkOptions\\\": {\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    `consumer-rules.txt`",
      "触发条件": "当检测到文本中存在以反引号包裹的内容后跟随多余空格（如连续两个及以上空格/行尾空格），且在Markdown列表项语法结构中出现时，应触发该规则。  \n\n识别模式：  \n1. 匹配 `*` 或 `-` 开头的列表项中 `文本` 的语法结构  \n2. 定位反引号闭合符 `` ` `` 后出现的连续空格（≥2个）或行尾空格  \n3. 排除代码块内正常缩进场景（通过上下文行号/缩进层级判断）"
    },
    {
      "defect_id": 405618,
      "sentence": "访问元素 | forEach(callbackFn: (value?: T, key?: T, set?: HashSet<T>) => void, thisArg?: Object) | 通过遍历修改整个set的元素。",
      "reference_sentence": "",
      "line_num": 65,
      "context": "{\"60\":\"| 增加元素 | add(value: T) | 增加一个值。 |\",\"61\":\"| 访问元素 | values() | 返回一个迭代器对象，包含set中的所有value值。 |\",\"62\":\"| 访问元素 | entries() | 返回一个迭代器对象，包含类似键值对的数组，键值都是value。 |\",\"63\":\"| 访问元素 | forEach(callbackFn: (value?: T, key?: T, set?: HashSet\\\\<T>) => void, thisArg?: Object) | 遍历访问整个set的元素。 |\",\"64\":\"| 访问元素 | \\\\[Symbol.iterator]():IterableIterator&lt;T&gt; | 创建迭代器以进行数据访问。 |\",\"65\":\"| 修改元素 | forEach(callbackFn: (value?: T, key?: T, set?: HashSet\\\\<T>) => void, thisArg?: Object) | 通过遍历修改整个set的元素。 |\",\"66\":\"| 删除元素 | remove(value: T) | 删除指定的元素。 |\",\"67\":\"| 删除元素 | clear() | 清空整个set。 |\",\"68\":\"\",\"69\":\"## TreeMap\",\"70\":\"\"}",
      "修改建议": "重复了'访问元素 | forEach'，导致方法描述重复。",
      "更改后示例": "修改元素 | forEach(callbackFn: (value?: T, key?: T, set?: HashSet<T>) => void, thisArg?: Object) | 通过遍历修改整个set的元素。",
      "触发条件": "相邻文档条目中除首个竖线前的分类词外，后续方法签名及描述完全相同，且存在相同方法名被不同分类词重复描述的情况。"
    },
    {
      "defect_id": 405107,
      "sentence": "    `obfuscation-rules.txt`  ",
      "reference_sentence": "",
      "line_num": 57,
      "context": "{\"52\":\"    > **注意：**\",\"53\":\"    >\",\"54\":\"    > release编译与debug编译的区别不仅限于混淆。若要明确应用行为差异是否由混淆引起，应通过开启或关闭混淆开关进行排查，而不是仅通过切换编译模式。\",\"55\":\"\",\"56\":\"### 三种混淆配置文件\",\"57\":\"* `obfuscation-rules.txt`  \",\"58\":\"    在HAP、HAR和HSP模块的`build-profile.json5`配置文件中，均包含`arkOptions.obfuscation.ruleOptions.files`字段，该字段用于指定当前模块在编译过程中所应用的混淆规则，新建工程时，系统默认会生成混淆规则文件`obfuscation-rules.txt`作为初始配置。\",\"59\":\"\",\"60\":\"* `consumer-rules.txt`  \",\"61\":\"    对于HAR和HSP模块，在`build-profile.json5`中额外有一个`arkOptions.obfuscation.consumerFiles`字段，用于指定当本包被依赖时，期望在当前编译流程生效的混淆规则，新建HAR或HSP模块时会创建默认文件`consumer-rules.txt`。它与`obfuscation-rules.txt`的区别是：**`obfuscation-rules.txt`在编译本模块时生效，`consumer-rules.txt`在编译依赖本模块的其他模块时生效**。\",\"62\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    `obfuscation-rules.txt`",
      "触发条件": "当检测到文本中存在连续两个或更多空格（非语法/格式要求场景），或重复冗余词汇（如连续重复的单词）时触发，重点检查列表项、代码块引用等结构化内容后的行末空格。  \n\n识别模式：通过正则表达式匹配`\\s{2,}$`识别行末多余空格，结合上下文判断是否属于代码/文件名引用等需简洁格式的场景；通过NLP分词检测相邻重复词汇（如\"the the\"类显性重复）。"
    },
    {
      "defect_id": 404714,
      "sentence": "    include_directories(${NATIVERENDER_ROOT_PATH}  ${NATIVERENDER_ROOT_PATH}/include)",
      "reference_sentence": "",
      "line_num": 120,
      "context": "{\"115\":\"    \",\"116\":\"    if(DEFINED PACKAGE_FIND_FILE)\",\"117\":\"        include(${PACKAGE_FIND_FILE})\",\"118\":\"    endif()\",\"119\":\"    \",\"120\":\"    include_directories(${NATIVERENDER_ROOT_PATH}\",\"121\":\"                        ${NATIVERENDER_ROOT_PATH}/include)\",\"122\":\"    add_library(entry SHARED hello.cpp)\",\"123\":\"    target_link_libraries(entry PUBLIC libace_napi.z.so)\",\"124\":\"    ```\",\"125\":\"2. 需要在工程的build-profile.json5文件中进行以下配置\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    include_directories(${NATIVERENDER_ROOT_PATH} ${NATIVERENDER_ROOT_PATH}/include)",
      "触发条件": "检测到CMake命令参数之间存在两个及以上连续空格，且相邻参数间无换行符分隔时触发修正。"
    },
    {
      "defect_id": 405106,
      "sentence": "    指定release编译  ",
      "reference_sentence": "",
      "line_num": 49,
      "context": "{\"44\":\"    > **说明：**\",\"45\":\"    >\",\"46\":\"    > 1. 在DevEco Studio5.0.3.600之前，新建工程的默认设置是开启源码混淆，自动对API 10及更高版本的Stage模型进行混淆。\",\"47\":\"    > 2. 在DevEco Studio5.0.3.600及之后，新建工程的默认设置为关闭源码混淆。若需开启混淆，需将模块的`build-profile.json5`文件的`ruleOptions.enable`字段设置为true。同时混淆规则配置文件`obfuscation-rules.txt`默认开启了四项推荐的混淆选项：`-enable-property-obfuscation`、`-enable-toplevel-obfuscation`、`-enable-filename-obfuscation`和`-enable-export-obfuscation`，开发者可以根据需要进一步修改混淆配置。\",\"48\":\"\",\"49\":\"* 指定release编译  \",\"50\":\"    源码混淆仅支持release编译，不支持debug编译。开启混淆开关后，release编译会进行混淆，debug编译则不会。开发者可参考[指定构建模式](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/ide-hvigor-compilation-options-customizing-guide#section192461528194916)查看和修改构建模式。\",\"51\":\"\",\"52\":\"    > **注意：**\",\"53\":\"    >\",\"54\":\"    > release编译与debug编译的区别不仅限于混淆。若要明确应用行为差异是否由混淆引起，应通过开启或关闭混淆开关进行排查，而不是仅通过切换编译模式。\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    指定release编译",
      "触发条件": "文本中存在连续两个或以上的空格，或在行末出现多余空格。"
    },
    {
      "defect_id": 408757,
      "sentence": "模块Native库   | 加载libNativeLibrary.so | -                            |",
      "reference_sentence": "",
      "line_num": 37,
      "context": "{\"32\":\"| 本地工程模块   | 加载模块内文件路径       | 要求路径以moduleName开头             |\",\"33\":\"| 本地工程模块   | 加载HAR模块名           | -                            |\",\"34\":\"| 本地工程模块   | 加载HSP模块名           | -                            |\",\"35\":\"| 远程包         | 加载远程HAR模块名        | -                            |\",\"36\":\"| 远程包         | 加载ohpm包名            | -                            |\",\"37\":\"| 模块Native库   | 加载libNativeLibrary.so | -                            |\",\"38\":\"\",\"39\":\"- **加载系统模块**\",\"40\":\"\",\"41\":\"    ```cpp\",\"42\":\"    static napi_value loadModule(napi_env env, napi_callback_info info) {\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "模块Native库|加载libNativeLibrary.so|-|",
      "触发条件": "表格单元格分隔符“|”前后存在多余空格（如多个连续空格或非必要空格），导致格式不规范。"
    },
    {
      "defect_id": 48980,
      "sentence": "常见的共享模式NativeBinding对象包括Context，Context对象包含应用程序组件的上下文信息",
      "reference_sentence": "",
      "line_num": 15,
      "context": "",
      "修改建议": "句子中'Context'重复",
      "更改后示例": "常见的共享模式NativeBinding对象包括Context对象，它包含应用程序组件的上下文信息，提供了一种访问系统服务和资源的方式，使得应用程序组件可以与系统进行交互。",
      "触发条件": "当同一名词(如\"Context\")在相邻分句中重复出现且未使用代词衔接，或存在冗余空格导致表述重复时触发该规则。\n\n具体识别模式：\n1. 名词重复检测：在标点分割的相邻语言单元(分号/逗号分隔)中，检测到完全相同的核心名词重复出现\n2. 衔接缺失判断：重复名词间缺少代词(\"它\"/\"其\")或关联词(\"该\"/\"此\")进行指代衔接\n3. 空格异常检测：名词与量词/修饰词之间出现非常规空格(如\"Context 对象\")，可能暗示表述冗余\n\n示例匹配模式： \n[名词A][标点][空格]*[名词A+量词/修饰词] 结构\n如：\"Context，Context对象\" → \"Context对象，它...\""
    },
    {
      "defect_id": 405519,
      "sentence": "遍历访问整个Deque容器的的每个元素，并执行指定的回调函数。",
      "reference_sentence": "",
      "line_num": 117,
      "context": "{\"112\":\"| --------- | ------- | ------- |\",\"113\":\"| 增加元素 | insertFront(element: T) | 在头部增加一个元素。 |\",\"114\":\"| 增加元素 | insertEnd(element: T) | 在尾部增加一个元素。 |\",\"115\":\"| 访问元素 | getFirst() | 获取第一个元素，不进行出队操作。 |\",\"116\":\"| 访问元素 | getLast() | 获取最后一个元素，不进行出队操作。 |\",\"117\":\"| 访问元素 | forEach(callbackFn:(value: T, index?: number, deque?: Deque&lt;T&gt;) =&gt; void, thisArg?: Object) | 遍历访问整个Deque容器的的每个元素，并执行指定的回调函数。 |\",\"118\":\"| 访问元素 | \\\\[Symbol.iterator]():IterableIterator&lt;T&gt; | 创建迭代器以进行数据访问。 |\",\"119\":\"| 删除元素 | popFirst() | 将队首元素作为返回值进行返回，并将其出队，如果队列为空，则返回undefined。 |\",\"120\":\"| 删除元素 | popLast() | 将队尾元素作为返回值进行返回，并将其出队，如果队列为空，则返回undefined。 |\",\"121\":\"\",\"122\":\"## Queue\"}",
      "修改建议": "'的'字重复出现",
      "更改后示例": "遍历访问整个Deque容器的每个元素，并执行指定的回调函数。",
      "触发条件": "检测到相邻重复汉字或词语（如\"的的\"），或存在多余空格时触发该规则。  \n\n识别模式需满足：  \n1. 连续重复的中文单字或词语（需排除英文术语中的合法重复，如\"Queue\"中的双e）  \n2. 重复单位仅限于语法冗余情况（如\"的的\"），非技术术语/固定表达（如\"迭代器\"中的叠字不触发）  \n3. 上下文排除代码段/符号（如表格中的\"Deque&lt;T&gt;\"不检查）"
    },
    {
      "defect_id": 405518,
      "sentence": "遍历访问整个LinkedList容器的的每个元素，并执行指定的回调函数。",
      "reference_sentence": "",
      "line_num": 90,
      "context": "{\"85\":\"| 访问元素 | list[index: number] | 获取指定index位置对应的元素，但会导致未定义结果。 |\",\"86\":\"| 访问元素 | getFirst() | 获取第一个元素。 |\",\"87\":\"| 访问元素 | getLast() | 获取最后一个元素。 |\",\"88\":\"| 访问元素 | getIndexOf(element: T) | 获取第一个匹配指定元素的位置。 |\",\"89\":\"| 访问元素 | getLastIndexOf(element: T) | 获取最后一个匹配指定元素的位置。 |\",\"90\":\"| 访问元素 | forEach(callbackFn: (value: T, index?: number, list?: LinkedList&lt;T&gt;) =&gt; void, thisArg?: Object) | 遍历访问整个LinkedList容器的的每个元素，并执行指定的回调函数。 |\",\"91\":\"| 访问元素 | \\\\[Symbol.iterator]():IterableIterator&lt;T&gt; | 创建迭代器以进行数据访问。 |\",\"92\":\"| 修改元素 | set(index:number, element: T) | 修改指定index位置的元素值为element。 |\",\"93\":\"| 修改元素 | list[index] = element | 修改指定index位置的元素值为element，但会导致未定义结果。 |\",\"94\":\"| 删除元素 | remove(element: T) | 删除第一个匹配到的元素。 |\",\"95\":\"| 删除元素 | removeByIndex(index:number) | 删除index位置对应的元素。 |\"}",
      "修改建议": "'的'字重复出现",
      "更改后示例": "遍历访问整个LinkedList容器的每个元素，并执行指定的回调函数。",
      "触发条件": "当文本中出现两个相邻且重复的中文字符（如“的的”“了了”），或重复词中间无有效分隔符（如空格或标点）时触发。识别模式需检测连续重复的汉字组合，并排除专有名词或合理重复的情况。"
    },
    {
      "defect_id": 408753,
      "sentence": "本地工程模块   | 加载HAR模块名           | -                            |",
      "reference_sentence": "",
      "line_num": 33,
      "context": "{\"28\":\"| 场景            | 详细分类           | 说明                         |\",\"29\":\"| :------------- | :----------------------------- | :--------------------------- |\",\"30\":\"| 系统模块        |    加载@ohos.*或 @system.*  | -                            |\",\"31\":\"| 本地工程模块   | 加载ets目录下文件中的模块      | 要求路径以ets开头             |\",\"32\":\"| 本地工程模块   | 加载模块内文件路径       | 要求路径以moduleName开头             |\",\"33\":\"| 本地工程模块   | 加载HAR模块名           | -                            |\",\"34\":\"| 本地工程模块   | 加载HSP模块名           | -                            |\",\"35\":\"| 远程包         | 加载远程HAR模块名        | -                            |\",\"36\":\"| 远程包         | 加载ohpm包名            | -                            |\",\"37\":\"| 模块Native库   | 加载libNativeLibrary.so | -                            |\",\"38\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "本地工程模块|加载HAR模块名|-|",
      "触发条件": "当Markdown表格单元格间的竖线分隔符\"|\"前后存在连续空格（非单个对齐空格）时触发，或同一单元格内出现连续重复的竖线符号时触发。通过检测表格行中\"|\"符号两侧的空格密度是否超过单空格对齐需求，或连续出现\"||\"符号进行识别。"
    },
    {
      "defect_id": 408751,
      "sentence": "本地工程模块   | 加载ets目录下文件中的模块      | 要求路径以ets开头             |",
      "reference_sentence": "",
      "line_num": 31,
      "context": "{\"26\":\"\",\"27\":\"## napi_load_module支持的场景\",\"28\":\"| 场景            | 详细分类           | 说明                         |\",\"29\":\"| :------------- | :----------------------------- | :--------------------------- |\",\"30\":\"| 系统模块        |    加载@ohos.*或 @system.*  | -                            |\",\"31\":\"| 本地工程模块   | 加载ets目录下文件中的模块      | 要求路径以ets开头             |\",\"32\":\"| 本地工程模块   | 加载模块内文件路径       | 要求路径以moduleName开头             |\",\"33\":\"| 本地工程模块   | 加载HAR模块名           | -                            |\",\"34\":\"| 本地工程模块   | 加载HSP模块名           | -                            |\",\"35\":\"| 远程包         | 加载远程HAR模块名        | -                            |\",\"36\":\"| 远程包         | 加载ohpm包名            | -                            |\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "本地工程模块|加载ets目录下文件中的模块|要求路径以ets开头|",
      "触发条件": "当Markdown表格单元格内容或管道符两侧出现连续两个及以上空格时触发，需排除正常单空格分隔情况。"
    },
    {
      "defect_id": 405619,
      "sentence": "访问元素 | forEach(callbackFn: (value?: V, key?: K, map?: TreeMap<K, V>) => void, thisArg?: Object) | 通过遍历修改整个map的元素。",
      "reference_sentence": "",
      "line_num": 93,
      "context": "{\"88\":\"| 访问元素 | values() | 返回一个迭代器对象，包含map中的所有value值。 |\",\"89\":\"| 访问元素 | entries() | 返回一个迭代器对象，包含map中的所有键值对。 |\",\"90\":\"| 访问元素 | forEach(callbackFn: (value?: V, key?: K, map?: TreeMap<K, V>) => void, thisArg?: Object) | 遍历访问整个map的元素。 |\",\"91\":\"| 访问元素 | \\\\[Symbol.iterator]():IterableIterator&lt;[K,V]&gt; | 创建迭代器以进行数据访问。 |\",\"92\":\"| 修改元素 | replace(key: K, newValue: V) | 修改指定key对应的value值。 |\",\"93\":\"| 修改元素 | forEach(callbackFn: (value?: V, key?: K, map?: TreeMap<K, V>) => void, thisArg?: Object) | 通过遍历修改整个map的元素。 |\",\"94\":\"| 删除元素 | remove(key: K) | 删除map中匹配到的键值对。 |\",\"95\":\"| 删除元素 | clear() | 清空整个map。 |\",\"96\":\"\",\"97\":\"## TreeSet\",\"98\":\"\"}",
      "修改建议": "重复了'访问元素 | forEach'，导致方法描述重复。",
      "更改后示例": "修改元素 | forEach(callbackFn: (value?: V, key?: K, map?: TreeMap<K, V>) => void, thisArg?: Object) | 通过遍历修改整个map的元素。",
      "触发条件": "同一方法名（如`forEach`）在不同表格条目中重复出现，且其前置分类词（如“访问元素”或“修改元素”）与功能描述存在逻辑矛盾（如“访问”与“修改”冲突）。"
    },
    {
      "defect_id": 417558,
      "sentence": "**示例**  ",
      "reference_sentence": "",
      "line_num": 270,
      "context": "{\"265\":\"> **说明：**\",\"266\":\">\",\"267\":\"> 1. 主线程文件名不带线程号信息，因此写入文件会发生覆盖刷新。\",\"268\":\"> 2. 子线程文件名带线程号tId，并且tId不重复，因此每个子线程对应单独一个文件。如需查找对应线程文件，可通过日志中的线程号打印或者trace工具查看线程号进行对应。\",\"269\":\"\",\"270\":\"**示例**  \",\"271\":\"当前测试应用bundleName为com.example.myapplication，应用内创建了一个子线程，线程号为18089（随机）。  \",\"272\":\"文件生成路径：data/app/el2/100/base/com.example.myapplication/files  \",\"273\":\"主线程文件名：data/app/el2/100/base/com.example.myapplication/files/com.example.myapplication_redundant_file.txt  \",\"274\":\"子线程文件名：data/app/el2/100/base/com.example.myapplication/files/com.example.myapplication_18089_redundant_file.txt  \",\"275\":\"![deferrable-tool-file](figures/deferrable-tool-file.png)\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "**示例**",
      "触发条件": "检测到中文或英文内容中存在连续两个及以上空格，或特定标点符号（如中文句号、冒号）后出现多余空格时触发。"
    },
    {
      "defect_id": 435722,
      "sentence": "OH_JSVM_CreateEnv(vm, sizeof(descriptor) / sizeof(descriptor[0]), descriptor, &env);",
      "reference_sentence": "",
      "line_num": 60,
      "context": "{\"55\":\"           {\\\"consoleinfo\\\", NULL, &param[0], NULL, NULL, NULL, JSVM_DEFAULT},\",\"56\":\"           {\\\"add\\\", NULL, &param[1], NULL, NULL, NULL, JSVM_DEFAULT},\",\"57\":\"       };\",\"58\":\"       // create env, register native method, and open env scope\",\"59\":\"       JSVM_Env env;\",\"60\":\"       OH_JSVM_CreateEnv(vm, sizeof(descriptor) / sizeof(descriptor[0]), descriptor, &env);\",\"61\":\"      // ...\",\"62\":\"       OH_JSVM_DestroyEnv(env);\",\"63\":\"      // ...\",\"64\":\"   }\",\"65\":\"   ```\"}",
      "修改建议": "句子中存在多余空格",
      "更改后示例": "OH_JSVM_CreateEnv(vm,sizeof(descriptor)/sizeof(descriptor[0]),descriptor,&env);",
      "触发条件": "检测到函数/宏调用参数列表中存在逗号后紧跟空格的情况，或运算符(如sizeof、/等)前后存在多余空格时触发。  \n\n识别模式：通过正则表达式匹配代码中`, `（逗号+空格）的结构，或运算符前后出现非必要空格（如`sizeof (`或` / `），结合项目编码规范判断是否需要紧缩空格。"
    },
    {
      "defect_id": 441667,
      "sentence": "组件导航 (Navigation)(推荐)",
      "reference_sentence": "",
      "line_num": 1,
      "context": "{\"1\":\"# 组件导航 (Navigation)(推荐)\",\"2\":\"\",\"3\":\"组件导航（Navigation）主要用于实现页面间以及组件内部的页面跳转，支持在不同组件间传递跳转参数，提供灵活的跳转栈操作，从而更便捷地实现对不同页面的访问和复用。本文将从组件导航（Navigation）的显示模式、路由操作、子页面管理、跨包跳转以及跳转动效等几个方面进行详细介绍。\",\"4\":\"\",\"5\":\"[Navigation](../reference/apis-arkui/arkui-ts/ts-basic-components-navigation.md)是路由导航的根视图容器，一般作为页面（@Entry）的根容器，包括单栏（Stack）、分栏（Split）和自适应（Auto）三种显示模式。Navigation组件适用于模块内和跨模块的路由切换，通过组件级路由能力实现更加自然流畅的转场体验，并提供多种标题栏样式来呈现更好的标题和内容联动效果。一次开发，多端部署场景下，Navigation组件能够自动适配窗口显示大小，在窗口较大的场景下自动切换分栏展示效果。\",\"6\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "组件导航(Navigation)(推荐)",
      "触发条件": "当中文字符与后续半角括号之间存在多余空格，或中英文术语重复时括号前后存在多余空格，触发该规则。识别模式为检测“中文+空格+半角括号”结构或“中文术语(英文术语)”格式中的非必要空格。"
    },
    {
      "defect_id": 481870,
      "sentence": "**系统能力**：SystemCapability.Account.OsAccount",
      "reference_sentence": "",
      "line_num": 2216,
      "context": "{\"2211\":\"\",\"2212\":\"创建用户认证的实例。\",\"2213\":\"\",\"2214\":\"**系统接口：** 此接口为系统接口。\",\"2215\":\"\",\"2216\":\"**系统能力**：SystemCapability.Account.OsAccount\",\"2217\":\"\",\"2218\":\"**错误码：**\",\"2219\":\"\",\"2220\":\"| 错误码ID | 错误信息       |\",\"2221\":\"| -------- | ------------- |\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "**系统能力：**SystemCapability.Account.OsAccount",
      "触发条件": "当Markdown格式的粗体关键词（如**系统能力**）后紧跟冒号时，冒号前存在多余空格（如**系统能力**：），需移除空格以确保格式正确。"
    },
    {
      "defect_id": 481874,
      "sentence": "**系统能力**：SystemCapability.Account.OsAccount",
      "reference_sentence": "",
      "line_num": 2941,
      "context": "{\"2936\":\"\",\"2937\":\"创建PIN码认证的实例。\",\"2938\":\"\",\"2939\":\"**系统接口：** 此接口为系统接口。\",\"2940\":\"\",\"2941\":\"**系统能力**：SystemCapability.Account.OsAccount\",\"2942\":\"\",\"2943\":\"**错误码：**\",\"2944\":\"\",\"2945\":\"| 错误码ID | 错误信息       |\",\"2946\":\"| -------- | ------------- |\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "**系统能力：**SystemCapability.Account.OsAccount",
      "触发条件": "检测到中文标点符号（如冒号/句号）前存在多余空格，或特定格式标记（如**加粗标题**）与中文标点之间存在非常规空格时触发。"
    },
    {
      "defect_id": 480340,
      "sentence": "> **说明：**  ",
      "reference_sentence": "",
      "line_num": 3002,
      "context": "{\"2997\":\"\",\"2998\":\"addAccount(name: string, extraInfo?: string): Promise&lt;void&gt;\",\"2999\":\"\",\"3000\":\"根据账号名和额外信息添加应用账号。使用callback异步回调。使用Promise异步回调。\",\"3001\":\"\",\"3002\":\"> **说明：**  \",\"3003\":\"> 从API version 7开始支持，从API version 9开始废弃。建议使用[createAccount](#createaccount9-2)替代。\",\"3004\":\"\",\"3005\":\"**系统能力：** SystemCapability.Account.AppAccount\",\"3006\":\"\",\"3007\":\"**参数：**\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "> **说明：**",
      "触发条件": "文本中存在连续两个或更多空格，或在标点符号（如冒号、句号）后出现多余空格，且该空格位于格式化区块（如Markdown引用块`> **标签：**`）的固定结构尾部时触发。  \n识别模式：通过正则表达式匹配`(\\:\\s{2,})`或结合上下文结构（如`> **.*?：**\\s+`）检测标点后的冗余空格。"
    },
    {
      "defect_id": 491070,
      "sentence": "1.命令行参数传入的路径中不能包含空格，例如，SDK 路径不能为 `\\DevEco Studio\\sdk`。",
      "reference_sentence": "",
      "line_num": 35,
      "context": "{\"30\":\"| --project-folder           | 扫描文件夹路径，如扫描单个文件不需要加此参数，将单个文件路径加在命令行最后即可。 |\",\"31\":\"| --homecheck                |增加对编译期无法检查的运行时错误的排查。|\",\"32\":\"\",\"33\":\"**注意事项：**\",\"34\":\"\",\"35\":\"1.命令行参数传入的路径中不能包含空格，例如，SDK 路径不能为 `\\\\DevEco Studio\\\\sdk`。\",\"36\":\"\",\"37\":\"2.推荐先基于ArkTS1.1编译工程。否则，可能会缺失工程的模块间依赖，导致部分规则漏扫或误扫。\",\"38\":\"\",\"39\":\"设备要求： 建议使用32GB及以上Windows环境扫描。在扫描过程中发生了out of memory的错误，可以为node添加参数\\\"--max-old-space-size=8192\\\"，可以解决部分场景问题.\",\"40\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "1.命令行参数传入的路径中不能包含空格，例如，SDK路径不能为`\\DevEco Studio\\sdk`。",
      "触发条件": "中文文本中出现两个或以上连续空格（非代码块内），或中英文/数字间存在多余空格。"
    },
    {
      "defect_id": 520300,
      "sentence": "Create Instance\rCreate Instance",
      "reference_sentence": "",
      "line_num": 194,
      "context": "{\"189\":\"\",\"190\":\"#### 执行结果\",\"191\":\"\",\"192\":\"在LOG中输出下面的结果：\",\"193\":\"\",\"194\":\"Create Instance\",\"195\":\"\",\"196\":\"NAPI MyObject::New newTarget != nullptr\",\"197\":\"\",\"198\":\"NewInstance:{\\\"name\\\":\\\"lilei\\\"}\",\"199\":\"\"}",
      "修改建议": "存在重复的句子",
      "更改后示例": "Create Instance",
      "触发条件": "相邻行或段落中出现完全相同的连续文本内容，且中间夹杂空行/空格分隔符。\n\n同一文档范围内存在重复字符串（≥2次），且重复内容间隔符仅含空白字符（空格/空行）。"
    },
    {
      "defect_id": 516377,
      "sentence": "    // 此处循环使用6张预定义的图片资源（例如：startIcon, background, foreground等）",
      "reference_sentence": "",
      "line_num": 36,
      "context": "{\"31\":\"   export function loadPicture(count: number): IconItemSource[] {\",\"32\":\"     let iconItemSourceList: IconItemSource[] = [];\",\"33\":\"     // 遍历添加6*count个IconItem的数据\",\"34\":\"     for (let index = 0; index < count; index++) {\",\"35\":\"       const numStart: number = index * 6;\",\"36\":\"       // 此处循环使用6张预定义的图片资源（例如：startIcon, background, foreground等）\",\"37\":\"       iconItemSourceList.push(new IconItemSource('$media:startIcon', `item${numStart + 1}`));\",\"38\":\"       iconItemSourceList.push(new IconItemSource('$media:background', `item${numStart + 2}`));\",\"39\":\"       iconItemSourceList.push(new IconItemSource('$media:foreground', `item${numStart + 3}`));\",\"40\":\"       iconItemSourceList.push(new IconItemSource('$media:startIcon', `item${numStart + 4}`));\",\"41\":\"       iconItemSourceList.push(new IconItemSource('$media:background', `item${numStart + 5}`));\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "    // 此处循环使用6张预定义的图片资源（例如：startIcon,background,foreground等）",
      "触发条件": "在逗号分隔的列表项中，当逗号后存在多余空格且该空格不属于引号/括号内合法内容时触发。\n\n识别模式：通过正则表达式匹配\",\\s+[\\w$]\"结构（逗号后跟空格+有效字符），需排除引号/括号包裹的场景，特别关注代码注释/文档中的示例枚举项。"
    },
    {
      "defect_id": 517671,
      "sentence": "在LOG中输出：　JSVM Trigger Fatal-Error: success",
      "reference_sentence": "",
      "line_num": 156,
      "context": "{\"151\":\"\",\"152\":\"const char* srcCallNative = R\\\"JS(triggerFatalError())JS\\\";\",\"153\":\"\",\"154\":\"#### 执行结果：\",\"155\":\"\",\"156\":\"在LOG中输出：　JSVM Trigger Fatal-Error: success\",\"157\":\"\",\"158\":\"### OH_JSVM_SetHandlerForPromiseReject\",\"159\":\"通过OH_JSVM_SetHandlerForPromiseReject，用户可以设置处理Promise Reject的函数。当多次调用这个API进行函数设置时，仅最后一次设置会生效。当用户传入的设置函数为NULL时，则表示取消之前设置的处理函数。\",\"160\":\"#### cpp部分代码：\",\"161\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "在LOG中输出：JSVM Trigger Fatal-Error: success",
      "触发条件": "检测到文本中存在全角空格或标点符号后出现多余空格，或相邻词语重复出现时触发。具体表现为中文与英文/符号间使用全角空格，或同一词语连续重复（如“的的”）。"
    },
    {
      "defect_id": 517670,
      "sentence": "在LOG中输出：　JSVM Trigger OOM-Error: success",
      "reference_sentence": "",
      "line_num": 91,
      "context": "{\"86\":\"\",\"87\":\"const char *srcCallNative = R\\\"JS(triggerOOMError();)JS\\\";\",\"88\":\"\",\"89\":\"#### 执行结果\",\"90\":\"\",\"91\":\"在LOG中输出：　JSVM Trigger OOM-Error: success\",\"92\":\"\",\"93\":\"### OH_JSVM_SetHandlerForFatalError\",\"94\":\"通过OH_JSVM_SetHandlerForFatalError，用户可以设置处理Fatal Error的函数。当多次调用这个API进行函数设置时，仅最后一次设置会生效。当用户传入的设置函数为NULL时，则表示取消之前设置的处理函数。\",\"95\":\"#### cpp部分代码：\",\"96\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "在LOG中输出：JSVM Trigger OOM-Error: success",
      "触发条件": "当中文或英文标点符号（如冒号、句号）后存在多余空格，或非语法/格式规范要求的连续空格时触发。通过检测标点后紧跟的空格字符（含全角/半角）或非单词边界处的连续空格识别。"
    },
    {
      "defect_id": 520915,
      "sentence": "搭配`--migrate`使用，在扫描后询问用户是否进行修复。  ",
      "reference_sentence": "",
      "line_num": 37,
      "context": "{\"32\":\"| --migration-report         | 生成迁移报告。                                                 |\",\"33\":\"| --sdk-default-api-path     | OHOS SDK路径，以openharmony/ets结尾。                          |\",\"34\":\"| --sdk-external-api-path    | HOS SDK路径，以default/hms/ets结尾，传入错误路径将不会生效也不会报错。|\",\"35\":\"| --arkts-whole-project-path | 完整工程路径。                                                 |\",\"36\":\"| --project-folder           | 扫描文件夹路径，如扫描单个文件不需要加此参数，将单个文件路径加在命令行最后即可。 |\",\"37\":\"| --autofix-check            |搭配`--migrate`使用，在扫描后询问用户是否进行修复。  |\",\"38\":\"| --homecheck                |增加对编译期无法检查的运行时错误的排查。   |\",\"39\":\"\",\"40\":\"**注意事项：**\",\"41\":\"\",\"42\":\"1. 命令行参数中传入的路径不能包含空格，例如，SDK路径不能为 `/DevEco Studio/sdk`。\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "搭配`--migrate`使用，在扫描后询问用户是否进行修复。",
      "触发条件": "中文文本中存在中英文符号间多余空格（如中文与反引号代码间空格），或标点符号前后存在多余空格。"
    },
    {
      "defect_id": 535851,
      "sentence": "**系统能力：** SystemCapability.Utils.Lang",
      "reference_sentence": "",
      "line_num": 2493,
      "context": "{\"2488\":\"\",\"2489\":\"**系统能力：** SystemCapability.Utils.Lang\",\"2490\":\"\",\"2491\":\"### 属性\",\"2492\":\"\",\"2493\":\"**系统能力：** SystemCapability.Utils.Lang\",\"2494\":\"\",\"2495\":\"**原子化服务API**：从API version 20开始，该接口支持在原子化服务中使用。\",\"2496\":\"\",\"2497\":\"| 名称     | 类型                | 只读 | 可选 | 说明                                                           |\",\"2498\":\"| -------- | ------------------ | ---- | ---- | ------------------------------------------------------------- |\"}",
      "修改建议": "重复句子，出现在第2489行和第2493行",
      "更改后示例": "**系统能力：** SystemCapability.Utils.Lang（此能力在属性和接口中均适用）",
      "触发条件": "当相邻段落或同一章节内出现完全相同的系统能力声明语句（含相同SystemCapability标识符），且上下文表明属于同一能力适用范围时触发。"
    },
    {
      "defect_id": 536195,
      "sentence": "如果不遵从该约束，将会导致程序编译失败。 ",
      "reference_sentence": "",
      "line_num": 29,
      "context": "{\"24\":\"\",\"25\":\"**级别**\",\"26\":\"\",\"27\":\"约束分为两个级别：错误、警告。\",\"28\":\"\",\"29\":\"- **错误**: 必须要遵从的约束。如果不遵从该约束，将会导致程序编译失败。 \",\"30\":\"- **警告**: 推荐遵从的约束。尽管现在违反该约束不会影响编译流程，但是在将来，违反该约束可能将会导致程序编译失败。\",\"31\":\"\",\"32\":\"**不支持的特性**\",\"33\":\"\",\"34\":\"目前，不支持的特性主要包括：\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "如果不遵从该约束，将会导致程序编译失败。",
      "触发条件": "中文句子中存在非必要空格（如标点符号后、词语间意外插入的空格）或相邻重复词汇（如\"将将\"等叠词外的重复现象）。通过检测中文字符间异常空格符、连续相同词汇（排除合法叠词）进行识别。"
    },
    {
      "defect_id": 549112,
      "sentence": "状态管理调试调优",
      "reference_sentence": "",
      "line_num": 5,
      "context": "{\"1\":\"#  UI调试调优\",\"2\":\"\",\"3\":\"本章节主要介绍UI的调试调优能力，用于提高开发者的调测应用的效率，提升应用开发者体验。\",\"4\":\"\",\"5\":\"## 状态管理调试调优\",\"6\":\"\",\"7\":\"为提升开发者定位状态管理的问题的效率和易用性，UI提供专门针对状态变量的调试和调优能力，将状态变量的黑盒信息暴露给开发者，让开发者白盒化地了解状态变量和UI组件变化过程，提升开发者开发高性能应用的效率。\",\"8\":\"\",\"9\":\"### 状态变量dump调试能力\",\"10\":\"\"}",
      "修改建议": "存在重复字'调'",
      "更改后示例": "状态管理调试与调优",
      "触发条件": "相邻词语的首字或尾字存在重复汉字，且中间无连接词/分隔符（如“与”“、”等），且重复部分不属于固定搭配（如“调调”为音乐术语则不触发）。"
    },
    {
      "defect_id": 549436,
      "sentence": " - master：最新开发版本。  ",
      "reference_sentence": "",
      "line_num": 19,
      "context": "{\"14\":\"\",\"15\":\"## OpenHarmony文档版本分支说明\",\"16\":\"\",\"17\":\"### 最新版本\",\"18\":\"\",\"19\":\" - master：最新开发版本。  \",\"20\":\"\",\"21\":\" - OpenHarmony 5.1.0 Release版本（API Level 18）：点击[此处](zh-cn/release-notes/OpenHarmony-v5.1.0-release.md)了解版本详情。\",\"22\":\"\",\"23\":\" - OpenHarmony 5.0.3 Release版本（API Level 15）：点击[此处](zh-cn/release-notes/OpenHarmony-v5.0.3-release.md)了解版本详情。\",\"24\":\"\"}",
      "修改建议": "句子末尾有多余空格",
      "更改后示例": " - master：最新开发版本。",
      "触发条件": "检测到中文标点符号后存在多余空格（如句号、逗号后跟空格）或行末存在多余空格时触发规则。"
    },
    {
      "defect_id": 522164,
      "sentence": "预期结果：",
      "reference_sentence": "",
      "line_num": 212,
      "context": "{\"207\":\"// 样例测试js\",\"208\":\"const char *srcCallNative = R\\\"JS(coerceToString(22222))JS\\\";\",\"209\":\"```\",\"210\":\"<!-- @[oh_jsvm_coerce_to_string](https://gitee.com/openharmony/applications_app_samples/blob/master/code/DocsSample/ArkTS/JSVMAPI/JsvmUsageGuide/JsvmAboutPrimitive/coercetostring/src/main/cpp/hello.cpp) -->\",\"211\":\"\",\"212\":\"预期结果：\",\"213\":\"```\",\"214\":\"JSVM OH_JSVM_CoerceToString success\",\"215\":\"```\",\"216\":\"\",\"217\":\"### OH_JSVM_GetBoolean\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "预期结果:",
      "触发条件": "检测到中文标点符号（如冒号）后存在多余空格，或特定格式词组（如\"预期结果：\"）中出现标点与文字间非规范空格时触发。识别模式为中文语境下标点与后续内容间存在U+0020空格符。"
    },
    {
      "defect_id": 551808,
      "sentence": "type AttributeWithTagCb = (tagName: string, key: string, value: string) => boolean\r",
      "reference_sentence": "",
      "line_num": 1073,
      "context": "{\"1068\":\"// note\",\"1069\":\"```\",\"1070\":\"\",\"1071\":\"## AttributeWithTagCb<sup>20+</sup>\",\"1072\":\"\",\"1073\":\"type AttributeWithTagCb = (tagName: string, key: string, value: string) => boolean\",\"1074\":\"\",\"1075\":\"**原子化服务API：** 从API version 20开始，该接口支持在原子化服务中使用。\",\"1076\":\"\",\"1077\":\"**系统能力：** SystemCapability.Utils.Lang\",\"1078\":\"\"}",
      "修改建议": "句子末尾存在多余的回车符",
      "更改后示例": "type AttributeWithTagCb = (tagName: string, key: string, value: string) => boolean",
      "触发条件": "检测到行末存在多余的回车符（表现为连续空行）或代码块/语法结构后出现冗余换行。具体表现为当前行内容结束后，跟随超过1个仅含换行符的空行（如上下文1073行定义后出现冗余空行1074）。"
    },
    {
      "defect_id": 549114,
      "sentence": "状态变量及关联的自定义组件及内置组件信息",
      "reference_sentence": "",
      "line_num": 19,
      "context": "{\"14\":\"\",\"15\":\"- jsdump: 请求状态管理中的dump信息；\",\"16\":\"- viewHierarchy: 打印自定义组件树信息，默认只打印根自定义组件；\",\"17\":\"- r: 递归从根节点打印，自定义组件和其拥有的elemetid；\",\"18\":\"- viewId: 打印指定viewId的自定义组件树；\",\"19\":\"- stateVariable： 打印出状态变量及关联的自定义组件及内置组件信息，状态变量变化，这些关联的自定义组件和内置组件会被标脏；\",\"20\":\"- registerdElementIds: 打印当前自定义组件拥有的elementId；\",\"21\":\"- viewId：打印指定自定义组件信息，每个自定义组件有唯一的viewId；\",\"22\":\"\",\"23\":\"介绍上述命令行参数后，下面给出一个嵌套2层子组件，分别使用'@State', '@Link'的典型示例，用于静态展示状态变量修改影响的UI组件范围信息， 用于指导开发者调测。\",\"24\":\"\"}",
      "修改建议": "存在重复字'及'",
      "更改后示例": "状态变量及关联的自定义组件和内置组件信息",
      "触发条件": "同一连词（如\"及\"）在相邻分句或并列结构中重复出现，且间隔不超过两个其他词语时，应触发重复词修正规则。识别模式为检测并列结构中重复使用的连词（如\"及...及...\"），并确认其连接成分属于同一逻辑层级。"
    },
    {
      "defect_id": 557046,
      "sentence": "从API version 12 开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 140,
      "context": "{\"135\":\"\",\"136\":\"constructor()\",\"137\":\"\",\"138\":\"默认构造函数创建一个异步锁。\",\"139\":\"\",\"140\":\"**原子化服务API**：从API version 12 开始，该接口支持在原子化服务中使用。\",\"141\":\"\",\"142\":\"**系统能力：** SystemCapability.Utils.Lang\",\"143\":\"\",\"144\":\"**返回值：**\",\"145\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "检测到数字与后续文字之间存在多个连续空格（例如\"version 12 开始\"中的双空格），且该空格位于版本号等数值表述场景时触发。\n\n识别模式：通过正则表达式匹配(\\b\\d+)\\s{2,}(\\p{Alpha})结构（如API version [数字][2+空格][汉字/字母]），排除正常英文单词间隔和标点符号后的合法空格场景。"
    },
    {
      "defect_id": 549110,
      "sentence": "UI调试调优",
      "reference_sentence": "",
      "line_num": 1,
      "context": "{\"1\":\"#  UI调试调优\",\"2\":\"\",\"3\":\"本章节主要介绍UI的调试调优能力，用于提高开发者的调测应用的效率，提升应用开发者体验。\",\"4\":\"\",\"5\":\"## 状态管理调试调优\",\"6\":\"\"}",
      "修改建议": "存在重复字'调'",
      "更改后示例": "UI调试优化",
      "触发条件": "相邻词语或同一复合词中存在重复汉字（如“调试”与“调优”共享“调”字），且重复字位于词语首尾衔接处时触发。需同时排除成语、专有名词等合理重复场景。\n\n识别模式：\n1. 检测相邻词语首尾字重复（如“调试|调优”拆分为“调-试”与“调-优”）\n2. 验证重复字是否造成语义冗余（如“调试调优”可优化为“调试优化”）\n3. 结合上下文排除固定搭配（如“谢谢”等合理双字重复）"
    },
    {
      "defect_id": 553716,
      "sentence": "在ArkTS1.2主模块中引入ArkTS1.1 WrappedBuilder对象。",
      "reference_sentence": "",
      "line_num": 63,
      "context": "{\"58\":\"\\\"dependencies\\\": {\",\"59\":\"  \\\"har1_1\\\": \\\"file:../har1_1\\\"\",\"60\":\"}\",\"61\":\"```\",\"62\":\"\",\"63\":\"- 在ArkTS1.2主模块中引入ArkTS1.1 WrappedBuilder对象。\",\"64\":\"\",\"65\":\"```TypeScript\",\"66\":\"'use static';\",\"67\":\"\",\"68\":\"// entry/src/main/ets/pages/MainPage.ets\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "在ArkTS1.2主模块中引入ArkTS1.1WrappedBuilder对象。",
      "触发条件": "当文本中出现由字母、数字和点组成的版本标识符（如ArkTS1.1）后接空格及大写字母开头的专有名词（如WrappedBuilder）时，且两者实际应连写为单一完整命名时触发。"
    },
    {
      "defect_id": 553747,
      "sentence": "ArkTS1.2使用ArkTS1.1 WrappedBuilder对象",
      "reference_sentence": "",
      "line_num": 150,
      "context": "{\"145\":\"    - [嵌入ArkTS组件](ndk-embed-arkts-components.md)\",\"146\":\"    - [通过XComponent接入无障碍](ndk-accessibility-xcomponent.md)\",\"147\":\"  - 使用互操作功能构建UI<!--arkts-use-interop-ui-->\",\"148\":\"    - [ArkTS1.2使用ArkTS1.1自定义组件](interop-compatible-component.md)\",\"149\":\"    - [ArkTS1.2使用ArkTS1.1全局自定义构建函数](interop-compatible-builder.md)\",\"150\":\"    - [ArkTS1.2使用ArkTS1.1 WrappedBuilder对象](interop-compatible-WrappedBuilder.md)\",\"151\":\"- UI开发 (兼容JS的类Web开发范式)<!--ui-js-dev-->\",\"152\":\"  - [UI开发 (兼容JS的类Web开发范式)概述](ui-js-overview.md)\",\"153\":\"  - 框架说明<!--js-framework-overview-->\",\"154\":\"    - [文件组织](js-framework-file.md)\",\"155\":\"    - [js标签配置](js-framework-js-tag.md)\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "ArkTS1.2使用ArkTS1.1WrappedBuilder对象",
      "触发条件": "当检测到版本号（由字母+数字构成）与后续专有名词之间存在多余空格，且二者组合构成完整术语时触发。具体表现为字母数字组合后接空格+首字母大写的连续名词。"
    },
    {
      "defect_id": 557044,
      "sentence": "从API version 12 开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 72,
      "context": "{\"67\":\"\",\"68\":\"type AsyncLockCallback\\\\<T> = () => T | Promise\\\\<T>\",\"69\":\"\",\"70\":\"这是一个补充类型别名，表示[lockAsync](#lockasync)函数所有重载中的回调。\",\"71\":\"\",\"72\":\"**原子化服务API**：从API version 12 开始，该接口支持在原子化服务中使用。\",\"73\":\"\",\"74\":\"**系统能力：** SystemCapability.Utils.Lang\",\"75\":\"\",\"76\":\"### AsyncLock\",\"77\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "当版本号（由\"API version\"引导的数字序列）与后续动词之间出现多个连续空格时触发，识别模式为\"API version \\d+ {2,}\"结构（数字后跟两个及以上空格）"
    },
    {
      "defect_id": 557043,
      "sentence": "从API version 12 开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 23,
      "context": "{\"18\":\"\",\"19\":\"isSendable(value: Object | null | undefined): boolean\",\"20\":\"\",\"21\":\"该方法用于判断value是否为Sendable数据类型。\",\"22\":\"\",\"23\":\"**原子化服务API：** 从API version 12开始，该接口支持在原子化服务中使用。\",\"24\":\"\",\"25\":\"**系统能力：** SystemCapability.Utils.Lang\",\"26\":\"\",\"27\":\"**参数：**\",\"28\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "当文本中出现\"API version X\"版本号格式（X为数字）后接两个及以上连续空格时触发，特别是当空格后接\"开始\"等表示版本生效时间的动词时。\n\n识别模式：匹配\"API version \\d+ {2,}\"正则表达式结构（\\d+代表数字，{2,}代表两个及以上空格），结合后接动词的语义上下文（如\"开始\"、\"起\"等版本生效描述词）。"
    },
    {
      "defect_id": 557047,
      "sentence": "从API version 12 开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 162,
      "context": "{\"157\":\"\",\"158\":\"static request(name: string): AsyncLock\",\"159\":\"\",\"160\":\"查找指定名称的异步锁实例，如果未找到，则创建该实例。\",\"161\":\"\",\"162\":\"**原子化服务API**：从API version 12 开始，该接口支持在原子化服务中使用。\",\"163\":\"\",\"164\":\"**系统能力：** SystemCapability.Utils.Lang\",\"165\":\"\",\"166\":\"**参数：**\",\"167\":\"\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "检测到版本号等数字与后续文字之间存在多个连续空格时触发，特别是在\"API version X\"模式中数字与\"开始\"等中文词语之间出现多余空格的情况。\n\n识别模式：使用正则表达式匹配形如`\\b(version\\s+\\d+)\\s{2,}([\\u4e00-\\u9fa5])`的结构，其中数字部分(\\d+)与后续中文之间包含≥2个空格时判定为违规。"
    },
    {
      "defect_id": 557045,
      "sentence": "从API version 12 开始，该接口支持在原子化服务中使用。",
      "reference_sentence": "",
      "line_num": 82,
      "context": "{\"77\":\"\",\"78\":\"实现异步锁功能的类，允许在锁下执行异步操作。该类使用[@Sendable装饰器](../../arkts-utils/arkts-sendable.md)装饰。\",\"79\":\"\",\"80\":\"#### 属性\",\"81\":\"\",\"82\":\"**原子化服务API**：从API version 12 开始，该接口支持在原子化服务中使用。\",\"83\":\"\",\"84\":\"**系统能力：** SystemCapability.Utils.Lang\",\"85\":\"\",\"86\":\"| 名称 | 类型   | 只读 | 可选 | 说明       |\",\"87\":\"| ---- | ------ | ---- | ---- | ---------- |\"}",
      "修改建议": "存在多余空格",
      "更改后示例": "从API version 12开始，该接口支持在原子化服务中使用。",
      "触发条件": "当数字与后续中文字符之间存在多余空格（如\"12 开始\"中的数字后空格），或连续重复词汇间存在冗余空格时触发。通过识别\"数字+空格+中文\"或\"重复词+空格+重复词\"的文本模式定位问题。"
    }
  ]
}